<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>FarPoint.Win</name>
  </assembly>
  <members>
    <member name="T:FarPoint.Win.SuperEdit.AbstractFmtParsed">
      <summary>AbstractFmtParsedクラスを実装します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.AbstractFmtParsed.FromFormattedString(System.String)">
      <summary>書式付き文字列の「値」を解析して返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.AbstractFmtParsed.ToFormattedString(System.Object)">
      <summary>渡された値の書式付き文字列（および属性）を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.AbstractFmtParsed.FromUnformattedString(System.String)">
      <summary>書式なし文字列の「値」を解析して返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.AbstractFmtParsed.ToUnformattedString(System.Object)">
      <summary>渡された値の書式なし文字列を返します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.AbstractFmtParsed.HasRegionSettings">
      <summary>特定の地域設定セット（デフォルト以外）を 持っているかどうかを指定するプロパティ。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.AbstractFmtParsed.RegionSettings">
      <summary>地域設定を取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.AbstractFmtParser">
      <summary>AbstractFmtParserクラスを実装します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.AbstractFmtParser.FORMAT_PREDEFINED_COLORS">
      <summary>文字列テーブルの定数。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.AbstractFmtParser.parseErrorCharIndex">
      <summary>書式文字列の解析中にエラーがあると、 問題が開始する先頭文字の インデックスを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.AbstractFmtParser.stringTable">
      <summary>StringTableで使用するディクショナリを設定します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.AbstractFmtParser.defaultStringTable">
      <summary>文字列テーブルが指定されていない場合のデフォルト文字列テーブル。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.AbstractFmtParser.CreateDefaultStringTable">
      <summary>呼び出されるとデフォルト文字列テーブルを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.AbstractFmtParser.ParseFormatString(System.String,FarPoint.Win.SuperEdit.MaskType)">
      <summary>書式文字列を各部分に解析します。</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.AbstractFmtParser.StrTblComparer">
      <summary>このクラスは、デフォルト文字列テーブルを実装するための 簡単な実装を提供します。文字列テーブルのKEYは１つの 整数にすぎないため、２つの整数を比較するこの１つの メソッドがあるだけです。</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.EraList">
      <summary>EraList</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.EraList.IsDateInEra(System.DateTime,System.Int32)">
      <summary>指定した日付がこの年号の開始日と終了日の間にある場合に Trueを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.EraList.AdjustDateForEra(FarPoint.Win.SuperEdit.EraList,System.DateTime,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
      <summary>このメソッドは指定された日付のある期間に対応する 年号の日付を調整します。成功した場合はTrueを返し、 調整できない場合はFalseを返します。注意：「年号」は １から始まります（1～eraList.Length）。</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.FmtParsedExcel">
      <summary>ParsedFmtString</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.FmtParsedExcel.FMT_COND_POS">
      <summary>これらを使用して配列のインデックスを定義します。 最後は条件の数です。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedExcel.FromFormattedString(System.String)">
      <summary>書式付き文字列の「値」を解析して返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedExcel.ToFormattedString(System.Object)">
      <summary>渡された値の書式付き文字列（および属性）を返します。 返されるオブジェクトは、文字列から派生した FormattedExcelString型のオブジェクトです。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.FmtParsedExcel.fmtStrList">
      <summary>各型の書式文字列（正、負、ゼロ、テキスト、 または成功／失敗の条件）。 この配列は最大「NUM_OF_CONDS」個の要素（4）を持つことができます。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.FmtParsedExcel.fmtStrStartIndex">
      <summary>各書式「セクション」が開始する位置の追跡記録を管理します。 各部分の元の書式文字列へのインデックスを格納します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.FmtParsedExcel.fmtColorList">
      <summary>各型の書式文字列（正、負、ゼロ、テキスト、 または成功／失敗の条件）。 この配列は最大「NUM_OF_CONDS」個の要素（4）を持つことができます。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.FmtParsedExcel.operand">
      <summary>オペランドは複数のメソッドによって使用される一時変数です。値： 0 - 条件なし、 1 - 小なり（&amp;lt;）、 2 - 以下（&amp;lt;=）、 3 - 等しい（=）、 4 - 以上（&amp;gt;=）、 5 - 大なり（&amp;gt;）、 6 - 等しくない（≠）</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.FmtParsedExcel.testValue">
      <summary>使用する書式文字列を決定するために、渡される 値と比較する値。</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.FmtParsedExcel.CompareType">
      <summary>0 - 条件なし、 1 - 小なり（&amp;lt;）、 2 - 以下（&amp;lt;=）、 3 - 等しい（=）、 4 - 以上（&amp;gt;=）、 5 - 大なり（&amp;gt;）、 6 - 等しくない（≠）</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.CustomMaskEventArgs">
      <summary>CustomMaskイベントのイベントデータを表します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.CustomMaskEventArgs.MaskUser0">
      <summary>ユーザーコールバック（'0'）</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.CustomMaskEventArgs.MaskUser1">
      <summary>ユーザーコールバック（'1'）</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.CustomMaskEventArgs.MaskUser2">
      <summary>ユーザーコールバック（'2'）</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.CustomMaskEventArgs.MaskUser3">
      <summary>ユーザーコールバック（'3'）</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.CustomMaskEventArgs.MaskUser4">
      <summary>ユーザーコールバック（'4'）</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.CustomMaskEventArgs.MaskUser5">
      <summary>ユーザーコールバック（'5'）</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.CustomMaskEventArgs.MaskUser6">
      <summary>ユーザーコールバック（'6'）</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.CustomMaskEventArgs.MaskUser7">
      <summary>ユーザーコールバック（'7'）</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.CustomMaskEventArgs.MaskUser8">
      <summary>ユーザーコールバック（'8'）</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.CustomMaskEventArgs.MaskUser9">
      <summary>ユーザーコールバック（'9'）</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.CustomMaskEventArgs.#ctor(System.Int32,System.Char)">
      <summary>新しいCustomMaskEventArgsオブジェクトを構築します。</summary>
      <param name="mask">マスクのインデックス</param>
      <param name="inChar">マスクの入力文字</param>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.CustomMaskEventArgs.InputCharacter">
      <summary>入力文字を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.CustomMaskEventArgs.CustomMaskCharacter">
      <summary>カスタムマスク文字を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.CustomMaskEventArgs.CustomMaskIndex">
      <summary>カスタムマスクのインデックスを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.CustomMaskEventArgs.Valid">
      <summary>値が有効かどうかを表すブール値を取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.CustomMaskEventHandler">
      <summary>CustomMaskイベントを処理する定義済みメソッドを表します。</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.FmtParsedPicMask">
      <summary>FmtParsedPicMask</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.IManageFmtInput">
      <summary>指定したユーザー入力アクションが書式に有効かどうかを判定する手段を提供し、アクションの結果を与えるインタフェース。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.IManageFmtInput.GetInitialText">
      <summary>書式の初期テキストを返します。</summary>
      <remarks>新しい値を開始するときに使用します。注意:これは、すべてのテキストを選択し、insertTextパラメーターにNullまたは空の文字列を指定してChangeText()を呼び出した場合と同じ結果になります。</remarks>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.IManageFmtInput.CharInput(System.Int32,System.Char,System.String,System.Int32,System.Int32,System.String@,System.Int32@,System.Boolean)">
      <summary>指定した条件で入力文字が許可される場合、結果のテキストと位置を返します。許可されない場合はFalseを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.IManageFmtInput.ChangeText(System.String,System.Int32,System.Int32,System.String,System.String@,System.Int32@,System.Boolean)">
      <summary>指定した条件で変更が許可される場合、結果のテキストと位置を返します。（入力が無効であることが原因で）変更が行われなかった場合、Falseを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.IManageFmtInput.ChangeText(System.String,System.String@)">
      <summary>指定した条件で変更が許可される場合、結果のテキストを返します。（入力が無効であることが原因で）変更が行われなかった場合、Falseが返されます。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.IManageFmtInput.GetInitialInputPos(System.String)">
      <summary>指定したテキストの初期入力位置を返します。この初期位置は最初の入力位置でない場合があります。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.IManageFmtInput.IsInputAllowedAtPos(System.String,System.Int32)">
      <summary>指定したテキストについて、指定した位置（インデックス）での入力が許可されるかどうかを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.IManageFmtInput.GetLastPosInputIsAllowed(System.String)">
      <summary>指定したテキストの入力を受け取ることができる最後の位置を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.IManageFmtInput.GetNextInputPos(System.String,System.Int32,System.Int32)">
      <summary>方向、現在のテキスト、および現在の位置に従って、次の入力位置を返します。前の方向を指定する場合は、方向パラメーターに-1を指定します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.IManageFmtInput.GetCaretTypeAtPos(System.String,System.Int32)">
      <summary>指定したテキストの位置を表す値、InputPosType.InsertPos、 .FixedFldPos、.LiteralPosのいずれかを 返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.IManageFmtInput.IncrementValue(System.String,System.Int32,System.Object,System.Boolean,System.Object,System.String@,System.Int32@)">
      <summary>テキストが表す値を（「incrAmt」の記号に応じて） インクリメントまたはデクリメントします。</summary>
      <param name="currText">現在のテキスト文字列</param>
      <param name="position">位置インデックス</param>
      <param name="incrAmt">インクリメントする量</param>
      <param name="wrapValueFlag">複数行に折り返すかどうか</param>
      <param name="initValueIfBlank">空白の場合の初期値</param>
      <param name="resultText">結果のテキスト文字列</param>
      <param name="resultCaretPos">結果の入力位置</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.IManageFmtInput.GetFormatStringAtPos(System.String,System.Int32)">
      <summary>指定したテキストの指定した位置にある、フィールドの書式文字列を返します。</summary>
      <remarks>例:Format String: "d/mm/yy"、currText: "25/12/02"、position: 3の場合、このメソッドは"mm"を返します。位置が無効な場合は""を返します。リテラル位置の場合は、その位置の文字の前に円記号を付けて返します（"\c"。"c"は実際の文字）。</remarks>
      <param name="currText">現在のテキスト文字列</param>
      <param name="position">位置インデックス</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.IManageFmtInput.IsNegative(System.String)">
      <summary>地域設定に従って、文字列が負であるかどうかを返します。</summary>
      <param name="text">テキスト文字列</param>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IManageFmtInput.MinimumValue">
      <summary>許容される最小値を取得または設定します。（オプション。クリアするにはNullに設定します。）</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IManageFmtInput.MaximumValue">
      <summary>許容される最大値を取得または設定します。（オプション。クリアするにはNullに設定します。）</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IManageFmtInput.InitialValue">
      <summary>文字列がNullの場合の初期値を取得または設定します。（オプション。クリアするにはNullに設定します。）</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.FromFormattedString(System.String)">
      <summary>書式付き文字列の値を解析して返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.ToFormattedString(System.Object)">
      <summary>渡された値の書式付き文字列（および属性）を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.FromUnformattedString(System.String)">
      <summary>書式なし文字列の値を解析して返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.ToUnformattedString(System.Object)">
      <summary>渡された値の書式なし文字列を返します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.FmtParsedPicMask.maskList">
      <summary>マスク文字とリテラルのリスト。リテラルの場合、 maskList内の位置はその位置にリテラルがあることを 指定するだけで、実際のリテラル文字を取得するには 「literals」フィールドからそれを取得する必要があります。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.GetInitialText">
      <summary>これは書式の初期テキストを返します。新しい値を開始するときに 使用します。注意：これは、選択されたすべてのテキストから 呼び出された「ChangeText()」と、Nullまたは空の 「insertText」引数と同じ結果になります。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.CharInput(System.Int32,System.Char,System.String,System.Int32,System.Int32,System.String@,System.Int32@,System.Boolean)">
      <summary>指定された条件で文字を許可した場合、結果の テキストと位置を返します。許可しない場合は Falseを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.ChangeText(System.String,System.String@)">
      <summary>指定された条件で変更を許可した場合、 結果のテキストを返します。（無効な入力による） 変更が行われなかった場合、Falseを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.ChangeText(System.String,System.Int32,System.Int32,System.String,System.String@,System.Int32@,System.Boolean)">
      <summary>指定された条件で変更を許可した場合、結果の テキストと位置を返します。（無効な入力による） 変更が行われなかった場合、Falseを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.GetInitialInputPos(System.String)">
      <summary>指定したテキストの初期入力位置を返します。 この初期位置は最初の入力位置でない場合があります。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.IsInputAllowedAtPos(System.String,System.Int32)">
      <summary>指定したテキストの指定した位置（インデックス）の 入力を許可するかどうかを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.GetLastPosInputIsAllowed(System.String)">
      <summary>指定したテキストの入力を受け取れる 最後の位置を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.GetNextInputPos(System.String,System.Int32,System.Int32)">
      <summary>方向、現在のテキスト、および現在の位置によって決まる 次の入力位置を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.GetCaretTypeAtPos(System.String,System.Int32)">
      <summary>指定したテキストの位置を表す値、InputPosType.InsertPos、 .FixedFldPos、.LiteralPosのいずれかを 返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.IncrementValue(System.String,System.Int32,System.Object,System.Boolean,System.Object,System.String@,System.Int32@)">
      <summary>テキストが表す値を（「incrAmt」の記号に応じて） インクリメントまたはデクリメントします。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.GetFormatStringAtPos(System.String,System.Int32)">
      <summary>指定したテキストの指定した位置のフィールドに対する 書式文字を返します。 例：Format String: "d/mm/yy"、currText: "25/12/02" position: 3。このメソッドは"mm"を返します。 位置が無効の場合、""を返します。 リテラル位置の場合、その位置の文字の前にバックスラッシュを 付けて返します（"\c"。「c」は実際の文字）。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.FmtParsedPicMask.MinimumValue">
      <summary>最小値（オプション）。クリアするにはNullに設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.FmtParsedPicMask.MaximumValue">
      <summary>最大値（オプション）。クリアするにはNullに設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.FmtParsedPicMask.InitialValue">
      <summary>文字列がNullの場合は初期値（オプション）。 クリアするにはNullに設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.FmtParsedTypeMask">
      <summary>ParsedTypeMaskString</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.FromFormattedString(System.String)">
      <summary>書式付き文字列の「値」を解析して返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.ToFormattedString(System.Object)">
      <summary>渡された値の書式付き文字列（および属性）を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.FromUnformattedString(System.String)">
      <summary>書式なし文字列の「値」を解析して返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.ChangeText(System.String,System.String@)">
      <summary>指定された条件で変更を許可した場合、 結果のテキストを返します。（無効な入力による） 変更が行われなかった場合、Falseを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.ChangeText(System.String,System.Int32,System.Int32,System.String,System.String@,System.Int32@,System.Boolean)">
      <summary>指定された条件で変更を許可した場合、結果の テキストと位置を返します。（無効な入力による） 変更が行われなかった場合、Falseを返します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.FmtParsedTypeMask.displayLeadingZero">
      <summary>浮動小数点値が1.0未満で-1.0より大きい（0.xx）場合、 先頭のゼロを表示するかどうかを決定します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.FmtParsedTypeMask.daylessDate">
      <summary>日付書式を月と年のみにするかどうかを決定します。 その場合、日にちは常に１であると見なされます。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.GetFldStrList(System.Int32,FarPoint.Win.SuperEdit.IRegionalSettings)">
      <summary>このフィールドに関連付けられたリストがある場合それを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.GetAllValues(System.String)">
      <summary>「フィールド値」に渡されたテキスト文字列を解析してそのバイナリ値を、 新たに割り当てたMaskFldValueオブジェクトに入れます。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.FmtFldIdAtPos(System.Int32,System.Int32@,System.Int32@,System.String,System.Int32,System.Boolean)">
      <summary>文字列内のこの位置に指定した書式フィールドIDを返します。 注意：引数「uPos」のみが必須です。それ以外はすべてオプションです。 ただし、SpecialMaskのデータ型が浮動小数点値または整数の場合は 「tstrText」と「uTextLen」が必須になります。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.GetVarFldLen(System.Int32,System.String,System.Int32)">
      <summary>テキストの開始位置の可変長フィールドの 長さを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.GetBinaryValue(System.Int32,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean@,System.Int32@)">
      <summary>この関数は指定されたフィールドタイプに対する文字の文字列を バイナリ値に変換します。 たとえば、フィールドタイプMM（２桁月）に「03」が指定された場合、 引数「pBinaryValBuff」に３の値を返します。 別の例を挙げると、フィールドタイプMM（３文字表示の月）に 「JUN」が指定された場合、６の値を引数に返します。 「fNormalizeStr」がTrueの場合、「eFldValFmt」がMaskFmtInt またはMaskFmtFltWhlのときにCopyNumberWithoutThSep()を呼び出します。 文字列を変換できる場合、非Null値を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.CopyNumberDigitsAndSign(System.String,System.Int32,System.Int32@,System.Int32@)">
      <summary>負号、小数点、数字以外をすべて取り除いた数値のテキストを バッファ同士でコピーします。返された長さ、 および指定した現在の位置を調整します。OKの場合は 新しい文字列、それ以外の場合はNullを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.AdjustInputLenForNumber(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32@,System.Boolean)">
      <summary>文字列を解析して、実際のテキストを参照する場合の このフィールドの真の長さを決定します。 処理する次のインデックスを返します。フィールドに対する有効な文字が 見つからなかった場合、開始インデックスを返します（uFldStartIndex）。 引数「fFindFldEnd」はTrueのとき、この関数はフィールドの 最後とみなすものに達するまですべての文字を処理します。 それ以外の場合は「uTargetPos」の文字、 または最初に現われるフィールドの最後を 処理した後に停止します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.VerifyCharForFldAtPos(System.Char,System.Int32,System.String@,System.Int32@,System.Int32,System.Int32,System.Int32,System.Boolean@)">
      <summary>フィールド値が有効範囲にあることを確認します（たとえば、月の場合は1～12。 日の場合は1～31）。 注意：ここでは、文字は有効文字のことです（数値の場合は 数字、テキストフィールドの場合は文字。例：３文字表示の月）。 文字を次のフィールドに適用する必要がある場合は２を返します。 OKの場合は１、エラーの場合は０。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.ProcessDayOfWeekChg(System.String@,System.Int32,System.Int32,System.Int32,System.Int32@)">
      <summary>処理が完了してOKの場合、Trueを返します。 それ以外の場合は、最小範囲／最大範囲外の日付など エラーが発生した場合はFalseを返します。 注意：引数posWithinFldは指定したフィールド内の 現在の位置です。文字列内のこの位置をまず決定し、 「posWithinFld」に追加する必要があります。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.ProcessEraChange(System.String@,System.Int32,System.Int32,System.Int32,System.Int32@)">
      <summary>処理が完了してOKの場合、Trueを返します。 それ以外の場合は、最小範囲／最大範囲外の日付など エラーが発生した場合はFalseを返します。 注意：引数posWithinFldは指定したフィールド内の 現在の位置です。文字列内のこの位置をまず決定し、 「posWithinFld」に追加する必要があります。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.FmtParsedTypeMask.minValue">
      <summary>最小値（オプション）。クリアするにはNullに設定します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.FmtParsedTypeMask.maxValue">
      <summary>最大値（オプション）。クリアするにはNullに設定します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.FmtParsedTypeMask.initialValue">
      <summary>文字列がNullの場合は初期値（オプション）。 クリアするにはNullに設定します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.GetInitialText">
      <summary>これは書式の初期テキストを返します。新しい値を開始するときに 使用します。注意：これは、選択されたすべてのテキストから 呼び出された「ChangeText()」と、Nullまたは空の 「insertText」引数と同じ結果になります。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.CharInput(System.Int32,System.Char,System.String,System.Int32,System.Int32,System.String@,System.Int32@,System.Boolean)">
      <summary>指定された条件で文字を許可した場合、結果の テキストと位置を返します。許可しない場合は Falseを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.GetInitialInputPos(System.String)">
      <summary>指定したテキストの初期入力位置を返します。 この初期位置は最初の入力位置でない場合があります。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.IsInputAllowedAtPos(System.String,System.Int32)">
      <summary>指定したテキストの指定した位置（インデックス）の 入力を許可するかどうかを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.GetLastPosInputIsAllowed(System.String)">
      <summary>指定したテキストの入力を受け取れる 最後の位置を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.GetNextInputPos(System.String,System.Int32,System.Int32)">
      <summary>方向、現在のテキスト、および現在の位置によって決まる 次の入力位置を返します。有効な「次の位置」がない場合、 -1を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.GetCaretTypeAtPos(System.String,System.Int32)">
      <summary>指定されたテキスト内の位置を表す値、 INSERT_POS、FIXEDFLD_POS、LITERAL_POSの いずれかを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.VerifyInputKeyForNumber(System.Int32,System.Char,System.String,System.Int32,System.Int32,System.Int32@,System.Boolean)">
      <summary>数値（整数または浮動小数点値）の文字を処理します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.GetFmtFldFracStartPos(System.String,System.Int32)">
      <summary>浮動小数点値の小数部の、渡される文字列内の 開始位置を返します。 注意：「startPos」はオプションです（指定されていない場合は-1を渡します）。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.FindPosAtDecimal(System.String,System.Boolean)">
      <summary>小数点を基準とする新しいテキストと希望の位置が指定された場合、 新しいテキスト内の新しいカーソル位置を 決定します。</summary>
      <returns>小数点が見つからない場合-1を返します。それ以外の場合は、 小数点を基準とする正しい位置を返します。</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.FindNewCaretPosForNumStr(System.String,System.Int32,System.Int32,System.Boolean,System.String)">
      <summary>桁数内の新しいテキストと新しい位置が指定された場合、 新しいテキスト内の新しいカーソル位置を決定します。</summary>
      <remarks>桁数がわからない場合は、<i>maxNumOfDigits</i>引数に-1を指定します。</remarks>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.GetNumericDigitsInField(System.String,System.Int32)">
      <summary>beginPosから開始し、長さがmaxLengthの文字列の桁数をカウントします。 maxLengthが-1の場合は、text.Lengthを使用します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.DeleteCharsFromNumStr(System.String,System.Int32,System.Int32,System.Boolean,System.String@,System.Int32@,System.Boolean@)">
      <summary>数値文字列（整数または浮動小数点値）から文字を削除します。 小数点の左側の数値から数字と負号を削除し、 小数点の右側から取り除いた桁をすべて０に 置き換えます。エラーがない場合、TRUEを返します。 任意の変更が文字列に行われた場合、返される パラメータ「retDataChanged」はTrueになります。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.InsertStrIntoNumStr(System.String,System.Int32,System.String,System.Boolean,System.String@,System.Int32@,System.Boolean@)">
      <summary>数値文字列（整数または浮動小数点値）から文字を削除します。 小数点の左側の数値から数字と負号を削除し、 小数点の右側から取り除いた桁をすべて０に 置き換えます。エラーがない場合、TRUEを返します。 任意の変更が文字列に行われた場合、返される パラメータ「retDataChanged」はTrueになります。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.FindFldPos(System.String,System.Int32,System.Int32@,System.Int32@)">
      <summary>指定したフィールドの開始位置と終了位置を返します。 見つかった場合はTrue、それ以外の場合はFalseを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.AdjustCaretPosForNumStr(System.String,System.Int32,System.String,System.Boolean)">
      <summary>古い文字列内の古い位置の桁数をカウントし、 新しい文字列内の同じ位置を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.DeleteCharsFromDateTime(System.String,System.Int32,System.Int32,System.Boolean,System.String@,System.Int32@,System.Boolean@)">
      <summary>日付／時刻文字列から文字を削除します。 すべての位置を０または空白に置き換えるだけで、実際に削除される 文字はありません。「リセット」するだけです。エラーがない場合、 TRUEを返します。任意の変更が文字列に行われた場合、 返されるパラメータ「retDataChanged」はTrueになります。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.InsertStrIntoDateTime(System.String,System.Int32,System.String,System.String@,System.Int32@,System.Boolean@)">
      <summary>日付／時刻文字列に文字を挿入します。 エラーがない場合、TRUEを返します。任意の変更が文字列に行われた場合、 返されるパラメータ「retDataChanged」はTrueになります。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.SkipLitCharsInDateTimeInsertStr(System.Text.StringBuilder,System.Int32,System.String,System.Int32,System.Int32@)">
      <summary>このリテラル文字の文字列の後ろに配置するために参照する 位置の「挿入文字列」へのインデックスを返します。 挿入文字列内の文字がなくなった場合、「insertStr」の長さを 挿入文字列へのインデックスとして返します。 リテラル文字を含まない場合「currText」に 文字を追加できることに注意してください。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.SkipSpecialLitCharsInDateTimeInsertStr(System.Text.StringBuilder,System.Int32,System.String,System.Int32,System.Int32@,System.Int32)">
      <summary>この特殊リテラル文字の文字列の後ろに配置するために 参照する位置の「挿入文字列」へのインデックスを返します。 挿入文字列内の文字がなくなった場合、「insertStr」の 長さを挿入文字列へのインデックスとして返します。 特殊リテラル文字（日付区切り記号、時刻区切り記号など）を含まない場合 「currText」に文字を追加できることに注意してください。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.GetLiteralStrAtPos(System.Int32,System.Int32@,System.String)">
      <summary>「pos」のリテラル文字を返します。その位置に何もない場合、 Nullを返します。「retBeginIndex」はテキスト内の リテラル文字列が開始する位置を返します。数値の場合、 現在のテキストを引数として受け取らないので 機能しません。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.ValidateChanges(FarPoint.Win.SuperEdit.MaskFldValue,System.Boolean@)">
      <summary>この関数はフィールドが有効であることを確認し、 範囲外である場合にそれらを変更します（日付または時刻の場合。 整数と浮動小数点値は変更しません）。 有効でなく変更できない場合はNullを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.ValidateChanges(System.String,System.Int32,System.Boolean@)">
      <summary>この関数はフィールドが有効であることを確認し、 範囲外である場合にそれらを変更します（日付または時刻の場合。 整数と浮動小数点値は変更しません）。 有効でなく変更できない場合はNullを返します。</summary>
      <param name="text">テキスト文字列</param>
      <param name="beginPosOfNonFullFld">不完全なフィールドがない場合は-1を渡し、 それ以外の場合はインデックスを指定します。</param>
      <param name="dataChanged">データが変更されたかどうか</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.IncrementValue(System.String,System.Int32,System.Object,System.Boolean,System.Object,System.String@,System.Int32@)">
      <summary>テキストが表す値を（「incrAmt」の記号に応じて） インクリメントまたはデクリメントします。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.CompareWithShortMonths(System.String,System.Int32@)">
      <summary>文字列が短い月名の１つに一致した場合は1～12の範囲の月インデックスを、 それ以外の場合は-1を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.CompareWithLongMonths(System.String,System.Int32@)">
      <summary>文字列が長い月名の１つに一致した場合は1～12の範囲の月インデックスを、 それ以外の場合は-1を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.CompareWithShortDays(System.String,System.Int32@)">
      <summary>文字列が短い曜日名の１つに一致した場合は1～7の範囲の曜日インデックスを、 それ以外の場合は-1を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.CompareWithLongDays(System.String,System.Int32@)">
      <summary>文字列が長い曜日名の１つに一致した場合は1～7の範囲の曜日インデックスを、 それ以外は-1を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.CompareWithAmPm(System.String,System.Int32@)">
      <summary>文字列がAmとPmのどちらかに一致した場合、 0または1のAm/Pmインデックスを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.CompareWithShortEras(System.String,System.Int32@)">
      <summary>文字列が年号のいずれかに一致した場合は、0～（年号数 - 1）の 範囲の年号インデックス、それ以外の場合は-1を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.CompareWithLongEras(System.String,System.Int32@)">
      <summary>文字列が年号のいずれかに一致した場合は、0～（年号数 - 1）の 範囲の年号インデックス、それ以外の場合は-1を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.CmpStrWithStrListHelper(System.String[],System.String,System.Int32@)">
      <summary>s内の文字列に一致した場合、「リスト」（0～len - 1）への インデックスを返します。それ以外の場合は-1を返します。 比較する際に文字列の長さは無視されます。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.VerifyListFldValue(System.Int32,System.String)">
      <summary>指定したテキストに最も近い文字列を返します。 一致しない場合Nullを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.PrivGetInitialLeadingText">
      <summary>最初の入力位置より前のテキストを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.GetFormatStringAtPos(System.String,System.Int32)">
      <summary>指定したテキストの指定した位置のフィールドに対する 書式文字を返します。 例：Format String: "d/mm/yy"、currText: "25/12/02" position: 3。このメソッドは"mm"を返します。 位置が無効の場合、""を返します。 リテラル位置の場合、その位置の文字の前にバックスラッシュを 付けて返します（"\c"。「c」は実際の文字）。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.IsGregorianCalendar">
      <summary>現在グレゴリオ暦に基づいている場合、Trueを返します。</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.FmtStrParserExcel">
      <summary>ParsedFmtString</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserExcel.#ctor">
      <summary>コンストラクタ（文字列テーブルオブジェクトなし）。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserExcel.#ctor(System.Collections.IDictionary)">
      <summary>コンストラクタ（文字列テーブルディクショナリ付き）。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserExcel.ParseFormatString(System.String,FarPoint.Win.SuperEdit.MaskType)">
      <summary>書式文字列を各部分に解析します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserExcel.GetColorForColorIndex(System.Int32)">
      <summary>「色インデックス」を.NETの「Color」オブジェクトに変換します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserExcel.DivideString(System.String,FarPoint.Win.SuperEdit.FmtParsedExcel@)">
      <summary>文字列をスキャンして、セミコロン（;）で区切った 複数のセクションに区切ります。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserExcel.ParseForConditionals(FarPoint.Win.SuperEdit.FmtParsedExcel@)">
      <summary>書式文字列の各「部分」を解析し、 条件を探します。</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.FmtStrParserExcel.FmtColor">
      <summary>書式文字列内で認識される色を定義します。</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.FmtStrParserPicMask">
      <summary>ParsedPicMaskString</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserPicMask.ParseFormatString(System.String,FarPoint.Win.SuperEdit.MaskType)">
      <summary>書式文字列を各部分に解析します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserPicMask.GetMaskCodeForChar(System.Char)">
      <summary>渡された文字の「マスクコード」を返します。マスク文字でない場合、 SE_MASK_LITを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserPicMask.IsMaskChar(System.Char)">
      <summary>文字がPic Maskセットのメンバである場合、TRUEを返します。</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.FmtStrParserTypeMask">
      <summary>ParsedTypeMaskString</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserTypeMask.ParseFormatString(System.String,FarPoint.Win.SuperEdit.MaskType)">
      <summary>書式文字列を各部分に解析します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserTypeMask.ParseChar(System.String,System.Int32,System.Int32@,System.Char@,System.Int32@)">
      <summary>書式文字列の１文字を解析します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserTypeMask.MaxCharCountForParseFld(System.Int32)">
      <summary>このIDに許可するCの最大数を返します（例：「Y」の 場合最大４個のY（YYYY）なので４を返します）。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserTypeMask.GetLitSegNearFld(System.Int32,System.Boolean,System.Int32@,System.Int32@)">
      <summary>フィールド間にセグメントがない（FALSE）場合、Posに０、Lenに０が入ります。 fBeforeFldがTRUEの場合フィールドの前、それ以外の場合はフィールドの後ろ。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserTypeMask.GetLitSegBeforeFld(System.Int32,System.Int32@,System.Int32@)">
      <summary>フィールド間にセグメントがない（FALSE）場合、Posに０、Lenに０が入ります。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserTypeMask.WasFldSpecifiedInString(System.Int32,System.Int32@)">
      <summary>指定したフィールドが書式文字列内に含まれていた場合、 （文字列内の文字数と共に）TRUEを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserTypeMask.GetNumOfFields">
      <summary>m_uFormatOrderCountの値（見つかったフィールドの数）を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserTypeMask.GetFldIdAtOrderPos(System.Int32,System.Int32@,System.Int32@)">
      <summary>要求された順序インデックスにあるフィールドIDを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserTypeMask.FillFmtFldArrays">
      <summary>Parserオブジェクトから情報を取り出し、書式フィールド配列と 区切り記号配列を設定します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserTypeMask.ValidateFldArrays(System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList,System.String)">
      <summary>このメソッドは可変長フィールドが、リテラル区切り記号 （非数値）の間か、固定長フィールドの間に存在することを 確認します。２つの数値の可変長フィールドを 並べるときには必ず区切り記号で区切ります。 さらに、可変長フィールドは固定長の数値フィールドの 前に置くことはできません。 問題がある場合、例外をスローします。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserTypeMask.GetFldFmtForParsedFldId(System.Int32,System.Int32)">
      <summary>指定したパーサーフィールドの書式マスクID（MaskFmtYY）を返します。</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.GeneralFormatter">
      <summary>GeneralFormatterインタフェースを実装します。</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.ISEditFormatter">
      <summary>値と文字列の相互変換を行う各種オブジェクトに必要な メソッドとプロパティを定義するインタフェース。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.ISEditFormatter.FromFormattedString(System.String)">
      <summary>書式付き文字列の値を解析して返します。</summary>
      <param name="value">書式付き文字列</param>
      <returns>解析した値</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.ISEditFormatter.ToFormattedString(System.Object)">
      <summary>渡された値の書式付き文字列（および属性）を返します。</summary>
      <param name="value">値を含むオブジェクト</param>
      <returns>書式付き文字列（および属性）</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.ISEditFormatter.FromUnformattedString(System.String)">
      <summary>書式なし文字列の値を解析して返します。</summary>
      <param name="value">書式なし文字列</param>
      <returns>解析した値</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.ISEditFormatter.ToUnformattedString(System.Object)">
      <summary>渡された値の書式なし文字列を返します。</summary>
      <param name="value">値を含むオブジェクト</param>
      <returns>書式なし文字列</returns>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.ISEditFormatter.RegionSettings">
      <summary>地域設定（地域オプション）を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.ISEditFormatter.ManageInput">
      <summary>実装されている場合、ユーザー入力の検証および書式設定に使用する エディタを許可するメソッドをサポートします。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.cnvtbLiteralDelimiter">
      <summary>リテラルの区切り記号</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseEmptyUndefined">
      <summary>空の未定義</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseNumericValue">
      <summary>数値</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseTextValue">
      <summary>テキスト値</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseDateValue">
      <summary>日付値</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseFormulaValue">
      <summary>数式値</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseCurrencyValue">
      <summary>通貨値</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpsePercentValue">
      <summary>パーセント値</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseDecodeInvalidDate">
      <summary>無効な日付</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseDecodeValidDate">
      <summary>有効な日付</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseDecodeDateResultsMask">
      <summary>日付マスク</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseDecodeTimeResultsMask">
      <summary>時刻マスク</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseDecodeInvalidTime">
      <summary>無効な時刻</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseDecodeValidTime">
      <summary>有効な時刻</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseYear">
      <summary>年</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseMonth">
      <summary>月</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseDay">
      <summary>日</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseHour">
      <summary>時</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseMinute">
      <summary>分</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSecond">
      <summary>秒</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseTimeDesignator">
      <summary>時刻指定子</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolUndefined">
      <summary>未定義の記号</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolUnknown">
      <summary>不明な記号</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolNumbericDigits">
      <summary>数字記号</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolNumberUsedForDate">
      <summary>日付用数字記号</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolNumberUsedForTime">
      <summary>時刻用数字記号</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolWhiteSpace">
      <summary>空白記号</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolMinus">
      <summary>マイナス記号</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolComma">
      <summary>コンマ記号</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolTimeAMStringGrp">
      <summary>AM時刻記号</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolTimePMStringGrp">
      <summary>PM時刻記号</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolDateSeparatorGrp">
      <summary>日付区切り記号</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolTimeSeparatorGrp">
      <summary>時刻区切り記号</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolMonthNameGrp">
      <summary>月名記号</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolMonthName1Grp">
      <summary></summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolMonthName2Grp">
      <summary></summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolMonthName3Grp">
      <summary></summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolMonthName4Grp">
      <summary></summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolMonthName5Grp">
      <summary></summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolMonthName6Grp">
      <summary></summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolMonthName7Grp">
      <summary></summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolMonthName8Grp">
      <summary></summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolMonthName9Grp">
      <summary></summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolMonthName10Grp">
      <summary></summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolMonthName11Grp">
      <summary></summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolMonthName12Grp">
      <summary></summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolShortMonthNameGrp">
      <summary>短縮月名記号</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolShortMonthName1Grp">
      <summary></summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolShortMonthName2Grp">
      <summary></summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolShortMonthName3Grp">
      <summary></summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolShortMonthName4Grp">
      <summary></summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolShortMonthName5Grp">
      <summary></summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolShortMonthName6Grp">
      <summary></summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolShortMonthName7Grp">
      <summary></summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolShortMonthName8Grp">
      <summary></summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolShortMonthName9Grp">
      <summary></summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolShortMonthName10Grp">
      <summary></summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolShortMonthName11Grp">
      <summary></summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseSymbolShortMonthName12Grp">
      <summary></summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseDatePartsMaximum">
      <summary>日付部分の最大数</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseTimePartsMaximum">
      <summary>時刻部分の最大数</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.strDefCurrencySym">
      <summary>通貨記号</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseTempStringMax">
      <summary>最大文字数</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.GeneralFormatter.fpseMonthSeparatorCharSet">
      <summary>月区切り文字セット</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.GeneralFormatter.FromFormattedString(System.String)">
      <summary>書式付き文字列の「値」を解析して返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.GeneralFormatter.ToFormattedString(System.Object)">
      <summary>渡された値の書式付き文字列（および属性）を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.GeneralFormatter.FromUnformattedString(System.String,System.IFormatProvider@,System.String@)">
      <summary>書式なしの文字列の「値」を解析し、解析した文字列に関する追加情報と一緒に返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.GeneralFormatter.FromUnformattedString(System.String)">
      <summary>書式なし文字列の「値」を解析して返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.GeneralFormatter.ToUnformattedString(System.Object)">
      <summary>渡された値の書式なし文字列を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.GeneralFormatter.GetPseudoParsedStringType(System.String)">
      <summary>解析された文字列の種類を取得します。</summary>
      <param name="value">値文字列</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.GeneralFormatter.PrivConvToBinaryValue(System.String,System.Int32,System.Object@,System.Int32@,System.Int32@,System.Int32)">
      <summary>文字列を日付または数値に変換します。</summary>
      <param name="szText"></param>
      <param name="iDataLen"></param>
      <param name="pVar"></param>
      <param name="iDataType"></param>
      <param name="iRetFlags"></param>
      <param name="iOptDictateDataType"></param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.GeneralFormatter.PrivConvToBinaryValue(System.String,System.Int32,System.Object@,System.Int32@,System.Int32@,System.Int32,System.IFormatProvider@,System.String@)">
      <summary>文字列を日付または数値に変換します。</summary>
      <param name="szText"></param>
      <param name="iDataLen"></param>
      <param name="pVar"></param>
      <param name="iDataType"></param>
      <param name="iRetFlags"></param>
      <param name="iOptDictateDataType"></param>
      <param name="formatInfo"></param>
      <param name="formatString"></param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.GeneralFormatter.GetLeftDigitGroup(System.String,System.Int32,System.Int32,System.Int32,System.Char,System.Int32,System.Int32@)">
      <summary>小数点の左側にある数字グループの（開始および終了）インデックスを返します。</summary>
      <param name="szText"></param>
      <param name="iTextLen"></param>
      <param name="iDecimalPlace"></param>
      <param name="iScientificNotation"></param>
      <param name="cThousandChar"></param>
      <param name="iNumOfDigitsBetweenSeperators"></param>
      <param name="iRetFirstDigit"></param>
      <returns>配置が問題ない（または桁区切り記号が見つからない）場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.GeneralFormatter.ValidatePosNegSignPlacement(System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Int32,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@)">
      <summary>現在の位置で正/負の符号が許可されるかどうかを判定します。</summary>
      <param name="fNegSignChar"></param>
      <param name="fSctfc"></param>
      <param name="iSctfcNota"></param>
      <param name="fOpenParen"></param>
      <param name="fNumericChars"></param>
      <param name="iCurrCharIndex"></param>
      <param name="fNumSign"></param>
      <param name="fNegative"></param>
      <param name="fExpNumSign"></param>
      <param name="fExpNegative"></param>
      <returns>符号が有効な位置にある場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.GeneralFormatter.DecodeDateString(System.String,System.Int32,System.Object@,System.String@,System.String@)">
      <summary>日付文字列を数字の日付値に解析します。</summary>
      <param name="szData"></param>
      <param name="iDataLen"></param>
      <param name="dtRetDate"></param>
      <param name="dateFormat"></param>
      <param name="timeFormat"></param>
      <returns>defines FPSE_DECODE_... (in file: sedt_cls.h)</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.GeneralFormatter.ProcessDateSymbolDigits(FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters,System.String,System.Int32,System.Int32@)">
      <summary>日付/時刻文字列の数字記号を処理します。</summary>
      <param name="pParams">パラメーター</param>
      <param name="szData">データのサイズ</param>
      <param name="iSymbolLen">長さ</param>
      <param name="iRetSymUse">記号の使用</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.GeneralFormatter.TranslateDateSymbol(FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters,System.String,System.Int32@)">
      <summary>解析された文字列の最初の"トークン"に関する、"日付記号"の可能性のある記号のリストを返します。</summary>
      <param name="pvParams">パラメーター</param>
      <param name="szData">データのサイズ</param>
      <param name="iCurrIndex">現在のインデックス</param>
      <returns>返された記号リストに含まれる最初の記号</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.GeneralFormatter.MatchStringToMonthName(System.String,System.Int32@,System.Int32@,System.Boolean@)">
      <summary>解析された文字列がいずれかの月名で始まるかどうかを判定します。</summary>
      <param name="szText">テキストのサイズ</param>
      <param name="iRetMonth">返された月名</param>
      <param name="iRetMonthNameLen">返された月名の長さ</param>
      <param name="longName">月名が長い月名かどうか</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.GeneralFormatter.GetDateTimePartOrdering(FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters)">
      <summary>日付/時刻書式文字列を解析し、年/月/日と時/分/秒の順序（およびどの部分が含まれているか）を判断します。</summary>
      <param name="pParams">部分パラメーター</param>
      <returns>日付および時刻が許可されていない場合はFalse、それ以外の場合はTrue</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.GeneralFormatter.GetDatePartOrdering(FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters,System.String)">
      <summary>日付書式文字列を解析し、年/月/日の順序（およびどの部分が含まれているか）を判断します。</summary>
      <param name="pParams">部分パラメーター</param>
      <param name="shortDateFmt">短い日付書式文字列</param>
      <returns>日付部分が見つからない場合はFalse、それ以外の場合はTrue</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.GeneralFormatter.GetTimePartOrdering(FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters,System.String)">
      <summary>時刻書式文字列を解析し、時/分/秒/AM/PMの順序（およびどの部分が含まれているか）を判断します。</summary>
      <param name="pParams">部分パラメーター</param>
      <param name="strTimeFmt">時刻書式文字列</param>
      <returns>時刻部分が見つからない場合はFalse、それ以外の場合はTrue</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.GeneralFormatter.ConvertDateTimePartsToValue(FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters,System.Int32,System.Int32,System.Int32,System.Object@)">
      <summary>指定した日付および時刻部分を日付および時刻値に変換します。</summary>
      <param name="pParams"></param>
      <param name="lCurrYear"></param>
      <param name="lCurrCentury"></param>
      <param name="usCentSplitYear"></param>
      <param name="retDateTimeObj"></param>
      <returns>変換結果に関するビットフラグ:fpseDecodeDateResultsMask 0x03（ビット0および1） FPSE_DECODE_NODATE 0x00 // 文字列に日付が指定されていない fpseDecodeInvalidDate 0x01 // 日付は指定されているが、無効 fpseDecodeValidDate 0x02 // 日付が指定されていて、有効 fpseDecodeTimeResultsMask 0x0C（ビット3および4） FPSE_DECODE_NOTIME 0x00 // 文字列に時刻が指定されていない fpseDecodeInvalidTime 0x04 // 時刻は指定されているが、無効 fpseDecodeValidTime 0x08 // 時刻が指定されていて、有効</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.GeneralFormatter.ConvertDatePartsToValue(FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters,System.Int32,System.Int32,System.Int32,System.DateTime@)">
      <summary>日付部分がある場合、日付値に変換します。</summary>
      <param name="pParams">デコードパラメーター</param>
      <param name="lCurrYear">現在の年</param>
      <param name="lCurrCentury">現在の世紀</param>
      <param name="usCentSplitYear">世紀分割年</param>
      <param name="dtRetDate">返された日付時刻</param>
      <returns>日付部分が日付値に変換できた場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.GeneralFormatter.ConvertTimePartsToValue(FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters,System.TimeSpan@)">
      <summary>時刻部分がある場合、時刻値に変換します。</summary>
      <param name="pParams"></param>
      <param name="retTime"></param>
      <returns>時刻部分が時刻値に変換できた場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.GeneralFormatter.RegionSettings">
      <summary>地域設定を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.GeneralFormatter.ManageInput">
      <summary>このクラスは「管理入力」をサポートしません。</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters">
      <summary>デコードパラメーターを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters.#ctor(System.Int32,System.Int32)">
      <summary>デコードパラメーターを取得または設定します。</summary>
      <param name="dtMax">最大の日付</param>
      <param name="tmMax">最大の時刻</param>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters.TimeSeparatorsCount">
      <summary>時刻区切り記号を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters.DateSeparatorsCount">
      <summary>日付区切り記号を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters.DateParts">
      <summary>日付部分を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters.TimeParts">
      <summary>時刻部分を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters.DateSeparator">
      <summary>日付区切り記号を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters.TimeSeparator">
      <summary>時刻区切り記号を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters.TimeAMString">
      <summary>AM時刻文字列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters.TimePMString">
      <summary>PM時刻文字列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters.IsPendingNumber">
      <summary>数字が未確定かどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters.IsAM">
      <summary>時刻がAMかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters.IsPM">
      <summary>時刻がPMかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters.DatePartsAllowed">
      <summary>許可される日付部分の数を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters.DatePartsCount">
      <summary>日付部分の数を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters.DateSeparatorCount">
      <summary>日付区切り記号の数を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters.MonthPartIndex">
      <summary>月部分の数を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters.SymbolPrevious">
      <summary>前の記号を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters.TimePartsAllowed">
      <summary>許可される時刻部分の数を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters.TimePartsCount">
      <summary>時刻部分の数を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters.PendingNumberValue">
      <summary>未確定の数値を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters.TimeFormatOrder">
      <summary>時刻の順序書式を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.GeneralFormatter.FpseDecodeParameters.DateFormatOrder">
      <summary>日付の順序書式を取得または設定します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.InputValidation.MatchAbbrevList(System.String,System.String[],System.Int32@,System.Boolean)">
      <summary>渡された文字列が、リスト項目のいずれかに部分的または完全に一致した場合、 （０ではなく）１から始まるインデックス番号を返します。 文字列が複数の項目に一致するかどうかも示します。 月や曜日の３文字表記の一致を確認するために使用します。 一致しない場合は０を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.InputValidation.CmpStringsIgnoreLen(System.String,System.String)">
      <summary>長さを無視して２つの文字列を比較します。 例："Ab"と"abCD"は等しいと見なされます。短い方の文字列が 長い方のサブセットだからです。比較の際に長さが問題になるのは、 一方が""（またはNull）で、もう一方が""（またはNull）ではない場合のみです。 この場合、""は""以外の文字列より小さいと判断されます。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.InputValidation.Match_AMPM_Strings(System.String,System.String,System.String,System.Int32@)">
      <summary>ターゲットに一致する最初の文字列のAM／PM文字列のリスト （0～uAmPmStrCount-1）へのインデックスを返します。 文字列が複数の文字列に一致するかどうかも示します。 一致しない場合は-1を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.InputValidation.VerifyCharFor_MM_or_HH(System.Boolean)">
      <summary>OKの場合は１、エラーの場合は０を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.InputValidation.VerifyCharFor_M_or_H(System.Boolean)">
      <summary>文字が次のフィールドの文字の場合は２、OKの場合は１、エラーの場合は０を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.InputValidation.VerifyCharFor_DD">
      <summary>OKの場合は１、エラーの場合は０を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.InputValidation.VerifyCharFor_D">
      <summary>文字が次のフィールドの文字の場合は２、OKの場合は１、エラーの場合は０を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.InputValidation.VerifyCharFor_HH24">
      <summary>OKの場合は１、エラーの場合は０を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.InputValidation.VerifyCharFor_H24">
      <summary>文字が次のフィールドの文字の場合は２、OKの場合は１、エラーの場合は０を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.InputValidation.VerifyCharFor_NN_or_SS">
      <summary>OKの場合は１、エラーの場合は０を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.InputValidation.VerifyCharFor_N_or_S">
      <summary>文字が次のフィールドの文字の場合は２、OKの場合は１、エラーの場合は０を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.InputValidation.VerifyCharFor_AllDigits(System.Int32)">
      <summary>OKの場合は１、エラーの場合は０を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.InputValidation.VerifyCharFor_ListFld(System.String[],System.Int32@)">
      <summary>文字が次のフィールドの文字の場合は２、OKの場合は１、エラーの場合は０を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.InputValidation.VerifyCharFor_Ts(System.String,System.String)">
      <summary>このメソッドは、strAMとstrPMからリストを作成し、 VerifyCharFor_ListFld()を呼び出します。 文字が次のフィールドの文字の場合は２、OKの場合は１、エラーの場合は０を返します。</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.InputPosType">
      <summary>（データの種類ではなく）入力位置の種類を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.InputPosType.InsertPos">
      <summary>挿入位置</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.InputPosType.FixedFldPos">
      <summary>固定されたフィールド位置</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.InputPosType.LiteralPos">
      <summary>リテラル位置</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.MaskFldValue">
      <summary>MaskFldValue</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFldValue.RemoveNegPosPattern(System.String,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.String,System.Boolean)">
      <summary>注意：このメソッドは、テキストが負のパターンを持つと仮定して 文字位置を削除する場合に、テキストが実際に負のパターンを 持つかどうかを確認しません。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFldValue.AdjustSelectionForNegPosPattern(System.Int32,System.Int32@,System.Int32@,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.String,System.Boolean)">
      <summary>負のパターンをテキストから削除した後に 選択内容を調整します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFldValue.AdjustForValidValue">
      <summary>フィールド内の値が有効な日付または時刻（またはその両方）を構成することを確認します。 有効でない場合は値を調整します。 注意：すべてのフィールドを指定する必要はありません。 たとえば、日付フィールドに月と日のみを与えられた場合、 日が月に対して有効であることを確認できます。 ただし、年がないと、２月の正確な日数を特定することができません。 それでも、少なくとも２月は29日より多くなることがないことはわかっています。 調整された値がある場合はTRUEを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFldValue.GetBinaryValue">
      <summary>「this」オブジェクトに格納された値の「バイナリオブジェクト」を返します。 例：日付の場合はDateTimeオブジェクトを返します。</summary>
      <returns></returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFldValue.FormatThousSep(System.Boolean,System.String,System.Int32,System.String)">
      <summary>FormatValue()で使用し、負号と３桁区切り記号を追加します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFldValue.PrivAdjustForLimitVal(System.Object,System.Boolean,System.Boolean,System.Object)">
      <summary></summary>
      <returns>調整が必要な場合は１、調整不要の場合は０、 エラーがあった場合は-1を返します。</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFldValue.GetMonthsInYear">
      <summary>現在の設定値（年と可能な年号）が指定された場合、 月の最大数を返します（年がない場合、うるう年、 ヘブライ暦の場合は13、それ以外の場合は12）。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFldValue.GetDaysInMonth">
      <summary>現在の設定値（月、年、可能な年号）が指定された場合、 月の最大日数を返します。設定値が十分でない（年か月がないなど）場合、 31にデフォルト設定し、それ以外の場合は カレンダーメソッドを呼び出します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFldValue.ChangeDateForWeekday(System.Int32,System.Object,System.Object)">
      <summary>指定されたdayOfWeek（曜日）で最も近い日付に調整します。 すべてOKの場合はTrue、変更内容に問題がある場合は Falseを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFldValue.ChangeDateForEra(System.Int32,System.Object,System.Object)">
      <summary>日付が新しい年号でも有効であることを確認します。 すべてOKの場合はTrue、変更内容に問題がある場合は Falseを返します。注意：minValueとmaxValue（DateTimeオブジェクト）が 指定された場合、年号のみではなく日付全体が、 これらの値によって制限されます。</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.MaskType">
      <summary>（データの種類ではなく）マスクの種類を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.MaskType.None">
      <summary>マスクの種類が指定されていません。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.MaskType.PicMask">
      <summary>PICのマスクタイプを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.MaskType.Integer">
      <summary>整数のマスクタイプを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.MaskType.Float">
      <summary>単精度浮動小数点数のマスクタイプを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.MaskType.Double">
      <summary>倍精度浮動小数点数のマスクタイプを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.MaskType.Decimal">
      <summary>10進数のマスクタイプを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.MaskType.Currency">
      <summary>通貨のマスクタイプを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.MaskType.Date">
      <summary>日付のマスクタイプを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.MaskType.Time">
      <summary>時刻のマスクタイプを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.MaskType.DateTime">
      <summary>日付時刻のマスクタイプを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.MaskType.Percent">
      <summary>パーセントのマスクタイプを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.MaskType.SimpleDate">
      <summary>日付のマスクタイプを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.MaskType.SimpleTime">
      <summary>時刻のマスクタイプを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.MaskType.SimpleDateTime">
      <summary>日付時刻のマスクタイプを示します。</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.MaskFormatter">
      <summary>マスクフォーマッターを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFormatter.#ctor">
      <summary>デフォルト値を使用して、新しいマスクフォーマッターを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFormatter.#ctor(FarPoint.Win.SuperEdit.MaskType)">
      <summary>指定したマスクの種類を使用して、新しいマスクフォーマッターを作成します。</summary>
      <param name="masktype">マスクの種類</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFormatter.#ctor(FarPoint.Win.SuperEdit.MaskType,System.String)">
      <summary>指定したマスクの種類と書式を使用して、新しいマスクフォーマッターを作成します。</summary>
      <param name="masktype">マスクの種類</param>
      <param name="formatstring">書式文字列</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFormatter.HasNegativeSign(System.String)">
      <summary>指定したテキストに負の符号が含まれているかどうかを判定します。</summary>
      <param name="text">テキスト文字列</param>
      <returns>テキストに負の符号が含まれているかどうか</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFormatter.ParseFormatString">
      <summary>書式文字列を解析します。</summary>
      <returns>解析が成功したかどうか</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFormatter.OnCustomMask(System.Object,FarPoint.Win.SuperEdit.CustomMaskEventArgs)">
      <summary>カスタムマスクが使用されたときに発生します。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFormatter.FromFormattedString(System.String)">
      <summary>書式付き文字列の「値」を解析して返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFormatter.ToFormattedString(System.Object)">
      <summary>渡された値の書式付き文字列（および属性）を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFormatter.FromUnformattedString(System.String)">
      <summary>書式なし文字列の「値」を解析して返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFormatter.ToUnformattedString(System.Object)">
      <summary>渡された値の書式なし文字列を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFormatter.VerifyParsedObject">
      <summary>解析されたオブジェクトを検証します。</summary>
      <returns>検証されたかどうか</returns>
    </member>
    <member name="E:FarPoint.Win.SuperEdit.MaskFormatter.CustomMask">
      <summary>カスタムマスクイベントを処理します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.MaskFormatter.RegionSettings">
      <summary>地域設定を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.MaskFormatter.ManageInput">
      <summary>実装されている場合、ユーザー入力の検証および書式設定に使用する エディタを許可するメソッドをサポートします。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.MaskFormatter.MaskType">
      <summary>マスクの種類（なし、PicMask、Floatなど）を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.MaskFormatter.IsFmtStrParsed">
      <summary>書式文字列が設定または変更（あるいは書式文字列以外のものが変更）されてから書式文字列が解析されたかどうかを判定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.MaskFormatter.MaskChar">
      <summary>マスク文字を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.MaskFormatter.FormatString">
      <summary>書式文字列を取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.IRegionalSettings">
      <summary>地域設定（地域オプション）を定義するオブジェクトが要求する メソッドとプロパティを定義するインタフェース。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.NumberLeadingZero">
      <summary>浮動小数点値の先頭のゼロを表示するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.NumberDecimalDigits">
      <summary>浮動小数点値の小数点以下の桁数を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.NumberGroupSeparator">
      <summary>数字グループを区切る文字列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.NumberGroupSize">
      <summary>各数字グループの桁数を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.NumberNegativePattern">
      <summary>負の値の書式を取得または設定します。</summary>
      <remarks>設定値は.NET FrameworkのNumberFormatInfo.NumberNegativePattern値に 一致します。</remarks>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.PercentSign">
      <summary>パーセント値を指定する文字列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.PercentDecimalDigits">
      <summary>パーセント値の小数点以下の桁数を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.PercentNegativePattern">
      <summary>負のパーセント値の書式を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.PercentPositivePattern">
      <summary>正のパーセント値の書式を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.NegativeSign">
      <summary>負の値を表す文字列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.PositiveSign">
      <summary>正の値を表す文字列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.DecimalSeparator">
      <summary>小数点記号を表す文字列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.CurrencyDecimalDigits">
      <summary>通貨値の小数点以下の桁数を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.CurrencySymbol">
      <summary>通貨記号を表す文字列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.CurrencyNegativePattern">
      <summary>負の通貨値の書式を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.CurrencyPositivePattern">
      <summary>正の通貨値の書式を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.AbbreviatedDayNames">
      <summary>短い曜日名の配列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.AbbreviatedMonthNames">
      <summary>短い月名の配列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.DayNames">
      <summary>曜日名の配列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.MonthNames">
      <summary>月名の配列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.DateSeparator">
      <summary>日付値の各部分（年、月、日）を区切る文字列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.ShortDateFormat">
      <summary>短い日付の書式を取得または設定します。</summary>
      <remarks>一般的な日付値のデコードに使用します。</remarks>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.LongDateFormat">
      <summary>長い日付書式を取得または設定します。</summary>
      <remarks>一般的な日付値のデコードに使用します。</remarks>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.TimeFormat">
      <summary>時刻値の書式を取得または設定します。</summary>
      <remarks>一般的な時刻値のデコードに使用します。</remarks>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.TimeSeparator">
      <summary>時刻値の各部分（時、分、秒）を区切る文字列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.AMDesignator">
      <summary>12時間形式の午前を示す文字列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.PMDesignator">
      <summary>12時間形式の午後と夕方を示す文字列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.CurrentYear">
      <summary>年が日付値に指定されていない場合現在の年を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.DateTimeFormat">
      <summary>現在の文化に関連付けられたDateTimeFormatInfoオブジェクトを取得します。</summary>
      <remarks>現在の文化が設定されていない場合新しいオブジェクトを返しますが、 保存しません（変更内容を保存しません）。</remarks>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.TwoDigitYearMax">
      <summary>２桁年で表せる100年範囲の最後の年を 取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.Calendar">
      <summary>日付値の書式を設定するカレンダーを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.CurrencyGroupSeparator">
      <summary>通貨グループを区切る文字列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.CurrencyGroupSize">
      <summary>各通貨グループの桁数を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.CurrencyDecimalSeparator">
      <summary>通貨の小数点記号を示す文字列を取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.RegionalSettingsProps">
      <summary>地域設定プロパティを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.NumGrpSep">
      <summary>数字のグループ区切り記号</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.NumGrpSize">
      <summary>数字のグループサイズ</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.NumNegPattern">
      <summary>数字の負のパターン</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.NegSign">
      <summary>負の符号</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.PosSign">
      <summary>正の符号</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.DecSep">
      <summary>小数点区切り記号</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.CurrencySym">
      <summary>通貨記号</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.CurrencyNegativePattern">
      <summary>通貨の負のパターン</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.CurrencyPositivePattern">
      <summary>通貨の正のパターン</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.AbbrvDayNames">
      <summary>短い曜日名</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.AbbrvMonthNames">
      <summary>短い月名</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.DayNames">
      <summary>曜日名</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.MonthNames">
      <summary>月名</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.DateSep">
      <summary>日付区切り記号</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.ShortDateFmt">
      <summary>短い日付書式</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.LongDateFmt">
      <summary>長い日付書式</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.TimeFmt">
      <summary>時刻書式</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.TimeSep">
      <summary>時刻区切り記号</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.AMStr">
      <summary>午前を表す文字列</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.PMStr">
      <summary>午後を表す文字列</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.CurrYear">
      <summary>現在の年</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.TwoDigitYearMax">
      <summary>2桁年の最大値</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.CurrencyDecimalDigits">
      <summary>通貨の小数点以下の桁数</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.NumberDecimalDigits">
      <summary>数字の小数点以下の桁数</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.NumberLeadingZero">
      <summary>数字の先頭のゼロ</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.PercentSign">
      <summary>パーセント記号</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.PercentNegativePattern">
      <summary>パーセントの負のパターン</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.PercentPositivePattern">
      <summary>パーセントの正のパターン</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.PercentDecimalDigits">
      <summary>パーセントの小数点以下の桁数</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.EraNames">
      <summary>年号</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.AbbrvEraNames">
      <summary>短い年号</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.Calendar">
      <summary>カレンダー</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.CurrencyGrpSep">
      <summary>通貨のグループ区切り記号</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.CurrencyGrpSize">
      <summary>通貨のグループサイズ</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettingsProps.CurrencyDecSep">
      <summary>通貨の小数点区切り記号</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.RegionalSettings">
      <summary>Regional Settingsインタフェースを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.RegionalSettings.#ctor">
      <summary>地域設定の新しいセットを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.RegionalSettings.#ctor(FarPoint.Win.SuperEdit.IRegionalSettings)">
      <summary>指定した親インタフェースから設定を継承して、 地域設定の新しいセットを作成します。</summary>
      <param name="parentRegionSettings">設定の継承元のIRegionalSettingsインタフェース</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.RegionalSettings.#ctor(System.Globalization.CultureInfo)">
      <summary>指定したCultureInfoの文化固有情報に基づいて、 地域設定の新しいセットを作成します。</summary>
      <param name="cultureInfo">文化固有情報を含むCultureInfoオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.RegionalSettings.#ctor(FarPoint.Win.SuperEdit.RegionalSettings)">
      <summary>指定したオブジェクトをコピーして地域設定の新しいセットを作成します。</summary>
      <param name="src">コピー元の地域設定</param>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettings.defRgnSettings">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.RegionalSettings.Clone">
      <summary>現在のインスタンスをコピーして新しい地域設定を作成して返します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettings.numberNegPattern">
            Setting values match MS .NET NumberFormatInfo.NumberNegativePattern values.
        </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettings.shortDateFormat">
            Used for decoding a generic date value.
        </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettings.longDateFormat">
            Used for decoding a generic date value.
        </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettings.timeFormat">
            Used for decoding a generic time value.
        </member>
    <member name="M:FarPoint.Win.SuperEdit.RegionalSettings.Set(System.Object,System.Boolean)">
      <summary>プロパティが設定されているかどうかを示すビットマップを更新します。</summary>
      <param name="prop">プロパティを含むオブジェクト</param>
      <param name="f">プロパティが設定されているかどうかを表すフラグ</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.RegionalSettings.IsDefined(System.Object)">
      <summary>ビットマップに問い合わせ、プロパティが設定されているかどうかを判定します。</summary>
      <param name="prop">プロパティを含むオブジェクト</param>
      <returns>設定されている場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.RegionalSettings.Reset(System.Object)">
      <summary>ビットマップをリセットし、プロパティが作成したオブジェクトをすべて解放します。</summary>
      <param name="prop">プロパティを含むオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.RegionalSettings.ResetAll">
      <summary>ビットマップ全体をFalseにリセットすると、すべてのプロパティがデフォルト状態になります。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.RegionalSettings.IsAllBlanks(System.String)">
      <summary>文字列がすべて空白かどうかを判定します。</summary>
      <param name="value">値を含む文字列</param>
      <returns>文字列がすべて空白の場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.RegionalSettings.FirstNonBlankChar(System.String,System.Char@)">
      <summary>文字列に最初に現れる空白以外の文字を返します。空白以外の文字がない場合はNullを返します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.CultureInfoSetting">
      <summary>文化固有情報を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.ParentRegionSettings">
      <summary>親の地域設定を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.PropertySet">
      <summary>プロパティセットを配列として取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.DefaultSettings">
      <summary>デフォルトの地域設定のコピーを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.NumberGroupSeparator">
      <summary>数値の桁グループを区切る文字を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.NumberGroupSize">
      <summary>数値をグループ化する桁数を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.NumberNegativePattern">
      <summary>負の値を書式設定する方法を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.NegativeSign">
      <summary>数値の負号として使用する文字列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.PositiveSign">
      <summary>数値の正号として使用する文字列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.DecimalSeparator">
      <summary>10進値の整数部と小数部を区切る文字列を 取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.NumberLeadingZero">
      <summary>浮動小数点数の先頭のゼロを表示するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.NumberDecimalDigits">
      <summary>数値に表示する小数点以下の桁数を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.PercentSign">
      <summary>数値のパーセント記号として使用する文字を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.PercentNegativePattern">
      <summary>負のパーセント値を表示する書式を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.PercentPositivePattern">
      <summary>正のパーセント値を表示する書式を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.PercentDecimalDigits">
      <summary>パーセント値の小数点以下の桁数を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.CurrencyGroupSeparator">
      <summary>通貨値の桁グループを区切る文字を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.CurrencyGroupSize">
      <summary>通貨値をグループ化する桁数を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.CurrencyDecimalSeparator">
      <summary>通貨値の整数部と小数部を区切る文字列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.CurrencyDecimalDigits">
      <summary>通貨値の小数点以下の桁数を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.CurrencySymbol">
      <summary>通貨値の通貨記号として使用する文字列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.CurrencyNegativePattern">
      <summary>負の通貨値の書式を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.CurrencyPositivePattern">
      <summary>正の通貨値の書式を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.AbbreviatedDayNames">
      <summary>短い曜日名の配列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.AbbreviatedMonthNames">
      <summary>1年の短い月名の配列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.DayNames">
      <summary>1週間の曜日名の配列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.MonthNames">
      <summary>1週間の曜日名の配列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.DateSeparator">
      <summary>日付値の各部分（年、月、日）を区切る文字列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.ShortDateFormat">
      <summary>DateTimeFormatプロパティがShortDateまたはShortDateWithTimeに設定されている場合に短い日付値を書式設定するための文字列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.LongDateFormat">
      <summary>DateTimeFormatプロパティがLongDateまたはLongDateWithTimeに設定されている場合に長い（短縮されていない）日付値を書式設定するための文字列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.TimeFormat">
      <summary>DateTimeFormatプロパティがTimeOnly、LongDateWithTime、ShortDateWithTimeの いずれかに設定されているときに時刻値を表すための書式を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.TimeSeparator">
      <summary>時刻値の各部分（時、分、秒）を区切る文字列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.AMDesignator">
      <summary>12時間形式の午前を示す文字列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.PMDesignator">
      <summary>12時間形式の午後を示す文字列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.DateTimeFormat">
      <summary>DateTimeFormatInfoオブジェクトを使用して日付と時刻を表示するための書式を取得または設定します。</summary>
             Returns DateTimeFormatInfo associated with current culture.
             If no current culture is set, a new object is returned but not
             stored. (Any changes won't persist).
        </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.CurrentYear">
      <summary>年が日付値に指定されていない場合現在の年を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.TwoDigitYearMax">
      <summary>２桁年の値に対する世紀を計算するために使用する年の値を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.Calendar">
      <summary>DateTime値の書式を設定するカレンダーを取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.UserErrorCode">
      <summary>UserErrorイベントのエラーコードを表します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.UserErrorCode.InvalidCharacter">
      <summary>［1］ユーザーが無効な文字を入力したときに発生します （UserEntryプロパティがUserEntry.Formattedに設定されている場合のみ）。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.UserErrorCode.InvalidMovement">
      <summary>［2］ユーザーがカーソルを先頭文字より左に、 または最終文字より右に移動しようとしたときに発生します。 AutoAdvanceプロパティがFalseに設定されている場合のみ発生します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.UserErrorCode.InvalidAction">
      <summary>［3］その他のすべての無効なアクションの場合に発生します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.UserErrorCode.ExceedLimit">
      <summary>［4］テキストを追加するとデータ長がMaxLengthプロパティで設定した 最大値を超える場合に発生します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.UserErrorCode.ButtonMin">
      <summary>［5］ユーザーがボタンをクリックするとButtonIndexプロパティの値がButtonMinプロパティで 設定した値より小さくなるときに発生します。 ButtonWrapプロパティがFalseに設定されている場合のみ発生します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.UserErrorCode.ButtonMax">
      <summary>[6] ユーザーがボタンをクリックしたとき、ButtonIndex プロパティの値が ButtonMax プロパティで設定した値より大きくなると発生します。ButtonWrap プロパティが False に設定されている場合のみ発生します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.UserErrorCode.OutOfRange">
      <summary>［7］ユーザーが入力した値が、最大値／最小値プロパティで設定された 最大値または最小値を超える場合に発生します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.UserErrorCode.PopupOrDropdownVisible">
      <summary>［8］ポップアップまたはドロップダウンの表示中にユーザーが コントロールを操作したときに発生します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.UserErrorCode.DataNotAllowed">
      <summary>［9］ユーザーが許可されていないデータ（コントロールで許可された 最大値より大きい値など）を入力したときに発生します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.UserErrorCode.GenericError">
      <summary>［999］その他のタイプのエラーで発生します（対応する他のエラーコードがない場合）。</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.ErrorEventArgs">
      <summary>Errorイベントのイベントデータを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.ErrorEventArgs.#ctor(System.Int32)">
      <summary>コントロールによってエラー状態が作成されたたときに発生します。</summary>
      <param name="errorCode">発生したエラーコード</param>
      <example>
        <code lang="csharp"> private void control_UserError(object sender, FarPoint.Win.Input.ErrorEventArgs e) { Messagebox.Show(Convert.ToString(e.ErrorCode)); } </code>
        <code lang="vb"> Private Sub control_UserError(ByVal sender As Object, ByVal e As FarPoint.Win.Input.ErrorEventArgs) Handles control.UserError Messagebox.Show(e.ErrorCode); End Sub </code>
      </example>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.ErrorEventArgs.#ctor(System.Int32,System.String)">
      <summary>コントロールによってエラー状態が作成されたときに発生します。</summary>
      <param name="errorCode">発生したエラーのエラーコード</param>
      <param name="errorText">発生したエラーの追加エラー情報</param>
      <example>
        <code lang="csharp"> private void control_UserError(object sender, FarPoint.Win.Input.ErrorEventArgs e) { Messagebox.Show(Convert.ToString(e.ErrorCode) + e.ErrorInfo); } </code>
        <code lang="vb"> Private Sub control_UserError(ByVal sender As Object, ByVal e As FarPoint.Win.Input.ErrorEventArgs) Handles control.UserError Messagebox.Show(e.ErrorCode + e.ErrorInfo); End Sub </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.ErrorEventArgs.ErrorCode">
      <summary>エラーイベントに関連付けられたエラーコードを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.ErrorEventArgs.ErrorCodePriv">
      <summary>内部使用のみ。エラーコードを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.ErrorEventArgs.ErrorInfo">
      <summary>エラーイベントに関連付けられた追加のエラー情報を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.ErrorEventArgs.ErrorInfoPriv">
      <summary>内部使用のみ。エラー情報を取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.UserErrorEventHandler">
      <summary>UserErrorイベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータ</param>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.UserErrorEventArgs">
      <summary>ユーザーエラーイベントのデータを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.UserErrorEventArgs.#ctor(FarPoint.Win.SuperEdit.UserErrorCode)">
      <summary>コントロールによってユーザーエラー状態が作成されたときに発生します。</summary>
      <param name="errorCode">発生したユーザーエラーコード</param>
      <example>
        <code lang="csharp"> private void control_UserError(object sender, FarPoint.Win.Input.UserErrorEventArgs e) { Messagebox.Show(Convert.ToString(e.ErrorCode)); } </code>
        <code lang="vb"> Private Sub control_UserError(ByVal sender As Object, ByVal e As FarPoint.Win.Input.UserErrorEventArgs) Handles control.UserError Messagebox.Show(e.ErrorCode); End Sub </code>
      </example>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.UserErrorEventArgs.#ctor(FarPoint.Win.SuperEdit.UserErrorCode,System.String)">
      <summary>コントロールによってユーザーエラー状態が作成されたときに発生します。</summary>
      <param name="errorCode">発生したエラーのユーザーエラーコード</param>
      <param name="errorText">発生したエラーの追加エラー情報</param>
      <example>
        <code lang="csharp"> private void control_UserError(object sender, FarPoint.Win.Input.UserErrorEventArgs e) { Messagebox.Show(Convert.ToString(e.ErrorCode) + e.ErrorInfo); } </code>
        <code lang="vb"> Private Sub control_UserError(ByVal sender As Object, ByVal e As FarPoint.Win.Input.UserErrorEventArgs) Handles control.UserError Messagebox.Show(e.ErrorCode + e.ErrorInfo); End Sub </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.UserErrorEventArgs.UserErrorCode">
      <summary>ユーザーエラーイベントに関連付けられたエラーコードを取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.TextPastingEventHandler">
      <summary>TextPastingイベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータ</param>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.TextPastedEventHandler">
      <summary>TextPastedイベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータ</param>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.AdvanceEventHandler">
      <summary>Advanceイベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータ</param>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.AcceptsArrowKeys">
      <summary>コントロールがテキストボックス内でキーボードの矢印キーを処理する方法を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.AcceptsArrowKeys.None">
      <summary>矢印キーを処理しません。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.AcceptsArrowKeys.Arrows">
      <summary>［Ctrl］キーを使わずに押された矢印キーのみを処理します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.AcceptsArrowKeys.CtrlArrows">
      <summary>［Ctrl］キーと同時に押された矢印キーのみを処理します。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.AcceptsArrowKeys.AllArrows">
      <summary>すべての矢印キーを処理します（ArrowsとCtrlArrowsの両方）。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.AcceptsArrowKeys.AllArrowsIgnoringMultiline">
      <summary>Multilineプロパティの設定と無関係にすべての矢印キーを処理します。</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.SEditTextBox">
      <summary>コントロールのテキストエディタを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.ProcessSendMessage(System.Windows.Forms.Message@)">
      <summary>内部使用のみ。</summary>
      <param name="msg"></param>
      <returns></returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.GetCurrentLine">
      <summary>現在の行を取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.GetLineCount">
      <summary>複数行を持つテキストエディタの行数を返します。</summary>
      <returns>行数</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.GetLineLength(System.Int32)">
      <summary>行の長さを返します。</summary>
      <param name="lineIndex">行のインデックス</param>
      <returns>行の長さ</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.OnSEditKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>ユーザーが押したキーを処理します。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.ProcessKeyMessage(System.Windows.Forms.Message@)">
      <summary>キーメッセージを処理します。</summary>
      <param name="msg">メッセージ</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.ProcessWMCharMsg(System.Windows.Forms.Message@)">
      <summary>WM_CHARメッセージを処理します。</summary>
      <param name="msg">メッセージ</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.ProcessWMKeyUpMsg(System.Windows.Forms.Message@)">
      <summary>WmKeyUpメッセージを処理します。</summary>
      <param name="msg">メッセージ</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.ProcessWMKeyDownMsg(System.Windows.Forms.Message@)">
      <summary>WmKeyDownメッセージを処理します。</summary>
      <param name="msg">メッセージ</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.OnKeyDownMoveCaret(System.Windows.Forms.Message@)">
      <summary>カレット移動キーが押されたときに発生します。</summary>
      <param name="msg"></param>
      <returns></returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.OnKeyDownBackOrDelete(System.Windows.Forms.Message@)">
      <summary>［BaｃｋSpace］キーまたは［Del］キーが押されたときに発生します。</summary>
      <param name="msg">メッセージ</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.OnTextPasted(System.ComponentModel.CancelEventArgs)">
      <summary>テキストが貼り付けられたときに発生します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.OnTextPasting(System.ComponentModel.CancelEventArgs)">
      <summary>テキストが貼り付けられるときに発生します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.OnTextCut(System.EventArgs)">
      <summary>テキストが切り取られたときに発生します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.OnUserError(FarPoint.Win.SuperEdit.UserErrorEventArgs)">
      <summary>ユーザーエラーが発生したときに発生します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.OnAdvance(System.EventArgs)">
      <summary>次または前に移動したときに発生します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.OnKeyDownInsert">
      <summary>［Ins］キーが押されたときに発生します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.CopyToClipboard">
      <summary>クリップボードにコピーします。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.CutToClipboard">
      <summary>クリップボードに切り取ります。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.PasteFromClipboard">
      <summary>クリップボードからデータを貼り付けます。</summary>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.ProcessAlphaNumericSysKey(System.Windows.Forms.Message@)">
      <summary>内部使用のみ。英数字システムキーを処理します。</summary>
      <param name="msg">メッセージ</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.OnLostFocus(System.EventArgs)">
      <summary>フォーカスが失われたときに発生します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.OnGotFocus(System.EventArgs)">
      <summary>フォーカスが取得されたときに発生します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.IncrementDecrementValue(System.Object,System.Boolean,System.Boolean)">
      <summary>値をインクリメントまたはデクリメントします。</summary>
      <param name="incdec">インクリメントまたはデクリメントするオブジェクト</param>
      <param name="decrement">デクリメントするかどうか</param>
      <param name="wrap">折り返すかどうか</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.Increment(System.Object,System.Boolean)">
      <summary>インクリメント値を返します。</summary>
      <param name="incValue">インクリメント値</param>
      <param name="wrap">複数行があるかどうか、値を折り返すかどうかを表すブール値</param>
      <returns>インクリメント値</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.Decrement(System.Object,System.Boolean)">
      <summary>デクリメント値を返します。</summary>
      <param name="decValue">デクリメント値</param>
      <param name="wrap">複数行があるかどうか、値を折り返すかどうかを表すブール値</param>
      <returns>デクリメント値</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.IsInputKey(System.Windows.Forms.Keys)">
      <summary>このコントロールが処理するキーを決定します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.ResetRedoText">
      <summary>Redoテキストバッファをリセットします。これはUndoChanges()が 呼び出されたとき設定されます。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.UndoChanges">
      <summary>テキストを「Undoバッファ」に保存されるテキストとして設定することを ユーザーに許可します。SelectionStartプロパティと SelectionLengthプロパティも設定します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.OnSetText(System.String)">
      <summary>これは、パブリックTextプロパティが呼び出されたときに呼び出されます。</summary>
      <param name="newText">新しいテキスト文字列</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.SetBaseText(System.String)">
      <summary>基本クラス（Textbox）のTextプロパティを設定しますが、"アンドゥ"バッファーは保持します。</summary>
      <param name="newText">新しいテキスト文字列</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.WndProc(System.Windows.Forms.Message@)">
      <summary>内部使用のみ。</summary>
      <param name="m">メッセージ</param>
    </member>
    <member name="E:FarPoint.Win.SuperEdit.SEditTextBox.TextPasting">
      <summary>テキストがコントロールに貼り付けられる前に発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.SuperEdit.SEditTextBox.TextPasted">
      <summary>テキストがコントロールに貼り付けられたときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.SuperEdit.SEditTextBox.TextCut">
      <summary>コントロールからテキストが切り取られたときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.SuperEdit.SEditTextBox.UserError">
      <summary>処理不可能または無効な内容が入力されたときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.SuperEdit.SEditTextBox.Advance">
      <summary>AutoAdvanceプロパティがTrueに設定され、押された矢印キーに応答して フォーカスを次または前のコントロールに移動するときに発生します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.SEditTextBox.RedrawFlag">
      <summary>再描画フラグが設定されているかどうかを取得または設定します。 コントロールの値が変更されたときに再描画します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.SEditTextBox.LastKeyDown">
      <summary>最後に押されたキーのキーコードを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.SEditTextBox.Formatter">
      <summary>編集コントロールのフォーマッタを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.SEditTextBox.AutoAdvance">
      <summary>押された矢印キーに基づいて値を進めるかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.SEditTextBox.Value">
      <summary>テキストエディタ内の文字列またはオブジェクトの値を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.SEditTextBox.AcceptsArrowKeys">
      <summary>このコントロールが上矢印キーと下矢印キーを処理するかどうかを決定する プロパティを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.SEditTextBox.Text">
      <summary>文字列を取得または設定します。UndoバッファとRedoバッファの コントロールのTextプロパティを上書きします。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.SEditTextBox.UndoText">
      <summary>Undoバッファの内容を取得または設定します。このバッファは、ユーザーが ［Ctrl+Z］キーを押したか、オーナーが「UndoChanges()」を呼び出した場合に使用されます。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.SEditTextBox.UndoSelStart">
      <summary>Undo選択の開始位置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.SEditTextBox.UndoSelLength">
      <summary>Undo選択の長さの位置を取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.AboutDialog">
      <summary>Aboutダイアログを表します。</summary>
    </member>
    <member name="F:FarPoint.Win.AboutDialog.components">
      <summary>必須デザイナ変数。</summary>
    </member>
    <member name="M:FarPoint.Win.AboutDialog.#ctor">
      <summary>新しいAboutダイアログを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.AboutDialog.#ctor(System.Drawing.Image,System.String,System.String,System.String)">
      <summary>指定した設定を使用して、Aboutダイアログを作成します。</summary>
      <param name="img">画像</param>
      <param name="info">文字列</param>
      <param name="serial">シリアル番号</param>
      <param name="updatesLink">更新リンク</param>
    </member>
    <member name="M:FarPoint.Win.AboutDialog.Dispose(System.Boolean)">
      <summary>使用されたリソースをすべてクリーンアップします。</summary>
    </member>
    <member name="M:FarPoint.Win.AboutDialog.InitializeComponent">
      <summary>デザイナサポートの必須メソッド。このメソッドの内容は コードエディタで変更しないでください。</summary>
    </member>
    <member name="T:FarPoint.Win.BorderConverter">
      <summary>プロパティグリッド内のIBorderタイプのプロパティに対する境界線の種類のドロップダウンリストを提供します。</summary>
    </member>
    <member name="M:FarPoint.Win.BorderConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>オブジェクトのプロパティ値のセットを指定して、 この型のオブジェクトを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.BorderConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>このオブジェクトの値を変更するのに、CreateInstanceメソッドを呼び出して 新しい値を作成する必要があるかどうかを 判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.BorderConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>この型のプロパティのセットを取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.BorderConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>この型の標準値のセットを取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.BorderConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>このオブジェクトがプロパティをサポートするかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.BorderConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>このオブジェクトが標準値をサポートするかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.BorderConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>指定した型を境界線オブジェクトに変換できるかどうかを判定します。</summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="sourceType">型</param>
      <returns>sourceTypeがStringの場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.BorderConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>文字列を新しい境界線オブジェクトに変換します。</summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="culture">CultureInfo</param>
      <param name="value">オブジェクト</param>
      <returns>新しい境界線オブジェクト</returns>
    </member>
    <member name="M:FarPoint.Win.BorderConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>境界線オブジェクトを指定した型に変換できるかどうかを判定します。</summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="destinationType">型</param>
      <returns>境界線オブジェクトを指定した型に変換できる場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.BorderConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>境界線オブジェクトを文字列に変換します。</summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="culture">CultureInfo</param>
      <param name="value">オブジェクト</param>
      <param name="destinationType">型</param>
      <returns>境界線オブジェクトの文字列表現</returns>
    </member>
    <member name="T:FarPoint.Win.BorderEditor">
      <summary>境界線エディタを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.BorderEditor.SetEditorProps(FarPoint.Win.IBorder,FarPoint.Win.BorderEditorUI)">
      <summary>エディタに編集対象の境界線を設定します。</summary>
      <param name="border">編集対象のIBorder</param>
      <param name="editor">BorderEditorUI</param>
    </member>
    <member name="M:FarPoint.Win.BorderEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>境界線エディタの値を編集します。</summary>
      <param name="context">コンテキスト</param>
      <param name="provider">プロバイダ</param>
      <param name="value">値</param>
    </member>
    <member name="M:FarPoint.Win.BorderEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>指定したコンテキストの境界線エディタのスタイルを取得します。</summary>
      <param name="context">コンテキスト</param>
    </member>
    <member name="M:FarPoint.Win.BorderEditor.GetEditStyle">
      <summary>境界線エディタのスタイルを取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.AboutEditor">
      <summary>Aboutダイアログエディタを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.AboutEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Aboutダイアログの値を編集します。</summary>
      <param name="context">コンテキスト</param>
      <param name="provider">プロバイダ</param>
      <param name="value">値</param>
      <returns></returns>
    </member>
    <member name="M:FarPoint.Win.AboutEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>指定したコンテキストのAboutダイアログのスタイルを取得します。</summary>
      <param name="context">コンテキスト</param>
    </member>
    <member name="M:FarPoint.Win.AboutEditor.GetEditStyle">
      <summary>Aboutダイアログのスタイルを取得します。</summary>
    </member>
    <member name="T:FarPoint.BugWorkarounds.Bug20421">
      <summary>バグ20421（PropertyGridコントロールが、不必要なときにオブジェクトをコピーする）の回避策。</summary>
    </member>
    <member name="M:FarPoint.BugWorkarounds.Bug20421.IsPropertyGridCopyingMe">
      <summary>.NET 2.0 PropertyGridコントロールがCloneメソッドを呼び出してMergePropertyDescriptor.CopyValueメソッドからオブジェクトをコピーしている場合、Trueを返します。</summary>
      <returns></returns>
    </member>
    <member name="T:FarPoint.Win.ClipboardChangeNotifier">
      <summary>Windows API を使用してクリップボードの内容の変更通知を受け取る手段を提供します。</summary>
      <remarks>変更通知を受け取るためには、ウィンドウをクリップボード ビューア チェインに登録する必要があります。こうすると、クリップボードが変更されるたびにウィンドウに通知メッセージが送られます。また、チェインの管理に関連するメッセージも提供されます。このクラスは、チェインを維持し、アプリケーションが適切な時点でチェインから削除されるように、これらの動作の詳細を管理します。</remarks>
    </member>
    <member name="F:FarPoint.Win.ClipboardChangeNotifier.nextViewerHandle">
      <summary>クリップボード通知がインストールされている場合はクリップボード ビューア チェインの次のハンドル、それ以外の場合は <see cref="F:System.IntPtr.Zero" /></summary>
    </member>
    <member name="F:FarPoint.Win.ClipboardChangeNotifier.disposed">
      <summary>このクラスが破棄されたかどうかを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.ClipboardChangeNotifier.installedHandle">
      <summary>クリップボード変更通知がインストールされたウィンドウ。</summary>
    </member>
    <member name="M:FarPoint.Win.ClipboardChangeNotifier.WndProc(System.Windows.Forms.Message@)">
      <summary>デフォルトのWndProc処理を提供し、クリップボード変更通知に応答します。</summary>
      <param name="e">メッセージ</param>
    </member>
    <member name="M:FarPoint.Win.ClipboardChangeNotifier.OnHandleChange">
      <summary>ウィンドウハンドル変更イベントに応答し、クリップボード変更通知がインストールされている場合はアンインストールします。</summary>
    </member>
    <member name="M:FarPoint.Win.ClipboardChangeNotifier.Install">
      <summary>クリップボード変更通知をインストールします。このクラスの AssignHandle メソッドを最初に呼び出している必要があります。</summary>
    </member>
    <member name="M:FarPoint.Win.ClipboardChangeNotifier.Uninstall">
      <summary>クリップボード変更通知をアンインストールします。</summary>
    </member>
    <member name="M:FarPoint.Win.ClipboardChangeNotifier.OnClipboardChanged(System.EventArgs)">
      <summary>
        <c>ClipboardChanged</c>イベントを発生させます。</summary>
      <param name="e">空のイベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ClipboardChangeNotifier.Dispose">
      <summary>このオブジェクトの破棄中に必要な場合、クリップボードイベント通知をアンインストールします。</summary>
    </member>
    <member name="M:FarPoint.Win.ClipboardChangeNotifier.#ctor">
      <summary>このクラスの新しいインスタンスを構築します。</summary>
    </member>
    <member name="E:FarPoint.Win.ClipboardChangeNotifier.ClipboardChanged">
      <summary>クリップボードの内容の変更を通知します。</summary>
    </member>
    <member name="T:FarPoint.Win.FontSelector">
      <summary>フォントセレクタを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.FontSelector.#ctor">
      <summary>新しいフォントセレクタを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.FontSelector.#ctor(System.Boolean)">
      <summary>新しいフォントセレクタを作成します。</summary>
      <param name="renderAsFont">フォントとしてレンダリングするかどうか</param>
    </member>
    <member name="M:FarPoint.Win.FontSelector.#ctor(System.Boolean,System.String)">
      <summary>新しいフォントセレクタを作成します。</summary>
      <param name="renderAsFont">フォントとしてレンダリングするかどうか</param>
      <param name="sampleString">サンプル文字列</param>
    </member>
    <member name="M:FarPoint.Win.FontSelector.RefreshList">
      <summary>リストを更新します。</summary>
    </member>
    <member name="M:FarPoint.Win.FontSelector.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)">
      <summary>項目が測定されたときに発生します。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.FontSelector.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
      <summary>項目が描画されたときに発生します。</summary>
      <param name="e">イベント項目</param>
    </member>
    <member name="M:FarPoint.Win.FontSelector.OnDropDown(System.EventArgs)">
      <summary>ドロップダウンされたときに発生します。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="P:FarPoint.Win.FontSelector.HideImage">
      <summary>画像を非表示にするかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FontSelector.RenderListWithFont">
      <summary>フォントリスト項目をそれぞれのフォントで表示するかどうかを取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.Rect">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="F:FarPoint.Win.Rect.left">
      <summary>左。</summary>
    </member>
    <member name="F:FarPoint.Win.Rect.top">
      <summary>上。</summary>
    </member>
    <member name="F:FarPoint.Win.Rect.right">
      <summary>右。</summary>
    </member>
    <member name="F:FarPoint.Win.Rect.bottom">
      <summary>下。</summary>
    </member>
    <member name="T:FarPoint.Win.HorizontalAlignment">
      <summary>コントロールの内容の水平方向の配置を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.HorizontalAlignment.Left">
      <summary>コントロールの内容を水平軸に沿って左端に揃えます。</summary>
    </member>
    <member name="F:FarPoint.Win.HorizontalAlignment.Center">
      <summary>コントロールの内容を水平軸に沿って左右の端から等間隔に配置します。</summary>
    </member>
    <member name="F:FarPoint.Win.HorizontalAlignment.Right">
      <summary>コントロールの内容を水平軸に沿って右端に揃えます。</summary>
    </member>
    <member name="F:FarPoint.Win.HorizontalAlignment.Justify">
      <summary>セル内で折り返されたテキストを左右に揃えます。</summary>
    </member>
    <member name="F:FarPoint.Win.HorizontalAlignment.Distributed">
      <summary>セル内のテキストを均等割り付けにします。</summary>
    </member>
    <member name="T:FarPoint.Win.VerticalAlignment">
      <summary>コントロールの内容の垂直方向の配置を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.VerticalAlignment.Top">
      <summary>コントロールの内容を垂直軸に沿って上端に揃えます。</summary>
    </member>
    <member name="F:FarPoint.Win.VerticalAlignment.Center">
      <summary>コントロールの内容を垂直軸に沿って上下の端から等間隔に配置します。</summary>
    </member>
    <member name="F:FarPoint.Win.VerticalAlignment.Bottom">
      <summary>コントロールの内容を垂直軸に沿って下端に揃えます。</summary>
    </member>
    <member name="F:FarPoint.Win.VerticalAlignment.Justify">
      <summary>テキストが特別な領域に満たされるように、テキストに空白が挿入されることを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.VerticalAlignment.Distributed">
      <summary>テキストが特別な領域に満たされるように、テキストに空白が挿入されることを示します。</summary>
    </member>
    <member name="T:FarPoint.Win.AppearanceProps">
      <summary>内部使用のみ。外観プロパティを表します。</summary>
    </member>
    <member name="F:FarPoint.Win.AppearanceProps.HorizontalAlignment">
      <summary>水平方向の配置。</summary>
    </member>
    <member name="F:FarPoint.Win.AppearanceProps.VerticalAlignment">
      <summary>垂直方向の配置。</summary>
    </member>
    <member name="F:FarPoint.Win.AppearanceProps.Parent">
      <summary>親オブジェクト。</summary>
    </member>
    <member name="F:FarPoint.Win.AppearanceProps.Font">
      <summary>テキスト フォント。</summary>
    </member>
    <member name="F:FarPoint.Win.AppearanceProps.BackColor">
      <summary>背景色。</summary>
    </member>
    <member name="F:FarPoint.Win.AppearanceProps.ForeColor">
      <summary>テキスト色。</summary>
    </member>
    <member name="T:FarPoint.Win.PictureProps">
      <summary>内部使用のみ。ピクチャプロパティを表します。</summary>
    </member>
    <member name="F:FarPoint.Win.PictureProps.Stretch">
      <summary>ピクチャを拡大してコントロールのサイズに合わせます。</summary>
    </member>
    <member name="F:FarPoint.Win.PictureProps.MaintainScale">
      <summary>コントロール内のピクチャの縦横比を維持します。</summary>
    </member>
    <member name="F:FarPoint.Win.PictureProps.HorizontalAlignment">
      <summary>ピクチャを横向きに配置します。</summary>
    </member>
    <member name="F:FarPoint.Win.PictureProps.VerticalAlignment">
      <summary>ピクチャを縦向きに配置します。</summary>
    </member>
    <member name="F:FarPoint.Win.PictureProps.Image">
      <summary>ピクチャ画像を設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.RenderStyle">
      <summary>画像のレンダリングスタイルを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.RenderStyle.Normal">
      <summary>コントロールに実サイズの画像を表示します(サイズ変更なし）。</summary>
    </member>
    <member name="F:FarPoint.Win.RenderStyle.Stretch">
      <summary>縦横比を無視して画像をサイズ変更し、コントロールのサイズに合わせます。</summary>
    </member>
    <member name="F:FarPoint.Win.RenderStyle.StretchAndScale">
      <summary>縦横比を維持したまま画像をサイズ変更し、コントロールのサイズに合わせます。</summary>
    </member>
    <member name="F:FarPoint.Win.RenderStyle.Tile">
      <summary>画像を複数回表示（タイル表示）し、コントロールのサイズに合わせます。</summary>
    </member>
    <member name="T:FarPoint.Win.VisualStyles">
      <summary>表示スタイルをコントロールに適用するかどうかを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyles.Auto">
      <summary>システム設定を使用して、コントロールの表示方法を決定します。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyles.On">
      <summary>コントロールを表示するときに表示スタイルを適用します。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyles.Off">
      <summary>コントロールを表示するときに表示スタイルを使用しません。</summary>
    </member>
    <member name="T:FarPoint.Win.VisualStyle">
      <summary>表示スタイルを表します。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.FPVSBUTTONCLASS">
      <summary>FPVSBUTTONCLASS定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.FPVSCOMBOCLASS">
      <summary>FPVSCOMBOCLASS定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.FPVSPROGRESSCLASS">
      <summary>FPVSPROGRESSCLASS定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.FPVSSLIDERCLASS">
      <summary>FPVSSLIDERCLASS定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.FPVSSPINCLASS">
      <summary>FPVSSPINCLASS定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.FPVSSCROLLBARCLASS">
      <summary>FPVSSCROLLBARCLASS定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.FPVSHEADERCLASS">
      <summary>FPVSHEADERCLASS定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.FPVSTABCLASS">
      <summary>FPVSTABCLASS定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TABP_TABITEM">
      <summary>TABP_TABITEM定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TIS_NORMAL">
      <summary>TIS_NORMAL定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TIS_HOT">
      <summary>TIS_HOT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TIS_SELECTED">
      <summary>TIS_SELECTED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TIS_DISABLED">
      <summary>TIS_DISABLED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TIS_FOCUSED">
      <summary>TIS_FOCUSED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.SBP_NONE">
      <summary>SBP_NONE定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.SBP_ARROWBTN">
      <summary>SBP_ARROWBTN定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.SBP_THUMBBTNHORZ">
      <summary>SBP_THUMBBTNHORZ定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.SBP_THUMBBTNVERT">
      <summary>SBP_THUMBBTNVERT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.SCRBS_NONE">
      <summary>SCRBS_NONE定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.SCRBS_NORMAL">
      <summary>SCRBS_NORMAL定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.SCRBS_HOT">
      <summary>SCRBS_HOT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.SCRBS_PRESSED">
      <summary>SCRBS_PRESSED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.SCRBS_DISABLED">
      <summary>SCRBS_DISABLED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.ABS_UPNORMAL">
      <summary>ABS_UPNORMAL定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.ABS_UPHOT">
      <summary>ABS_UPHOT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.ABS_UPPRESSED">
      <summary>ABS_UPPRESSED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.ABS_UPDISABLED">
      <summary>ABS_UPDISABLED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.ABS_DOWNNORMAL">
      <summary>ABS_DOWNNORMAL定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.ABS_DOWNHOT">
      <summary>ABS_DOWNHOT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.ABS_DOWNPRESSED">
      <summary>ABS_DOWNPRESSED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.ABS_DOWNDISABLED">
      <summary>ABS_DOWNDISABLED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.ABS_LEFTNORMAL">
      <summary>ABS_LEFTNORMAL定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.ABS_LEFTHOT">
      <summary>ABS_LEFTHOT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.ABS_LEFTPRESSED">
      <summary>ABS_LEFTPRESSED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.ABS_LEFTDISABLED">
      <summary>ABS_LEFTDISABLED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.ABS_RIGHTNORMAL">
      <summary>ABS_RIGHTNORMAL定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.ABS_RIGHTHOT">
      <summary>ABS_RIGHTHOT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.ABS_RIGHTPRESSED">
      <summary>ABS_RIGHTPRESSED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.ABS_RIGHTDISABLED">
      <summary>ABS_RIGHTDISABLED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.HP_NONE">
      <summary>HP_NONE定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.HP_HEADERITEM">
      <summary>HP_HEADERITEM定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.HP_HEADERITEMLEFT">
      <summary>HP_HEADERITEMLEFT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.HP_HEADERITEMRIGHT">
      <summary>HP_HEADERITEMRIGHT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.HIS_NONE">
      <summary>HIS_NONE定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.HIS_NORMAL">
      <summary>HIS_NORMAL定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.HIS_HOT">
      <summary>HIS_HOT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.HIS_PRESSED">
      <summary>HIS_PRESSED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.CP_DROPDOWNBUTTON">
      <summary>CP_DROPDOWNBUTTON定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.CBXS_NORMAL">
      <summary>CBXS_NORMAL定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.CBXS_HOT">
      <summary>CBXS_HOT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.CBXS_PRESSED">
      <summary>CBXS_PRESSED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.CBXS_DISABLED">
      <summary>CBXS_DISABLED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TKP_TRACK">
      <summary>TKP_TRACK定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TKP_TRACKVERT">
      <summary>TKP_TRACKVERT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TKP_THUMB">
      <summary>TKP_THUMB定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TKP_THUMBBOTTOM">
      <summary>TKP_THUMBBOTTOM定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TKP_THUMBTOP">
      <summary>TKP_THUMBTOP定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TKP_THUMBVERT">
      <summary>TKP_THUMBVERT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TKP_THUMBLEFT">
      <summary>TKP_THUMBLEFT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TKP_THUMBRIGHT">
      <summary>TKP_THUMBRIGHT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TKP_TICS">
      <summary>TKP_TICS定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TKP_TICSVERT">
      <summary>TKP_TICSVERT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TKS_NORMAL">
      <summary>TKS_NORMAL定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TSVS_NORMAL">
      <summary>TSVS_NORMAL定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TSS_NORMAL">
      <summary>TSS_NORMAL定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TRS_NORMAL">
      <summary>TRS_NORMAL定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TRVS_NORMAL">
      <summary>TRVS_NORMAL定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUS_NORMAL">
      <summary>TUS_NORMAL定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUS_HOT">
      <summary>TUS_HOT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUS_PRESSED">
      <summary>TUS_PRESSED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUS_FOCUSED">
      <summary>TUS_FOCUSED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUS_DISABLED">
      <summary>TUS_DISABLED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUBS_NORMAL">
      <summary>TUBS_NORMAL定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUBS_HOT">
      <summary>TUBS_HOT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUBS_PRESSED">
      <summary>TUBS_PRESSED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUBS_FOCUSED">
      <summary>TUBS_FOCUSED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUBS_DISABLED">
      <summary>TUBS_DISABLED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUTS_NORMAL">
      <summary>TUTS_NORMAL定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUTS_HOT">
      <summary>TUTS_HOT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUTS_PRESSED">
      <summary>TUTS_PRESSED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUTS_FOCUSED">
      <summary>TUTS_FOCUSED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUTS_DISABLED">
      <summary>TUTS_DISABLED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUVS_NORMAL">
      <summary>TUVS_NORMAL定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUVS_HOT">
      <summary>TUVS_HOT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUVS_PRESSED">
      <summary>TUVS_PRESSED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUVS_FOCUSED">
      <summary>TUVS_FOCUSED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUVS_DISABLED">
      <summary>定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUVLS_NORMAL">
      <summary>TUVLS_NORMAL定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUVLS_HOT">
      <summary>TUVLS_HOT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUVLS_PRESSED">
      <summary>TUVLS_PRESSED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUVLS_FOCUSED">
      <summary>TUVLS_FOCUSED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUVLS_DISABLED">
      <summary>TUVLS_DISABLED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUVRS_NORMAL">
      <summary>TUVRS_NORMAL定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUVRS_HOT">
      <summary>TUVRS_HOT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUVRS_PRESSED">
      <summary>TUVRS_PRESSED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUVRS_FOCUSED">
      <summary>TUVRS_FOCUSED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TUVRS_DISABLED">
      <summary>TUVRS_DISABLED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TP_BUTTON">
      <summary>TP_BUTTON定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.BP_PUSHBUTTON">
      <summary>BP_PUSHBUTTON定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.BP_RADIOBUTTON">
      <summary>BP_RADIOBUTTON定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.BP_CHECKBOX">
      <summary>BP_CHECKBOX定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TS_NORMAL">
      <summary>TS_NORMAL定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TS_HOT">
      <summary>TS_HOT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TS_PRESSED">
      <summary>TS_PRESSED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TS_DISABLED">
      <summary>TS_DISABLED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TS_CHECKED">
      <summary>TS_CHECKED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TS_HOTCHECKED">
      <summary>TS_HOTCHECKED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.PBS_DISABLED">
      <summary>PBS_DISABLED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.RBS_UNCHECKEDNORMAL">
      <summary>RBS_UNCHECKEDNORMAL定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.RBS_UNCHECKEDHOT">
      <summary>RBS_UNCHECKEDHOT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.RBS_UNCHECKEDPRESSED">
      <summary>RBS_UNCHECKEDPRESSED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.RBS_UNCHECKEDDISABLED">
      <summary>RBS_UNCHECKEDDISABLED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.RBS_CHECKEDNORMAL">
      <summary>RBS_CHECKEDNORMAL定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.RBS_CHECKEDHOT">
      <summary>RBS_CHECKEDHOT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.RBS_CHECKEDPRESSED">
      <summary>RBS_CHECKEDPRESSED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.RBS_CHECKEDDISABLED">
      <summary>RBS_CHECKEDDISABLED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.CBS_UNCHECKEDNORMAL">
      <summary>CBS_UNCHECKEDNORMAL定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.CBS_UNCHECKEDHOT">
      <summary>CBS_UNCHECKEDHOT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.CBS_UNCHECKEDPRESSED">
      <summary>CBS_UNCHECKEDPRESSED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.CBS_UNCHECKEDDISABLED">
      <summary>CBS_UNCHECKEDDISABLED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.CBS_CHECKEDNORMAL">
      <summary>CBS_CHECKEDNORMAL定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.CBS_CHECKEDHOT">
      <summary>CBS_CHECKEDHOT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.CBS_CHECKEDPRESSED">
      <summary>CBS_CHECKEDPRESSED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.CBS_CHECKEDDISABLED">
      <summary>CBS_CHECKEDDISABLED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.CBS_MIXEDNORMAL">
      <summary>CBS_MIXEDNORMAL定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.CBS_MIXEDHOT">
      <summary>CBS_MIXEDHOT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.CBS_MIXEDPRESSED">
      <summary>CBS_MIXEDPRESSED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.CBS_MIXEDDISABLED">
      <summary>CBS_MIXEDDISABLED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.PP_BAR">
      <summary>PP_BAR定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.PP_BARVERT">
      <summary>PP_BARVERT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.PP_CHUNK">
      <summary>PP_CHUNK定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.PP_CHUNKVERT">
      <summary>PP_CHUNKVERT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.PP_CHUNKSIZE">
      <summary>PP_CHUNKSIZE定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.PP_CHUNKSPACING">
      <summary>PP_CHUNKSPACING定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.SPIN_UP">
      <summary>SPIN_UP定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.SPIN_DOWN">
      <summary>SPIN_DOWN定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.SPIN_NORMAL">
      <summary>SPIN_NORMAL定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.SPIN_HOT">
      <summary>SPIN_HOT定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.SPIN_PRESSED">
      <summary>SPIN_PRESSED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.SPIN_DISABLED">
      <summary>SPIN_DISABLED定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.TECHNOLOGY">
      <summary>TECHNOLOGY定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.DT_RASDISPLAY">
      <summary>DT_RASDISPLAY定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.RGN_AND">
      <summary>RGN_AND定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.RGN_OR">
      <summary>RGN_OR定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.RGN_XOR">
      <summary>RGN_XOR定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.RGN_DIFF">
      <summary>RGN_DIFF定数。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.RGN_COPY">
      <summary>RGN_COPY定数。</summary>
    </member>
    <member name="M:FarPoint.Win.VisualStyle.UseVisualStyles(System.Windows.Forms.VisualStyles.VisualStyleState,FarPoint.Win.VisualStyles)">
      <summary>VisualStyleStateおよびVisualStylesのビジュアルスタイルモードがサポートされているかどうかを検出します。</summary>
      <param name="state">検出するVisualStyleState。</param>
      <param name="style">検出するVisualStyles。</param>
      <returns></returns>
    </member>
    <member name="M:FarPoint.Win.VisualStyle.IsThemeActive">
      <summary>内部使用のみ。テーマがアクティブテーマであるかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.VisualStyle.OpenThemeData(System.IntPtr,System.String)">
      <summary>内部使用のみ。テーマデータを開きます。</summary>
      <param name="hWnd"></param>
      <param name="pszClassList"></param>
    </member>
    <member name="M:FarPoint.Win.VisualStyle.CloseThemeData(System.IntPtr)">
      <summary>内部使用のみ。テーマデータを閉じます。</summary>
      <param name="hTheme"></param>
    </member>
    <member name="M:FarPoint.Win.VisualStyle.DrawThemeBackground(System.IntPtr,System.IntPtr,System.Int32,System.Int32,FarPoint.Win.VisualStyle.RECT@,FarPoint.Win.VisualStyle.RECT@)">
      <summary>内部使用のみ。テーマ背景を描画します。</summary>
      <param name="hTheme"></param>
      <param name="hDC"></param>
      <param name="iPartId"></param>
      <param name="iStateId"></param>
      <param name="pRect"></param>
      <param name="pClipRect"></param>
    </member>
    <member name="M:FarPoint.Win.VisualStyle.GetThemeInt(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32@)">
      <summary>内部使用のみ。テーマインデックスを取得します。</summary>
      <param name="hTheme"></param>
      <param name="iPartId"></param>
      <param name="iStateId"></param>
      <param name="iPropId"></param>
      <param name="piVal"></param>
      <returns></returns>
    </member>
    <member name="M:FarPoint.Win.VisualStyle.GetDeviceCaps(System.IntPtr,System.Int32)">
      <summary>内部使用のみ。デバイス能力を取得します。</summary>
      <param name="hdc"></param>
      <param name="cap"></param>
      <returns></returns>
    </member>
    <member name="M:FarPoint.Win.VisualStyle.DrawThemeText(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,FarPoint.Win.VisualStyle.RECT@)">
      <summary>内部使用のみ。テーマテキストを描画します。</summary>
      <param name="hTheme"></param>
      <param name="hDC"></param>
      <param name="iPartId"></param>
      <param name="iStateId"></param>
      <param name="pszText"></param>
      <param name="iCharCount"></param>
      <param name="dwTextFlag"></param>
      <param name="dwTextFlags2"></param>
      <param name="pRect"></param>
      <returns></returns>
    </member>
    <member name="M:FarPoint.Win.VisualStyle.GetCurrentThemeName(System.Text.StringBuilder,System.Int32,System.Text.StringBuilder,System.Int32,System.Text.StringBuilder,System.Int32)">
      <summary>現在のテーマ名を取得します。</summary>
      <param name="pszThemeFileName">テーマ名</param>
      <param name="cchMaxNameChars">名前の最大文字数</param>
      <param name="pszColorBuff">色名のバッファー</param>
      <param name="cchMaxColorChars">色の最大文字数</param>
      <param name="pszSizeBuff">サイズのバッファー</param>
      <param name="cchMaxSizeChars">サイズの最大文字数</param>
    </member>
    <member name="M:FarPoint.Win.VisualStyle.SetWorldTransform(System.IntPtr,FarPoint.Win.VisualStyle.XFORM@)">
      <summary>SetWorldTransformメソッド。</summary>
    </member>
    <member name="M:FarPoint.Win.VisualStyle.SetGraphicsMode(System.IntPtr,System.Int32)">
      <summary>SetGraphicsModeメソッド。</summary>
    </member>
    <member name="M:FarPoint.Win.VisualStyle.DeleteObject(System.IntPtr)">
      <summary>DeleteObjectメソッド。</summary>
    </member>
    <member name="M:FarPoint.Win.VisualStyle.BitBlt(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,System.Int32)">
      <summary>BitBltメソッド。</summary>
    </member>
    <member name="M:FarPoint.Win.VisualStyle.PatBlt(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>PatBltメソッド。</summary>
    </member>
    <member name="M:FarPoint.Win.VisualStyle.SetROP2(System.IntPtr,System.Int32)">
      <summary>SetROP2メソッド。</summary>
    </member>
    <member name="M:FarPoint.Win.VisualStyle.SelectObject(System.IntPtr,System.IntPtr)">
      <summary>SelectObjectメソッド。</summary>
    </member>
    <member name="M:FarPoint.Win.VisualStyle.CreateSolidBrush(System.Int32)">
      <summary>CreateSolidBrushメソッド。</summary>
    </member>
    <member name="M:FarPoint.Win.VisualStyle.ExcludeClipRect(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>ExcludeClipRectメソッド。</summary>
    </member>
    <member name="M:FarPoint.Win.VisualStyle.ExtSelectClipRgn(System.IntPtr,System.IntPtr,System.Int32)">
      <summary>ExtSelectClipRgnメソッド。</summary>
    </member>
    <member name="M:FarPoint.Win.VisualStyle.IntersectClipRect(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>IntersectClipRectメソッド。</summary>
    </member>
    <member name="M:FarPoint.Win.VisualStyle.CreateRectRgn(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>CreateRectRgnメソッド。</summary>
    </member>
    <member name="M:FarPoint.Win.VisualStyle.SaveDC(System.IntPtr)">
      <summary>SaveDCメソッド。</summary>
    </member>
    <member name="M:FarPoint.Win.VisualStyle.RestoreDC(System.IntPtr,System.Int32)">
      <summary>RestoreDCメソッド。</summary>
    </member>
    <member name="T:FarPoint.Win.VisualStyle.RECT">
      <summary>内部使用のみ。矩形を定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.RECT.left">
      <summary>左辺を定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.RECT.top">
      <summary>上辺を定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.RECT.right">
      <summary>右辺を定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.RECT.bottom">
      <summary>下辺を定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.VisualStyle.RECT.ToString">
      <summary>文字列に変換します。</summary>
    </member>
    <member name="T:FarPoint.Win.VisualStyle.RGN">
      <summary>内部使用のみ。範囲を定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.RGN.left">
      <summary>左辺を定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.RGN.top">
      <summary>上辺を定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.RGN.right">
      <summary>右辺を定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.RGN.bottom">
      <summary>下辺を定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.VisualStyle.RGN.ToString">
      <summary>文字列に変換します。</summary>
    </member>
    <member name="T:FarPoint.Win.VisualStyle.XFORM">
      <summary>内部使用のみ。変換を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.XFORM.eM11">
      <summary>M11を設定します。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.XFORM.eM12">
      <summary>M12を設定します。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.XFORM.eM21">
      <summary>M21を設定します。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.XFORM.eM22">
      <summary>M22を設定します。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.XFORM.eDx">
      <summary>dxを設定します。</summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyle.XFORM.eDy">
      <summary>dyを設定します。</summary>
    </member>
    <member name="M:FarPoint.Win.VisualStyle.XFORM.ToString">
      <summary>文字列に変換します。</summary>
    </member>
    <member name="T:FarPoint.Win.Picture">
      <summary>表示するピクチャを表します。</summary>
    </member>
    <member name="T:FarPoint.Win.ISerializeSupport">
      <summary>モデルのオブジェクトのXMLへのシリアル化をサポートするインタフェース。</summary>
    </member>
    <member name="M:FarPoint.Win.ISerializeSupport.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトをXMLに保存します。</summary>
      <param name="w">オブジェクトの保存に使用するXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.ISerializeSupport.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトをXMLからロードします。</summary>
      <param name="r">オブジェクトのロード元のXmlNodeReader</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Picture.#ctor">
      <summary>ピクチャを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.Picture.Finalize">
      <summary>Pictureクラスのデストラクターメソッド</summary>
    </member>
    <member name="M:FarPoint.Win.Picture.#ctor(System.Drawing.Image)">
      <summary>画像を指定してピクチャを作成します。</summary>
      <param name="i">画像</param>
    </member>
    <member name="M:FarPoint.Win.Picture.#ctor(System.Drawing.Image,FarPoint.Win.RenderStyle)">
      <summary>画像とスタイルを指定してピクチャを作成します。</summary>
      <param name="i">画像</param>
      <param name="style">スタイル</param>
    </member>
    <member name="M:FarPoint.Win.Picture.#ctor(System.Drawing.Image,System.Drawing.Color)">
      <summary>画像と透過色を指定してピクチャを作成します。</summary>
      <param name="i">画像</param>
      <param name="transparencyColor">透過色</param>
    </member>
    <member name="M:FarPoint.Win.Picture.#ctor(System.Drawing.Image,FarPoint.Win.RenderStyle,System.Drawing.Color)">
      <summary>画像、スタイル、透過色を指定してピクチャを作成します。</summary>
      <param name="i">画像</param>
      <param name="style">スタイル</param>
      <param name="transparencyColor">透過色</param>
    </member>
    <member name="M:FarPoint.Win.Picture.#ctor(System.Drawing.Image,FarPoint.Win.RenderStyle,System.Drawing.Color,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment)">
      <summary>画像、スタイル、透過色、配置を指定してピクチャを作成します。</summary>
      <param name="i">画像</param>
      <param name="style">スタイル</param>
      <param name="transparencyColor">透過色</param>
      <param name="alignHorz">画像の水平配置</param>
      <param name="alignVert">画像の垂直配置</param>
    </member>
    <member name="M:FarPoint.Win.Picture.#ctor(System.Drawing.Image,FarPoint.Win.RenderStyle,System.Drawing.Color,System.Int32)">
      <summary>指定した画像、スタイル、透過色、透過許容誤差を持つピクチャを作成します。</summary>
      <param name="i">画像</param>
      <param name="style">ピクチャのスタイル</param>
      <param name="transparencyColor">透過色</param>
      <param name="transparencyTolerance">色値からの透過許容誤差</param>
    </member>
    <member name="M:FarPoint.Win.Picture.#ctor(System.Drawing.Image,FarPoint.Win.RenderStyle,System.Drawing.Color,System.Int32,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment)">
      <summary>指定した画像、スタイル、透過色（および許容誤差）、内容の配置を持つピクチャを作成します。</summary>
      <param name="i">画像</param>
      <param name="style">ピクチャのスタイル</param>
      <param name="transparencyColor">透過色</param>
      <param name="transparencyTolerance">色値からの透過許容誤差</param>
      <param name="alignHorz">画像の水平配置</param>
      <param name="alignVert">画像の垂直配置</param>
    </member>
    <member name="M:FarPoint.Win.Picture.#ctor(System.Object)">
      <summary>別のピクチャをコピーしてピクチャを作成します。</summary>
      <param name="cloneFrom">ピクチャをコピーするオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Picture.Reset">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.Picture.Clone">
      <summary>内部使用のみ。ピクチャのコピーを作成して返します。</summary>
      <returns>ピクチャのコピー</returns>
    </member>
    <member name="M:FarPoint.Win.Picture.Paint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>指定した矩形にピクチャを描画します。</summary>
      <param name="g">表示するグラフィックス</param>
      <param name="rect">描画する矩形領域</param>
    </member>
    <member name="M:FarPoint.Win.Picture.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>指定した座標位置にピクチャを描画します。</summary>
      <param name="g">表示するグラフィックス</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">ピクチャの横幅（ピクセル単位）</param>
      <param name="height">ピクチャの縦幅（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.Picture.OnPictureChanged(System.EventArgs)">
      <summary>ピクチャが変更されたときに<see cref="E:FarPoint.Win.Picture.PictureChanged" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Picture.Serialize(System.Xml.XmlTextWriter)">
      <summary>ピクチャをXMLに保存します。</summary>
      <param name="w">ピクチャの保存先のXmlTextWriter</param>
    </member>
    <member name="M:FarPoint.Win.Picture.Deserialize(System.Xml.XmlNodeReader)">
      <summary>ピクチャをXMLからロードします。</summary>
      <param name="r">ピクチャのロード元のXmlNodeReader</param>
    </member>
    <member name="M:FarPoint.Win.Picture.Dispose">
      <summary>内部使用のみ。使用されたリソースをすべて解放します。</summary>
    </member>
    <member name="F:FarPoint.Win.Picture.disposed">
      <summary>内部使用のみ。破棄するかどうかを指定します。</summary>
    </member>
    <member name="M:FarPoint.Win.Picture.Dispose(System.Boolean)">
      <summary>内部使用のみ。使用されたリソースをすべて解放します。</summary>
      <param name="disposing">破棄するかどうか</param>
    </member>
    <member name="E:FarPoint.Win.Picture.PictureChanged">
      <summary>ピクチャを変更したとき発生します。</summary>
    </member>
    <member name="P:FarPoint.Win.Picture.TransparencyColor">
      <summary>ピクチャのレンダリングに使用する透過色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.Picture.TransparencyTolerance">
      <summary>透過色として設定された色からの透過許容誤差を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.Picture.Style">
      <summary>ピクチャのレンダリングに使用するスタイルを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.Picture.AlignHorz">
      <summary>ピクチャの水平方向の配置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.Picture.AlignVert">
      <summary>ピクチャの垂直方向の配置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.Picture.Image">
      <summary>表示するピクチャを取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.PictureConverter">
      <summary>Pictureオブジェクトを別の形式に変換します。</summary>
    </member>
    <member name="M:FarPoint.Win.PictureConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>オブジェクトのプロパティ値のセットを指定して、 この型のオブジェクトを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.PictureConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>このオブジェクトの値を変更するのに、CreateInstanceメソッドを呼び出して 新しい値を作成する必要があるかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.PictureConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>ピクチャを指定したファイル形式から変換できるかどうかを判定します。</summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="sourceType">ソースファイル形式</param>
      <returns></returns>
    </member>
    <member name="M:FarPoint.Win.PictureConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>ピクチャを指定したファイル形式に変換できるかどうかを判定します。</summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="destinationType">変換後のファイル形式</param>
    </member>
    <member name="M:FarPoint.Win.PictureConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>ピクチャを指定したファイル形式に変換します。</summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="culture">CultureInfo</param>
      <param name="value">オブジェクト</param>
      <param name="destinationType">ファイル形式</param>
    </member>
    <member name="T:FarPoint.Win.FpImageEditor">
      <summary>FarPoint画像エディタを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.FpImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>値を編集します。</summary>
      <param name="context">型記述子コンテキスト</param>
      <param name="provider">サービスプロバイダー</param>
      <param name="value">値</param>
    </member>
    <member name="T:FarPoint.Win.FpImageConverter">
      <summary>画像オブジェクトの型を変換するFarPoint画像コンバータを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.FpImageConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>画像を指定した型から変換できるかどうかを判定します。</summary>
      <param name="context">型記述子コンテキスト</param>
      <param name="sourceType">ソースファイル形式</param>
      <returns></returns>
    </member>
    <member name="M:FarPoint.Win.FpImageConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>変換元のコンテキストを取得します。</summary>
      <param name="context">型記述子コンテキスト</param>
      <param name="culture">カルチャ情報</param>
      <param name="value">値</param>
    </member>
    <member name="T:FarPoint.Win.FpExpandableObjectConverter">
      <summary>展開可能オブジェクトの型を変換するFarPoint展開可能オブジェクトコンバータを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.FpExpandableObjectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>展開可能オブジェクトを指定した型から変換できるかどうかを判定します。</summary>
      <param name="context">型記述子コンテキスト</param>
      <param name="sourceType">変換元の型</param>
    </member>
    <member name="M:FarPoint.Win.FpExpandableObjectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>変換元のコンテキストを取得します。</summary>
      <param name="context">型記述子コンテキスト</param>
      <param name="culture">カルチャ情報</param>
      <param name="value">値</param>
    </member>
    <member name="T:FarPoint.Win.FpArrayConverter">
      <summary>配列の型を変換するFarPoint配列コンバータを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.FpArrayConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>配列を指定した型から変換できるかどうかを判定します。</summary>
      <param name="context">型記述子コンテキスト</param>
      <param name="sourceType">変換元の型</param>
    </member>
    <member name="M:FarPoint.Win.FpArrayConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>変換元のコンテキストを取得します。</summary>
      <param name="context">型記述子コンテキスト</param>
      <param name="culture">カルチャ情報</param>
      <param name="value">値</param>
    </member>
    <member name="T:FarPoint.Win.PictureEditor">
      <summary>ピクチャエディタを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.PictureEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>エディタ内の値を返します。</summary>
      <param name="context">コンテキスト（ITypeDescriptorContext）</param>
      <param name="provider">プロバイダ（IServiceProvider）</param>
      <param name="value">値</param>
    </member>
    <member name="M:FarPoint.Win.PictureEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>エディタ内に値を描画します。</summary>
      <param name="e">イベントデータを含むPaintValueEventArgsオブジェクト</param>
    </member>
    <member name="T:FarPoint.Win.ComplexBorderSideStyle">
      <summary>セルの一辺の境界線のスタイルを表します。</summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.None">
      <summary>［0］境界線を描画しません。</summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.HairLine">
      <summary>［1］極細の境界線を描画します。</summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.Dotted">
      <summary>［2］点線の境界線を描画します。</summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.DashDotDot">
      <summary>［3］二点鎖線の境界線を描画します。</summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.DashDot">
      <summary>［4］一点鎖線の境界線を描画します。</summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.Dashed">
      <summary>［5］破線の境界線を描画します。</summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.ThinLine">
      <summary>［6］細い境界線を描画します。</summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.MediumDashDotDot">
      <summary>［7］中太の二点鎖線の境界線を描画します。</summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.SlantedDashDot">
      <summary>［8］斜め一点鎖線の境界線を描画します。</summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.MediumDashDot">
      <summary>［9］中太の一点鎖線の境界線を描画します。</summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.MediumDashed">
      <summary>［10］中太の破線の境界線を描画します。</summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.MediumLine">
      <summary>［11］中太の境界線を描画します。</summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.ThickLine">
      <summary>［12］太い境界線を描画します。</summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.DoubleLine">
      <summary>［12］二重実線の境界線を描画します。</summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.UserDefined">
      <summary>［99］ユーザー定義の境界線が設定されていることを表します。</summary>
    </member>
    <member name="T:FarPoint.Win.ComplexBorderSidePattern">
      <summary>セルの一辺の境界線のパターンを表します。</summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSidePattern.Hair">
      <summary>セルの一辺に極細の境界線を描画します。</summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSidePattern.DashDot">
      <summary>セルの一辺に一点鎖線の境界線を描画します。</summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSidePattern.MediumDash">
      <summary>セルの一辺に中太の破線の境界線を描画します。</summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSidePattern.MediumDashDot">
      <summary>セルの一辺に中太の一点鎖線の境界線を描画します。</summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSidePattern.SlantedDashDot">
      <summary>セルの一辺に斜め一点鎖線の境界線を描画します。</summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSidePattern.SlantedCompound">
      <summary>セルの一辺に斜め一点鎖線の境界線を描画します。</summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSidePattern.Dotted">
      <summary>セルの一辺に点線の境界線を描画します。</summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSidePattern.DashDotDot">
      <summary>セルの一辺に二点鎖線の境界線を描画します。</summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSidePattern.MediumDashDotDot">
      <summary>セルの一辺に中太の二点鎖線の境界線を描画します。</summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSidePattern.DoubleCompound">
      <summary>セルの一辺に二重境界線を描画します。</summary>
    </member>
    <member name="T:FarPoint.Win.IBorder">
      <summary>セル周囲の境界線（罫線）の描画をサポートするインタフェース。</summary>
    </member>
    <member name="M:FarPoint.Win.IBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>指定した矩形内に境界線を描画します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
    </member>
    <member name="P:FarPoint.Win.IBorder.Inset">
      <summary>境界線のインセットを取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.IBorder2">
      <summary>セル周囲の境界線（罫線）の描画をサポートするインタフェース。</summary>
    </member>
    <member name="M:FarPoint.Win.IBorder2.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>指定した矩形内に境界線を描画します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="T:FarPoint.Win.IBorder3">
      <summary>セル周囲の境界線（罫線）のPDFへの描画をサポートするインタフェース。</summary>
    </member>
    <member name="M:FarPoint.Win.IBorder3.Paint(FarPoint.Win.IBorderGraphics,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
      <summary>指定した矩形内の境界線をPDFに描画（印刷）します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">レイアウトが右から左かどうか</param>
    </member>
    <member name="T:FarPoint.Win.BevelBorderType">
      <summary>ベベル境界線の種類を表します。</summary>
    </member>
    <member name="F:FarPoint.Win.BevelBorderType.Lowered">
      <summary>［0］凹状のベベル境界線を描画します。</summary>
    </member>
    <member name="F:FarPoint.Win.BevelBorderType.Raised">
      <summary>［1］凹状のベベル境界線を描画します。</summary>
    </member>
    <member name="T:FarPoint.Win.EmptyBorder">
      <summary>スペースがゼロの空の境界線を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.EmptyBorder.#ctor">
      <summary>空の境界線（EmptyBorderオブジェクト）を作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.EmptyBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>指定した矩形内に境界線を描画します。</summary>
      <param name="g">Graphicsオブジェクト</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.EmptyBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>指定した矩形内に境界線を描画します。</summary>
      <param name="g">Graphicsオブジェクト</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.EmptyBorder.Paint(FarPoint.Win.IBorderGraphics,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
      <summary>指定した矩形内の境界線をPDFに描画（印刷）します。</summary>
      <param name="g">Graphicsオブジェクト</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.EmptyBorder.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトをXMLに保存します。</summary>
      <param name="w">オブジェクトの保存先のXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.EmptyBorder.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトをXMLからロードします。</summary>
      <param name="r">オブジェクトのロード元のXmlNodeReader</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.EmptyBorder.Clone">
      <summary>境界線オブジェクトをクローンします。</summary>
      <returns>この境界線オブジェクトのコピー。</returns>
    </member>
    <member name="P:FarPoint.Win.EmptyBorder.Inset">
      <summary>境界線のインセットを取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.LineBorder">
      <summary>一重境界線を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.LineBorder.#ctor(System.Drawing.Color)">
      <summary>色を指定して一重境界線を作成します。</summary>
      <param name="color">境界線の色</param>
    </member>
    <member name="M:FarPoint.Win.LineBorder.#ctor(System.Drawing.Color,System.Int32)">
      <summary>色と太さを指定して一重境界線を作成します。</summary>
      <param name="color">境界線の色</param>
      <param name="thickness">境界線の太さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.LineBorder.#ctor(System.Drawing.Color,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>色、太さ、境界線を描画する辺を指定して 一重境界線を作成します。</summary>
      <param name="color">境界線の色</param>
      <param name="thickness">境界線の太さ（ピクセル単位）</param>
      <param name="left">セルの左辺に線を描画するかどうかを取得します。</param>
      <param name="top">セルの上辺に線を描画するかどうかを取得します。</param>
      <param name="right">セルの右辺に線を描画するかどうかを取得します。</param>
      <param name="bottom">セルの下辺に線を描画するかどうかを取得します。</param>
    </member>
    <member name="M:FarPoint.Win.LineBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>指定した矩形内に境界線を描画します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.LineBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>指定した矩形内に境界線を描画します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.LineBorder.Paint(FarPoint.Win.IBorderGraphics,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
      <summary>指定した矩形内の境界線をPDFに描画（印刷）します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.LineBorder.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトをXMLに保存します。</summary>
      <param name="w">オブジェクトの保存先のXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.LineBorder.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトをXMLからロードします。</summary>
      <param name="r">オブジェクトのロード元のXmlNodeReader</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.LineBorder.Clone">
      <summary>境界線オブジェクトをクローンします。</summary>
      <returns>この境界線オブジェクトのコピー。</returns>
    </member>
    <member name="P:FarPoint.Win.LineBorder.Color">
      <summary>境界線色を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.LineBorder.Inset">
      <summary>境界線のインセットを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.LineBorder.Thickness">
      <summary>境界線の太さを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.LineBorder.Left">
      <summary>左辺の境界線を描画するかどうかを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.LineBorder.Top">
      <summary>上辺の境界線を描画するかどうかを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.LineBorder.Right">
      <summary>右辺の境界線を描画するかどうかを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.LineBorder.Bottom">
      <summary>下辺の境界線を描画するかどうかを取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.LineBorderFactory">
      <summary>パラメータ化されたコンストラクタをサポートしない環境で、 一重境界線を作成するためのクラスを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.LineBorderFactory.#ctor">
      <summary>一重境界線ファクトリを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.LineBorderFactory.CreateLineBorder(System.Drawing.Color)">
      <summary>色を指定して一重境界線を作成します。</summary>
      <param name="color">境界線の色</param>
    </member>
    <member name="M:FarPoint.Win.LineBorderFactory.CreateLineBorder(System.Drawing.Color,System.Int32)">
      <summary>色と太さを指定して一重境界線を作成します。</summary>
      <param name="color">境界線の色</param>
      <param name="thickness">境界線の太さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.LineBorderFactory.CreateLineBorder(System.Drawing.Color,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>指定した色と太さを持つ一重境界線を作成し、 描画する境界線の辺を指定します。</summary>
      <param name="color">境界線の色</param>
      <param name="thickness">境界線の太さ（ピクセル単位）</param>
      <param name="left">セルの左辺に線を描画するかどうかを取得します。</param>
      <param name="top">セルの上辺に線を描画するかどうかを取得します。</param>
      <param name="right">セルの右辺に線を描画するかどうかを取得します。</param>
      <param name="bottom">セルの下辺に線を描画するかどうかを取得します。</param>
    </member>
    <member name="T:FarPoint.Win.RoundedLineBorder">
      <summary>角丸の一重境界線を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.RoundedLineBorder.#ctor(System.Drawing.Color)">
      <summary>色を指定して角丸一重境界線を作成します。</summary>
      <param name="color">境界線の色</param>
    </member>
    <member name="M:FarPoint.Win.RoundedLineBorder.#ctor(System.Drawing.Color,System.Int32)">
      <summary>色と太さを指定して角丸一重境界線を作成します。</summary>
      <param name="color">境界線の色</param>
      <param name="thickness">境界線の太さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.RoundedLineBorder.#ctor(System.Drawing.Color,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>色と太さを指定して角丸の一重境界線を作成し、 描画する境界線の辺を指定します。</summary>
      <param name="color">境界線の色</param>
      <param name="thickness">境界線の太さ（ピクセル単位）</param>
      <param name="left">セルの左辺に線を描画するかどうかを取得します。</param>
      <param name="top">セルの上辺に線を描画するかどうかを取得します。</param>
      <param name="right">セルの右辺に線を描画するかどうかを取得します。</param>
      <param name="bottom">セルの下辺に線を描画するかどうかを取得します。</param>
    </member>
    <member name="M:FarPoint.Win.RoundedLineBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>指定した矩形内の角丸の一重境界線を描画します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.RoundedLineBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>指定した矩形内の角丸の一重境界線を描画します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.RoundedLineBorder.Paint(FarPoint.Win.IBorderGraphics,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
      <summary>指定した矩形内の角丸の一重境界線をPDFに描画（印刷）します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="T:FarPoint.Win.RoundedLineBorderFactory">
      <summary>パラメータ化したコンストラクターをサポートしない環境で角丸の一重境界線オブジェクトを作成するためのクラスを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.RoundedLineBorderFactory.#ctor">
      <summary>角丸の一重境界線ファクトリーオブジェクトを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.RoundedLineBorderFactory.CreateRoundedLineBorder(System.Drawing.Color)">
      <summary>色を指定して角丸一重境界線を作成します。</summary>
      <param name="color">境界線の色</param>
    </member>
    <member name="M:FarPoint.Win.RoundedLineBorderFactory.CreateRoundedLineBorder(System.Drawing.Color,System.Int32)">
      <summary>色と太さを指定して角丸一重境界線を作成します。</summary>
      <param name="color">境界線の色</param>
      <param name="thickness">境界線の太さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.RoundedLineBorderFactory.CreateRoundedLineBorder(System.Drawing.Color,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>色と太さを指定して角丸の一重境界線を作成し、 描画する境界線の辺を指定します。</summary>
      <param name="color">境界線の色</param>
      <param name="thickness">境界線の太さ（ピクセル単位）</param>
      <param name="left">セルの左辺に線を描画するかどうかを取得します。</param>
      <param name="top">セルの上辺に線を描画するかどうかを取得します。</param>
      <param name="right">セルの右辺に線を描画するかどうかを取得します。</param>
      <param name="bottom">セルの下辺に線を描画するかどうかを取得します。</param>
    </member>
    <member name="T:FarPoint.Win.BevelBorder">
      <summary>一重ベベル境界線を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.#ctor(FarPoint.Win.BevelBorderType)">
      <summary>指定した種類のベベル境界線を作成します。</summary>
      <param name="type">ベベル境界線の種類</param>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.#ctor(FarPoint.Win.BevelBorderType,System.Drawing.Color,System.Drawing.Color)">
      <summary>種類、ハイライト色、影の色を指定して ベベル境界線を作成します。</summary>
      <param name="type">ベベル境界線の種類</param>
      <param name="highlight">ベベル境界線のハイライト色</param>
      <param name="shadow">ベベル境界線の影の色</param>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.#ctor(FarPoint.Win.BevelBorderType,System.Drawing.Color,System.Drawing.Color,System.Int32)">
      <summary>種類、ハイライト色、影の色、幅を指定して ベベル境界線を作成します。</summary>
      <param name="type">ベベル境界線の種類</param>
      <param name="highlight">ベベル境界線のハイライト色</param>
      <param name="shadow">ベベル境界線の影の色</param>
      <param name="thickness">ベベル境界線の幅（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.#ctor(FarPoint.Win.BevelBorderType,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>種類、ハイライト色、影の色、幅、描画する辺を指定して ベベル境界線を作成します。</summary>
      <param name="type">ベベル境界線の種類</param>
      <param name="highlight">ベベル境界線のハイライト色</param>
      <param name="shadow">ベベル境界線の影の色</param>
      <param name="thickness">ベベル境界線の幅（ピクセル単位）</param>
      <param name="left">左辺に描画するかどうか</param>
      <param name="top">上辺に描画するかどうか</param>
      <param name="right">右辺に描画するかどうか</param>
      <param name="bottom">下辺に描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.PaintLowered(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>指定した矩形に凹状境界線を描画します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">凹状境界線の幅（ピクセル単位）</param>
      <param name="height">凹状境界線の高さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.PaintLowered(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>指定した矩形に凹状境界線を描画します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">凹状境界線の幅（ピクセル単位）</param>
      <param name="height">凹状境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.PaintRaised(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>指定した矩形内に凸状境界線を描画します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">凸状境界線の幅（ピクセル単位）</param>
      <param name="height">凸状境界線の高さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.PaintRaised(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>指定した矩形内に凸状境界線を描画します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">凸状境界線の幅（ピクセル単位）</param>
      <param name="height">凸状境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>指定した矩形内にベベル境界線を描画します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>指定した矩形内にベベル境界線を描画します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.Paint(FarPoint.Win.IBorderGraphics,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
      <summary>指定した矩形内のベベル境界線をPDFに描画（印刷）します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.PaintRaised(FarPoint.Win.IBorderGraphics,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
      <summary>指定した矩形内の浮き出し境界線をPDFに描画（印刷）します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">凸状境界線の幅（ピクセル単位）</param>
      <param name="height">凸状境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.PaintLowered(FarPoint.Win.IBorderGraphics,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
      <summary>指定した矩形内のくぼんだ境界線をPDFに描画（印刷）します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">凹状境界線の幅（ピクセル単位）</param>
      <param name="height">凹状境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトをXMLに保存します。</summary>
      <param name="w">オブジェクトの保存先のXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトをXMLからロードします。</summary>
      <param name="r">オブジェクトのロード元のXmlNodeReader</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.Clone">
      <summary>境界線オブジェクトをクローンします。</summary>
      <returns>この境界線オブジェクトのコピー。</returns>
    </member>
    <member name="P:FarPoint.Win.BevelBorder.Type">
      <summary>ベベル境界線の種類を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.BevelBorder.Highlight">
      <summary>境界線のハイライト色を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.BevelBorder.Shadow">
      <summary>境界線の影の色を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.BevelBorder.Thickness">
      <summary>境界線の太さを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.BevelBorder.Inset">
      <summary>境界線のインセットを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.BevelBorder.Left">
      <summary>左辺の境界線を描画するかどうかを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.BevelBorder.Top">
      <summary>上辺の境界線を描画するかどうかを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.BevelBorder.Right">
      <summary>右辺の境界線を描画するかどうかを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.BevelBorder.Bottom">
      <summary>下辺の境界線を描画するかどうかを取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.BevelBorderFactory">
      <summary>パラメータ化されたコンストラクタをサポートしない環境で、 ベベル境界線を作成するためのオブジェクトを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.BevelBorderFactory.#ctor">
      <summary>ベベル境界線ファクトリを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.BevelBorderFactory.CreateBevelBorder(FarPoint.Win.BevelBorderType)">
      <summary>指定した種類のベベル境界線を作成します。</summary>
      <param name="type">ベベル境界線の種類</param>
      <returns>指定されたパラメータを持つベベル境界線（BevelBorderオブジェクト）</returns>
    </member>
    <member name="M:FarPoint.Win.BevelBorderFactory.CreateBevelBorder(FarPoint.Win.BevelBorderType,System.Drawing.Color,System.Drawing.Color)">
      <summary>種類、ハイライト色、影の色を指定して ベベル境界線を作成します。</summary>
      <param name="type">ベベル境界線の種類（凹／凸）</param>
      <param name="highlight">ベベル境界線のハイライト色</param>
      <param name="shadow">ベベル境界線の影の色</param>
      <returns>指定されたパラメータを持つベベル境界線（BevelBorderオブジェクト）</returns>
    </member>
    <member name="M:FarPoint.Win.BevelBorderFactory.CreateBevelBorder(FarPoint.Win.BevelBorderType,System.Drawing.Color,System.Drawing.Color,System.Int32)">
      <summary>種類、ハイライト色、影の色、幅を指定して ベベル境界線を作成します。</summary>
      <param name="type">ベベル境界線の種類（凹／凸）</param>
      <param name="highlight">ベベル境界線のハイライト色</param>
      <param name="shadow">ベベル境界線の影の色</param>
      <param name="thickness">ベベル境界線の幅（ピクセル単位）</param>
      <returns>指定されたパラメータを持つベベル境界線（BevelBorderオブジェクト）</returns>
    </member>
    <member name="M:FarPoint.Win.BevelBorderFactory.CreateBevelBorder(FarPoint.Win.BevelBorderType,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>種類、ハイライト色、影の色、幅、描画する辺を指定して ベベル境界線を作成します。</summary>
      <param name="type">ベベル境界線の種類（凹／凸）</param>
      <param name="highlight">ベベル境界線のハイライト色</param>
      <param name="shadow">ベベル境界線の影の色</param>
      <param name="thickness">ベベル境界線の幅（ピクセル単位）</param>
      <param name="left">左辺に描画するかどうか</param>
      <param name="top">上辺に描画するかどうか</param>
      <param name="right">右辺に描画するかどうか</param>
      <param name="bottom">下辺に描画するかどうか</param>
      <returns>指定されたパラメータを持つベベル境界線（BevelBorderオブジェクト）</returns>
    </member>
    <member name="T:FarPoint.Win.CompoundBorder">
      <summary>複合境界線を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.CompoundBorder.#ctor(FarPoint.Win.IBorder,FarPoint.Win.IBorder)">
      <summary>指定した内側境界線と外側境界線を使用し、複合境界線を作成します。</summary>
      <param name="outside">外側境界線</param>
      <param name="inside">内側境界線</param>
    </member>
    <member name="M:FarPoint.Win.CompoundBorder.#ctor(FarPoint.Win.IBorder,FarPoint.Win.IBorder,System.Int32,System.Drawing.Color)">
      <summary>内側境界線、外側境界線、面の色を指定して、 複合境界線を作成します。</summary>
      <param name="outer">外側境界線</param>
      <param name="inner">内側境界線</param>
      <param name="faceWidth">境界線の面の幅</param>
      <param name="faceColor">境界線の面の色</param>
    </member>
    <member name="M:FarPoint.Win.CompoundBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>指定した矩形内に複合境界線を描画します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">複合境界線の幅（ピクセル単位）</param>
      <param name="height">複合境界線の高さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.CompoundBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>指定した矩形内に複合境界線を描画します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">複合境界線の幅（ピクセル単位）</param>
      <param name="height">複合境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.CompoundBorder.Paint(FarPoint.Win.IBorderGraphics,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
      <summary>指定した矩形内の複合境界線をPDFに描画（印刷）します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">複合境界線の幅（ピクセル単位）</param>
      <param name="height">複合境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.CompoundBorder.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトをXMLに保存します。</summary>
      <param name="w">オブジェクトの保存先のXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.CompoundBorder.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトをXMLからロードします。</summary>
      <param name="r">オブジェクトのロード元のXmlNodeReader</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.CompoundBorder.Clone">
      <summary>境界線オブジェクトをクローンします。</summary>
      <returns>この境界線オブジェクトのコピー。</returns>
    </member>
    <member name="P:FarPoint.Win.CompoundBorder.Outside">
      <summary>複合境界線の外側境界線を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.CompoundBorder.Inside">
      <summary>複合境界線の内側境界線を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.CompoundBorder.Inset">
      <summary>複合境界線の境界線のインセットを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.CompoundBorder.FaceColor">
      <summary>複合境界線の面の色を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.CompoundBorder.FaceWidth">
      <summary>複合境界線の面の幅を取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.CompoundBorderFactory">
      <summary>パラメータ化されたコンストラクタをサポートしない環境で、 複合境界線を作成するためのオブジェクトを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.CompoundBorderFactory.#ctor">
      <summary>複合境界線ファクトリを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.CompoundBorderFactory.CreateCompoundBorder(FarPoint.Win.IBorder,FarPoint.Win.IBorder)">
      <summary>指定した内側境界線と外側境界線を使用し、複合境界線を作成します。</summary>
      <param name="outside">外側境界線</param>
      <param name="inside">内側境界線</param>
      <returns>指定されたパラメータを持つ複合境界線（CompoundBorderオブジェクト）</returns>
    </member>
    <member name="T:FarPoint.Win.ComplexBorderSide">
      <summary>４辺から成る複合境界線オブジェクトの１辺を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSide.#ctor">
      <summary>デフォルト色SystemColors.WindowFrame、デフォルト幅１、デフォルト破線スタイルSolid、 空の破線パターン、および空の複合配列を持つ複合境界線の１辺を作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSide.#ctor(FarPoint.Win.ComplexBorderSideStyle)">
      <summary>スタイルを指定して複合境界線の１辺を作成します。</summary>
      <param name="sideStyle">境界線の１辺のスタイル</param>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSide.#ctor(FarPoint.Win.ComplexBorderSideStyle,System.Drawing.Color)">
      <summary>スタイルと色を指定して複合境界線の１辺を作成します。</summary>
      <param name="sideStyle">境界線の１辺のスタイル</param>
      <param name="sideColor">境界線の１辺の色</param>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSide.#ctor(System.Drawing.Color)">
      <summary>色を指定して複合境界線の１辺を作成します。</summary>
      <param name="color">境界線の１辺の色</param>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSide.#ctor(System.Drawing.Color,System.Int32)">
      <summary>色と幅を指定して複合境界線の１辺を作成します。</summary>
      <param name="color">境界線の１辺の色</param>
      <param name="width">境界線の１辺の幅（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSide.#ctor(System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.DashStyle)">
      <summary>色、幅、破線スタイルを指定して複合境界線の１辺を作成します。</summary>
      <param name="color">境界線の１辺の色</param>
      <param name="width">境界線の１辺の幅（ピクセル単位）</param>
      <param name="dashStyle">境界線の１辺の破線スタイル （.NET FrameworkのDashStyle列挙体のいずれか）</param>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSide.#ctor(System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.DashStyle,System.Single[],System.Single[])">
      <summary>色、幅、破線スタイル、破線パターン、複合配列を指定して 複合境界線の１辺を作成します。</summary>
      <param name="color">境界線の１辺の色</param>
      <param name="width">境界線の１辺の幅（ピクセル単位）</param>
      <param name="dashStyle">境界線の１辺の破線スタイル （Microsoft .NET FrameworkのDashStyle列挙体のいずれか）</param>
      <param name="dashPattern">境界線の破線パターン</param>
      <param name="compoundArray">平行線とスペースから構成される複合線を表す値の配列</param>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSide.#ctor(System.Boolean,System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.DashStyle,System.Single[],System.Single[])">
      <summary>色、幅、破線スタイル、破線パターン、複合配列、 描画フラグを指定して複合境界線の１辺を作成します。</summary>
      <param name="draw">この境界線を描画するかどうかを表すブール値</param>
      <param name="color">境界線の１辺の色</param>
      <param name="width">境界線の１辺の幅（ピクセル単位）</param>
      <param name="dashStyle">境界線の１辺の破線スタイル （Microsoft .NET FrameworkのDashStyle列挙体のいずれか）</param>
      <param name="dashPattern">境界線の破線パターン</param>
      <param name="compoundArray">平行線とスペースから構成される複合線を表す値の配列</param>
      <exception cref="T:System.ArgumentException">指定された破線パターンが有効ではありません。破線パターンは正の値である必要があります。</exception>
      <exception cref="T:System.ArgumentException">指定された複合配列値が有効ではありません。複合配列値は０から１の間である必要があります。</exception>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSide.Equals(System.Object)">
      <summary>指定したオブジェクトをこのComplexBorderSideオブジェクトと比較します。</summary>
      <param name="o">比較するオブジェクト</param>
      <returns>等しい場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSide.GetHashCode">
      <summary>ComplexBorderSideオブジェクトのハッシュコードを取得します。</summary>
      <returns>オブジェクトのハッシュコードの整数</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSide.ToString">
      <summary>複合境界線の辺を文字列に変換します。</summary>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSide.Clone">
      <summary>境界線オブジェクトをクローンします。</summary>
      <returns>この境界線オブジェクトのコピー。</returns>
    </member>
    <member name="P:FarPoint.Win.ComplexBorderSide.Draw">
      <summary>この１辺を複合境界線に描画するかどうかを表すブール値を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.ComplexBorderSide.Color">
      <summary>複合境界線のこの１辺の色を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.ComplexBorderSide.Width">
      <summary>複合境界線のこの１辺の幅を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.ComplexBorderSide.DashStyle">
      <summary>複合境界線のこの１辺の破線スタイルを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.ComplexBorderSide.DashPattern">
      <summary>複合境界線のこの１辺の破線パターン配列を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.ComplexBorderSide.CompoundArray">
      <summary>複合境界線のこの１辺の、平行線とスペースから 構成される複合線を表す配列値を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.ComplexBorderSide.Style">
      <summary>複合境界線のこの１辺のスタイルを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.ComplexBorderSide.Empty">
      <summary>空のComplexBorderSideを取得します（DrawがFalse）。</summary>
    </member>
    <member name="T:FarPoint.Win.ComplexBorderSideFactory">
      <summary>パラメータ化したコンストラクタをサポートしない環境で 複合境界線の１辺を作成する手段を提供するオブジェクトを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideFactory.#ctor">
      <summary>複合境界線の１辺を作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideFactory.CreateComplexBorderSide(FarPoint.Win.ComplexBorderSideStyle)">
      <summary>ComplexBorderSideStyleを指定して複合境界線の１辺を作成します。</summary>
      <param name="sideStyle">辺のComplexBorderSideStyle</param>
      <returns>指定されたパラメータを持つ複合境界線の１辺（ComplexBorderSideオブジェクト）</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideFactory.CreateComplexBorderSide(FarPoint.Win.ComplexBorderSideStyle,System.Drawing.Color)">
      <summary>ComplexBorderSideStyleと色を指定して複合境界線の１辺を作成します。</summary>
      <param name="sideStyle">辺のComplexBorderSideStyle</param>
      <param name="sideColor">辺の色</param>
      <returns>指定されたパラメータを持つ複合境界線の１辺（ComplexBorderSideオブジェクト）</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideFactory.CreateComplexBorderSide(System.Drawing.Color)">
      <summary>色を指定して複合境界線の１辺を作成します。</summary>
      <param name="color">辺の色</param>
      <returns>指定されたパラメータを持つ複合境界線の１辺（ComplexBorderSideオブジェクト）</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideFactory.CreateComplexBorderSide(System.Drawing.Color,System.Int32)">
      <summary>色と幅を指定して複合境界線の１辺を作成します。</summary>
      <param name="color">辺の色</param>
      <param name="width">辺の幅</param>
      <returns>指定されたパラメータを持つ複合境界線の１辺（ComplexBorderSideオブジェクト）</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideFactory.CreateComplexBorderSide(System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.DashStyle)">
      <summary>色、幅、破線スタイルを指定して複合境界線の１辺を作成します。</summary>
      <param name="color">辺の色</param>
      <param name="width">辺の幅</param>
      <param name="dashStyle">辺の破線スタイル</param>
      <returns>指定されたパラメータを持つ複合境界線の１辺（ComplexBorderSideオブジェクト）</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideFactory.CreateComplexBorderSide(System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.DashStyle,System.Single[],System.Single[])">
      <summary>色、幅、破線スタイル、破線パターン、複合配列を指定して複合境界線の１辺を作成します。</summary>
      <param name="color">辺の色</param>
      <param name="width">辺の幅</param>
      <param name="dashStyle">辺の破線スタイル</param>
      <param name="dashPattern">辺の破線パターン</param>
      <param name="compoundArray">辺の複合配列</param>
      <returns>指定されたパラメータを持つ複合境界線の１辺（ComplexBorderSideオブジェクト）</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideFactory.CreateComplexBorderSide(System.Boolean,System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.DashStyle,System.Single[],System.Single[])">
      <summary>描画フラグ、色、幅、破線スタイル、破線パターン、複合配列を指定して複合境界線の１辺を作成します。</summary>
      <param name="draw">この辺を描画するかどうか</param>
      <param name="color">辺の色</param>
      <param name="width">辺の幅</param>
      <param name="dashStyle">辺の破線スタイル</param>
      <param name="dashPattern">辺の破線パターン</param>
      <param name="compoundArray">辺の複合配列</param>
      <returns>指定されたパラメータを持つ複合境界線の１辺（ComplexBorderSideオブジェクト）</returns>
    </member>
    <member name="T:FarPoint.Win.ComplexBorderSideConverter">
      <summary>ComplexBorderSideオブジェクトのデータ型を別のデータ型に変換します。</summary>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>オブジェクトのプロパティ値のセットを指定して、 この型のオブジェクトを作成します。</summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="propertyValues">プロパティ値のIDictionary</param>
      <returns>指定されたパラメータを持つ複合境界線の１辺（ComplexBorderSideオブジェクト）</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>このオブジェクトの値を変更するのに、CreateInstanceメソッドを呼び出して 新しい値を作成する必要があるかどうかを判定します。</summary>
      <param name="context">ITypeDescriptorContext</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>この型のプロパティのセットを取得します。</summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="value">オブジェクト</param>
      <param name="attributes">属性（プロパティ）</param>
      <returns>プロパティ</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>このオブジェクトがプロパティをサポートするかどうかを判定します。</summary>
      <param name="context">ITypeDescriptorContext</param>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>複合境界線の１辺のオブジェクトを指定した型に変換できるかどうかを判定します。</summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="destinationType">型</param>
      <returns>複合境界線の１辺のオブジェクトを指定した型に変換できる場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>ComplexBorderSideオブジェクトを文字列に変換します。</summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="culture">CultureInfo</param>
      <param name="value">オブジェクト</param>
      <param name="destinationType">型</param>
      <returns>ComplexBorderSideオブジェクトの文字列表現</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>オブジェクトを逆シリアル化します。</summary>
      <param name="manager">シリアル化マネージャ</param>
      <param name="codeObject">コード オブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>オブジェクトをシリアル化します。</summary>
      <param name="manager">シリアル化マネージャ</param>
      <param name="value">オブジェクト値</param>
    </member>
    <member name="T:FarPoint.Win.ComplexBorder">
      <summary>複合境界線を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ComplexBorder.#ctor(FarPoint.Win.ComplexBorderSide)">
      <summary>指定したComplexBorderSideオブジェクトを４辺すべてに使用して 複合境界線を作成します。</summary>
      <param name="sides">４辺すべてに使用する複合境界線の辺（ComplexBorderSideオブジェクト）</param>
    </member>
    <member name="M:FarPoint.Win.ComplexBorder.#ctor(FarPoint.Win.ComplexBorderSide,FarPoint.Win.ComplexBorderSide,FarPoint.Win.ComplexBorderSide,FarPoint.Win.ComplexBorderSide)">
      <summary>各辺のComplexBorderSideStyleを指定して複合境界線を作成します。</summary>
      <param name="left">複合境界線の左辺（ComplexBorderSideオブジェクト）</param>
      <param name="top">複合境界線の上辺（ComplexBorderSideオブジェクト）</param>
      <param name="right">複合境界線の右辺（ComplexBorderSideオブジェクト）</param>
      <param name="bottom">複合境界線の下辺（ComplexBorderSideオブジェクト）</param>
    </member>
    <member name="M:FarPoint.Win.ComplexBorder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化情報から新しい複合境界線オブジェクトを作成します。</summary>
      <param name="info">シリアル化したオブジェクトデータを保持するオブジェクト</param>
      <param name="context">シリアル化元またはシリアル化先に関するコンテキスト情報</param>
    </member>
    <member name="M:FarPoint.Win.ComplexBorder.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>複合境界線オブジェクトをシリアル化します。</summary>
      <param name="info">シリアル化したオブジェクトデータを保持するオブジェクト</param>
      <param name="context">シリアル化元またはシリアル化先に関するコンテキスト情報</param>
    </member>
    <member name="M:FarPoint.Win.ComplexBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>指定した矩形内に複合境界線を描画します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">複合境界線の幅（ピクセル単位）</param>
      <param name="height">複合境界線の高さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.ComplexBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>指定した矩形内に複合境界線を描画します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">複合境界線の幅（ピクセル単位）</param>
      <param name="height">複合境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.ComplexBorder.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトをXMLに保存します。</summary>
      <param name="w">オブジェクトの保存先のXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorder.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトをXMLからロードします。</summary>
      <param name="r">オブジェクトのロード元のXmlNodeReader</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorder.Equals(System.Object)">
      <summary>指定したオブジェクトをこのComplexBorderオブジェクトと比較します。</summary>
      <param name="o">比較するオブジェクト</param>
      <returns>等しい場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorder.GetHashCode">
      <summary>ComplexBorderオブジェクトのハッシュコードを取得します。</summary>
      <returns>オブジェクトのハッシュコードの整数</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorder.Paint(FarPoint.Win.IBorderGraphics,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
      <summary>指定した矩形内の複合境界線をPDFに描画（印刷）します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">複合境界線の幅（ピクセル単位）</param>
      <param name="height">複合境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.ComplexBorder.Clone">
      <summary>境界線オブジェクトをクローンします。</summary>
      <returns>この境界線オブジェクトのコピー。</returns>
    </member>
    <member name="P:FarPoint.Win.ComplexBorder.Inset">
      <summary>境界線のインセットを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.ComplexBorder.Left">
      <summary>左辺のComplexBorderSideオブジェクトを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.ComplexBorder.Top">
      <summary>上辺のComplexBorderSideオブジェクトを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.ComplexBorder.Right">
      <summary>右辺のComplexBorderSideオブジェクトを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.ComplexBorder.Bottom">
      <summary>下辺のComplexBorderSideオブジェクトを取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.ComplexBorderFactory">
      <summary>パラメータ化したコンストラクタをサポートしない環境で 複合境界線を作成する手段を提供するオブジェクトを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderFactory.#ctor">
      <summary>複合境界線ファクトリを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderFactory.CreateComplexBorder(FarPoint.Win.ComplexBorderSide)">
      <summary>指定した辺を４辺すべてに使用して 複合境界線を作成します。</summary>
      <param name="sides">４辺すべてに使用する複合境界線の辺（ComplexBorderSideオブジェクト）</param>
      <returns>指定されたパラメータを持つ複合境界線（ComplexBorderオブジェクト）</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderFactory.CreateComplexBorder(FarPoint.Win.ComplexBorderSide,FarPoint.Win.ComplexBorderSide,FarPoint.Win.ComplexBorderSide,FarPoint.Win.ComplexBorderSide)">
      <summary>各辺を指定して複合境界線を作成します。</summary>
      <param name="left">複合境界線の左辺（ComplexBorderSideオブジェクト）</param>
      <param name="top">複合境界線の上辺（ComplexBorderSideオブジェクト）</param>
      <param name="right">複合境界線の右辺（ComplexBorderSideオブジェクト）</param>
      <param name="bottom">複合境界線の下辺（ComplexBorderSideオブジェクト）</param>
      <returns>指定されたパラメータを持つ複合境界線（ComplexBorderオブジェクト）</returns>
    </member>
    <member name="T:FarPoint.Win.DoubleLineBorder">
      <summary>二重境界線を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.DoubleLineBorder.#ctor(System.Drawing.Color)">
      <summary>色を指定して、３ピクセル幅の二重境界線を作成します。</summary>
      <param name="color">二重境界線の色</param>
    </member>
    <member name="M:FarPoint.Win.DoubleLineBorder.#ctor(System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>色と描画する辺を指定して二重境界線を 作成します。</summary>
      <param name="color">二重境界線の色</param>
      <param name="left">左辺に描画するかどうか</param>
      <param name="top">上辺に描画するかどうか</param>
      <param name="right">右辺に描画するかどうか</param>
      <param name="bottom">下辺に描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.DoubleLineBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>指定した矩形内の二重境界線を描画します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.DoubleLineBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>指定した矩形内の二重境界線を描画します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.DoubleLineBorder.Paint(FarPoint.Win.IBorderGraphics,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
      <summary>指定した矩形内の二重境界線をPDFに描画（印刷）します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.DoubleLineBorder.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトをXMLに保存します。</summary>
      <param name="w">オブジェクトの保存先のXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.DoubleLineBorder.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトをXMLからロードします。</summary>
      <param name="r">オブジェクトのロード元のXmlNodeReader</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="P:FarPoint.Win.DoubleLineBorder.Thickness">
      <summary>二重境界線の幅を取得します（常に３に設定されます）。</summary>
    </member>
    <member name="T:FarPoint.Win.DoubleLineBorderFactory">
      <summary>パラメータ化したコンストラクタをサポートしない環境で 二重境界線を作成する手段を提供するクラスを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.DoubleLineBorderFactory.#ctor">
      <summary>二重境界線ファクトリを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.DoubleLineBorderFactory.CreateDoubleLineBorder(System.Drawing.Color)">
      <summary>色を指定して二重境界線を作成します。</summary>
      <param name="color">二重境界線の色</param>
      <returns>指定されたパラメータを持つ二重境界線（DoubleLineBorderオブジェクト）</returns>
    </member>
    <member name="M:FarPoint.Win.DoubleLineBorderFactory.CreateDoubleLineBorder(System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>色と描画する辺を指定して二重境界線を作成します。</summary>
      <param name="color">二重境界線の色</param>
      <param name="left">左辺に描画するかどうか</param>
      <param name="top">上辺に描画するかどうか</param>
      <param name="right">右辺に描画するかどうか</param>
      <param name="bottom">下辺に描画するかどうか</param>
      <returns>指定されたパラメータを持つ二重境界線（DoubleLineBorderオブジェクト）</returns>
    </member>
    <member name="T:FarPoint.Win.InstanceDescriptorCodeDomSerializer">
      <summary>内部使用のみ。インスタンス記述子のコード DOM シリアライザ。</summary>
    </member>
    <member name="M:FarPoint.Win.InstanceDescriptorCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>逆シリアル化します。</summary>
      <param name="manager">シリアル化マネージャ</param>
      <param name="codeObject">コード オブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.InstanceDescriptorCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>シリアライザ。</summary>
      <param name="manager">シリアル化マネージャ</param>
      <param name="value">値</param>
    </member>
    <member name="T:FarPoint.Win.IBorderGraphics">
      <summary>境界線グラフィックをサポートするインタフェース。</summary>
    </member>
    <member name="M:FarPoint.Win.IBorderGraphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>円弧を描画します。</summary>
      <param name="cornerPen">コーナーペン</param>
      <param name="x">x座標</param>
      <param name="y">y座標</param>
      <param name="width">幅</param>
      <param name="height">高さ</param>
      <param name="startAngle">開始角度</param>
      <param name="sweepAngle">掃引角度</param>
    </member>
    <member name="M:FarPoint.Win.IBorderGraphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>線を描画します。</summary>
      <param name="pen">ペン</param>
      <param name="x1">1つ目の点のX座標</param>
      <param name="y1">1つ目の点のY座標</param>
      <param name="x2">2つ目の点のX座標</param>
      <param name="y2">1つ目の点のY座標</param>
    </member>
    <member name="M:FarPoint.Win.IBorderGraphics.IntersectClip(System.Drawing.Region)">
      <summary>グラフィックオブジェクトの現在のクリップ領域と指定した領域との交差部分を検出します。</summary>
      <param name="region">領域</param>
    </member>
    <member name="M:FarPoint.Win.IBorderGraphics.Restore(System.Object)">
      <summary>指定したグラフィック状態を復元します。</summary>
      <param name="state">グラフィック状態</param>
    </member>
    <member name="M:FarPoint.Win.IBorderGraphics.Save">
      <summary>グラフィックオブジェクトのこのインスタンスを保存します。</summary>
    </member>
    <member name="T:FarPoint.Win.ApplyBorderEventArgs">
      <summary>ApplyBorderイベントのイベントデータを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ApplyBorderEventArgs.#ctor(FarPoint.Win.IBorder)">
      <summary>新しいApplyBorderEventArgsオブジェクトを構築します。</summary>
    </member>
    <member name="P:FarPoint.Win.ApplyBorderEventArgs.Border">
      <summary>境界線を取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.ApplyBorderEventHandler">
      <summary>ApplyBorderイベントを処理する定義済みメソッドを表します。</summary>
    </member>
    <member name="T:FarPoint.Win.BorderEditorUI">
      <summary>境界線エディタユーザーインタフェースを表します。</summary>
    </member>
    <member name="F:FarPoint.Win.BorderEditorUI.components">
      <summary>必須デザイナ変数。</summary>
    </member>
    <member name="M:FarPoint.Win.BorderEditorUI.#ctor">
      <summary>新しい境界線エディタユーザーインタフェースを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.BorderEditorUI.#ctor(FarPoint.Win.IBorder)">
      <summary>新しい境界線エディタユーザーインタフェースを作成します。</summary>
      <param name="border"></param>
    </member>
    <member name="M:FarPoint.Win.BorderEditorUI.SetBorder(FarPoint.Win.IBorder)">
      <summary>境界線を設定します。</summary>
      <param name="border">境界線</param>
    </member>
    <member name="M:FarPoint.Win.BorderEditorUI.SetBorderInternal(FarPoint.Win.IBorder)">
      <summary>内部使用のみ。境界線を設定します。</summary>
      <param name="border">境界線</param>
    </member>
    <member name="M:FarPoint.Win.BorderEditorUI.Dispose(System.Boolean)">
      <summary>使用されたリソースをすべてクリーンアップします。</summary>
    </member>
    <member name="M:FarPoint.Win.BorderEditorUI.InitializeComponent">
      <summary>デザイナサポートの必須メソッド。このメソッドの内容は コードエディタで変更しないでください。</summary>
    </member>
    <member name="E:FarPoint.Win.BorderEditorUI.ApplyChanged">
      <summary>変更を適用したときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.BorderEditorUI.DiscardChanged">
      <summary>変更を破棄したときに発生します。</summary>
    </member>
    <member name="T:FarPoint.Win.ButtonTextAlign">
      <summary>ボタンテキストの配置を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.ButtonTextAlign.TextBottomPictTop">
      <summary>テキストをコントロールの下部に、ピクチャを上部に配置します。</summary>
    </member>
    <member name="F:FarPoint.Win.ButtonTextAlign.TextTopPictBottom">
      <summary>テキストをコントロールの上部に、ピクチャを下部に配置します。</summary>
    </member>
    <member name="F:FarPoint.Win.ButtonTextAlign.TextLeftPictRight">
      <summary>テキストをコントロールの左側に、ピクチャを右側に配置します。</summary>
    </member>
    <member name="F:FarPoint.Win.ButtonTextAlign.TextRightPictLeft">
      <summary>テキストをコントロールの右側に、ピクチャを左側に配置します。</summary>
    </member>
    <member name="T:FarPoint.Win.BackStyle">
      <summary>背景スタイルを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.BackStyle.Default">
      <summary>デフォルトの背景スタイルを表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.BackStyle.Gradient">
      <summary>グラデーション背景スタイルを表示します。</summary>
    </member>
    <member name="T:FarPoint.Win.FpButtonPaintArgs">
      <summary>FarPoint ボタン描画イベント引数。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.g">
      <summary>ボタンのグラフィック デバイス。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.r">
      <summary>ボタンの矩形領域。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.rectTextIn">
      <summary>テキストの矩形領域。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.backColor">
      <summary>ボタンの背景色。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.foreColor">
      <summary>ボタンのテキスト色。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.font">
      <summary>ボタンのテキストのフォント フェース。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.halign">
      <summary>ボタンのテキストの水平方向の配置。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.valign">
      <summary>ボタンのテキストの垂直方向の配置。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.pressed">
      <summary>ボタンが押されたかどうか。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.focus">
      <summary>ボタンがフォーカスを持つかどうか。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.text">
      <summary>ボタンのテキストを表す String。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.textDown">
      <summary>ボタンが押されたときのテキストを表す String。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.nAlign">
      <summary>ボタンのテキストの配置。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.textOrientation">
      <summary>ボタンのテキストの向き。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.wordWrap">
      <summary>テキストを複数行に折り返せるかどうか。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.shadowSize">
      <summary>ボタンの影のサイズ。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.darkColor">
      <summary>ボタンの端の暗色。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.lightColor">
      <summary>ボタンの端の明色。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.pictUp">
      <summary>押されていないときのボタンの画像。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.pictDown">
      <summary>押されているときのボタンの画像。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.bLocked">
      <summary>ボタンがロックされているかどうか。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.prefix">
      <summary>ボタンのホットキー接頭辞。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.style">
      <summary>ボタンの表示スタイル。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.mouseOver">
      <summary>マウスがボタンの上に置かれているかどうか。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.backcolor2">
      <summary>ボタンのグラデーションの２番目の背景色。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.backstyle">
      <summary>ボタンの背景スタイル。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.mode">
      <summary>ボタンの線形グラデーション モード。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.rightToLeft">
      <summary>右から左にレイアウトするかどうか。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.txtRotationAngle">
      <summary>テキストの回転角度。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.txtIndent">
      <summary>テキストのインデント量。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.useVSBackColor">
      <summary>Visual Studioの背景色を使用するかどうか。</summary>
    </member>
    <member name="T:FarPoint.Win.FpButton">
      <summary>FarPointのボタンコントロールを表します。</summary>
    </member>
    <member name="F:FarPoint.Win.FpButton.theme">
      <summary>内部使用のみ。表示スタイルのテーマ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.#cctor">
      <summary></summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.Finalize">
      <summary></summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.Dispose(System.Boolean)">
      <summary></summary>
      <param name="disposing"></param>
    </member>
    <member name="M:FarPoint.Win.FpButton.#ctor">
      <summary>新しいFarPointボタンコントロールを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnAfterFocus(System.EventArgs)">
      <summary>AfterFocusイベントを発生させます。</summary>
      <param name="e">イベントデータを含むSystem.EventArgs。</param>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnButtonClicked(System.EventArgs)">
      <summary>ButtonClicked イベントを発生させます。</summary>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnThemeChanged(System.Object,System.EventArgs)">
      <summary>VisualStyleTheme の ThemeChanged イベントを処理します。</summary>
      <param name="sender">オブジェクト</param>
      <param name="e">EventArgs</param>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnGotFocus(System.EventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnLostFocus(System.EventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.IsInputKey(System.Windows.Forms.Keys)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnDoubleClick(System.EventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="e"></param>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>背景を描画します。</summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnMouseLeave(System.EventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnMouseEnter(System.EventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.DoPaint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Boolean,System.Boolean,System.String,System.String,FarPoint.Win.ButtonTextAlign,FarPoint.Win.TextOrientation,System.Boolean,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Image,System.Drawing.Image,System.Boolean,System.Boolean)">
      <summary>ボタンを持つセルを描画します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="r">画像矩形</param>
      <param name="backColor">背景色</param>
      <param name="foreColor">前景（テキスト）色</param>
      <param name="font">テキストのフォント</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
      <param name="pressed">ボタンが押されているかどうか</param>
      <param name="focus">フォーカスがあるかどうか</param>
      <param name="text">押されていないときのボタンのテキスト</param>
      <param name="textDown">押されたときのボタンのテキスト</param>
      <param name="nAlign">ボタンの画像を基準としたテキストの配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを複数行に折り返すかどうか</param>
      <param name="shadowSize">ボタン周囲の影のサイズ</param>
      <param name="darkColor">影（ボタンの暗い部分）の色</param>
      <param name="lightColor">ボタンの明るい部分の色</param>
      <param name="pictUp">押されていないときのボタンのピクチャ（画像）</param>
      <param name="pictDown">押されたときのボタンのピクチャ（画像）</param>
      <param name="bLocked">セルがロックされているかどうか</param>
      <param name="rightToLeft">右から左にレイアウトするかどうか</param>
    </member>
    <member name="M:FarPoint.Win.FpButton.DoPaint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Boolean,System.Boolean,System.String,System.String,FarPoint.Win.ButtonTextAlign,FarPoint.Win.TextOrientation,System.Boolean,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Image,System.Drawing.Image,System.Boolean,System.Drawing.Text.HotkeyPrefix,FarPoint.Win.VisualStyles,System.Boolean)">
      <summary>ボタンを持つセルを描画します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="r">画像矩形</param>
      <param name="backColor">背景色</param>
      <param name="foreColor">前景（テキスト）色</param>
      <param name="font">テキストのフォント</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
      <param name="pressed">ボタンが押されているかどうか</param>
      <param name="focus">フォーカスがあるかどうか</param>
      <param name="text">押されていないときのボタンのテキスト</param>
      <param name="textDown">押されたときのボタンのテキスト</param>
      <param name="nAlign">ボタンの画像を基準としたテキストの配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを複数行に折り返すかどうか</param>
      <param name="shadowSize">ボタン周囲の影のサイズ</param>
      <param name="darkColor">影（ボタンの暗い部分）の色</param>
      <param name="lightColor">ボタンの明るい部分の色</param>
      <param name="pictUp">押されていないときのボタンのピクチャ（画像）</param>
      <param name="pictDown">押されたときのボタンのピクチャ（画像）</param>
      <param name="bLocked">セルがロックされているかどうか</param>
      <param name="prefix">アンパサンド（&amp;）文字があるときにテキストに下線を引くかどうか</param>
      <param name="style">ボタンのスタイルを決定します。</param>
      <param name="mouseOver">マウスがボタンの上にある場合はTrue</param>
    </member>
    <member name="M:FarPoint.Win.FpButton.DoPaint(FarPoint.Win.FpButtonPaintArgs)">
      <summary>描画を実行します。</summary>
      <param name="args">描画引数</param>
    </member>
    <member name="M:FarPoint.Win.FpButton.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,System.Drawing.Font,System.String,System.String,FarPoint.Win.ButtonTextAlign,System.Boolean,System.Int32,System.Drawing.Image,System.Drawing.Image)">
      <summary>ボタンのテキストとピクチャを表示するために必要な高さと幅を計算します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="size">サイズ</param>
      <param name="font">フォント</param>
      <param name="text">押されていないときのボタンのテキスト</param>
      <param name="textDown">押されたときのボタンのテキスト</param>
      <param name="nAlign">テキスト配置</param>
      <param name="wordWrap">テキストを複数行に折り返すかどうか</param>
      <param name="shadowSize">ボタン周囲の影のサイズ</param>
      <param name="pictUp">押されていないときのボタンのピクチャ（画像）</param>
      <param name="pictDown">押されたときのボタンのピクチャ（画像）</param>
    </member>
    <member name="M:FarPoint.Win.FpButton.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,System.Drawing.Font,System.String,System.String,FarPoint.Win.ButtonTextAlign,FarPoint.Win.TextOrientation,System.Boolean,System.Int32,System.Drawing.Image,System.Drawing.Image,System.Drawing.Text.HotkeyPrefix)">
      <summary>ボタンのテキストとピクチャを表示するために必要な高さと幅を計算します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="size">サイズ</param>
      <param name="font">フォント</param>
      <param name="text">押されていないときのボタンのテキスト</param>
      <param name="textDown">押されたときのボタンのテキスト</param>
      <param name="nAlign">テキスト配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを複数行に折り返すかどうか</param>
      <param name="shadowSize">ボタン周囲の影のサイズ</param>
      <param name="pictUp">ボタンが押されていないときのピクチャ</param>
      <param name="pictDown">ボタンが押されているときのピクチャ</param>
      <param name="prefix">ホットキー接頭辞</param>
    </member>
    <member name="M:FarPoint.Win.FpButton.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,System.Drawing.Font,System.String,System.String,FarPoint.Win.ButtonTextAlign,FarPoint.Win.TextOrientation,System.Boolean,System.Int32,System.Drawing.Image,System.Drawing.Image,System.Drawing.Text.HotkeyPrefix,System.Double)">
      <summary>ボタンのテキストとピクチャを表示するために必要な高さと幅を計算します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="size">サイズ</param>
      <param name="font">フォント</param>
      <param name="text">押されていないときのボタンのテキスト</param>
      <param name="textDown">押されたときのボタンのテキスト</param>
      <param name="nAlign">テキスト配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを複数行に折り返すかどうか</param>
      <param name="shadowSize">ボタン周囲の影のサイズ</param>
      <param name="pictUp">ボタンが押されていないときのピクチャ</param>
      <param name="pictDown">ボタンが押されているときのピクチャ</param>
      <param name="prefix">HotkeyPrefix</param>
      <param name="angle">テキストの回転角度。</param>
      <returns></returns>
    </member>
    <member name="M:FarPoint.Win.FpButton.WndProc(System.Windows.Forms.Message@)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.PerformClick">
      <summary>コントロールのClickイベントを生成します。</summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.NotifyDefault(System.Boolean)">
      <summary>このボタンが外観上デフォルトボタンであることをコントロールに通知します。</summary>
      <param name="value">コントロールがデフォルトボタンとして動作するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.FpButton.Serialize(System.Xml.XmlTextWriter)">
      <summary>内部使用のみ。シリアライズします。</summary>
      <param name="w">XMLテキストライター</param>
    </member>
    <member name="M:FarPoint.Win.FpButton.Deserialize(System.Xml.XmlNodeReader)">
      <summary>内部使用のみ。</summary>
      <param name="r">XMLノードリーダー</param>
    </member>
    <member name="M:FarPoint.Win.FpButton.SaveControlBaseData(System.Xml.XmlTextWriter)">
      <summary>内部使用のみ。コントロールベースデータを保存します。</summary>
      <param name="w">XMLテキストライター</param>
    </member>
    <member name="M:FarPoint.Win.FpButton.ReconstructControlBaseData(System.Xml.XmlNodeReader)">
      <summary>内部使用のみ。コントロールベースデータを再構築します。</summary>
      <param name="r"></param>
    </member>
    <member name="M:FarPoint.Win.FpButton.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Runtime.Serialization.SerializationInfo"></see>に対して、ターゲットオブジェクトのシリアル化に必要なデータを設定します。FpButtonのすべての固有プロパティと、コントロールベースのいくつかのパブリックで参照可能な設計時プロパティを保存します。</summary>
      <param name="info">データを設定する<see cref="T:System.Runtime.Serialization.SerializationInfo"></see>。</param>
      <param name="context">このシリアル化の送信先（<see cref="T:System.Runtime.Serialization.StreamingContext"></see>を参照）。</param>
      <exception cref="T:System.Security.SecurityException">呼び出し元に必要な権限がありません。</exception>
    </member>
    <member name="M:FarPoint.Win.FpButton.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:FpButton" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:FarPoint.Win.FpButton.SaveControlBaseData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>コントロールベースのいくつかのパブリックで参照可能な設計時プロパティを保存します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:FarPoint.Win.FpButton.ReconstructControlBaseData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>SaveControlBaseDataメソッドによって保存されたコントロールベースデータを再構築します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="E:FarPoint.Win.FpButton.ButtonClicked">
      <summary>ボタン コントロールがクリックされたときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.FpButton.AfterFocus">
      <summary>コントロールがフォーカスを受け取った後に発生します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.HotkeyPrefix">
      <summary>アンパーサンド（&amp;）文字でテキストに下線を引くかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.VisualStyles">
      <summary>表示スタイルを使用するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.BackColor2">
      <summary>グラデーション ボタンの描画時に使用される２番目の色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.GradientMode">
      <summary>グラデーション ボタンの描画スタイルを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.BackgroundStyle">
      <summary>背景のレンダリング方法を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.UseVisualStyleBackColor">
      <summary>背景色がビジュアルスタイルを通じて描画されるかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.TextRotationAngle">
      <summary>テキストの回転角度を取得または設定します。</summary>
      <value>テキストの回転角度。</value>
    </member>
    <member name="P:FarPoint.Win.FpButton.TextIndent">
      <summary>テキストのインデントを取得または設定します。</summary>
      <value>テキストのインデント。</value>
    </member>
    <member name="P:FarPoint.Win.FpButton.DarkColor">
      <summary>ボタンの3D表示の外側境界線を描画するための色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.LightColor">
      <summary>ボタンの3D表示の内側境界線を描画するための色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.WordWrap">
      <summary>ボタン内で１行に入らないテキストを複数行に 折り返すかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.ShadowSize">
      <summary>ボタン周囲の影のサイズを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.Picture">
      <summary>ボタンに表示する画像を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.PictureDown">
      <summary>押されたときのボタン内に表示する画像を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.TwoState">
      <summary>ボタンが２値式ボタンかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.Value">
      <summary>ボタンの値を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.TextAlign">
      <summary>ボタンのピクチャを基準としたテキストの配置方法を取得または設定します</summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.TextOrientation">
      <summary>ボタン描画時のテキストの向きを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.TextDown">
      <summary>押されたときに表示するボタンのテキストを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.HorizontalAlignment">
      <summary>ボタンのテキストの水平方向の配置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.VerticalAlignment">
      <summary>ボタンのテキストの垂直方向の配置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.DialogResult">
      <summary>ボタンがクリックされたときに親に返される値を取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.CanvasBase">
      <summary>キャンバスのベースを表します。</summary>
    </member>
    <member name="T:FarPoint.Win.ElementControl">
      <summary>コントロール要素を表します。</summary>
    </member>
    <member name="T:FarPoint.Win.IElement">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.IElement.GetClientRectangle">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.IElement.GetClientRectangle(System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.IElement.GetControl">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.IElement.GetFont">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.IElement.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.IElement.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.ElementStyle)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.IElement.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.IElement.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.ElementStyle)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.IElement.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.IElement.SetBounds(System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.IElement.Focus(System.Boolean)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.IElement.Refresh">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.IElement.Update">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.IElement.DoMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.IElement.DoMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.IElement.DoMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.IElement.DoClick(System.Object,System.EventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.IElement.DoDoubleClick(System.Object,System.EventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.IElement.SetRedraw(System.Boolean,System.Boolean)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.Border">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.PictureMargin">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.MarginRight">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.MarginLeft">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.MarginTop">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.MarginBottom">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.Picture">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.PictureTransparencyColor">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.ForegroundImage">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.BackgroundImage">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.Font">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.BackColor">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.ForeColor">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.AlignHorz">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.AlignVert">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.AlignText">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.TextOrientation">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.TextWrap">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.PictureOrientation">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.State">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.DrawFocusRectangle">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.Tag">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.PictureTransparencyTolerance">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.Redraw">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.Parent">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.Text">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.Name">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.Visible">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.Enabled">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.CanFocus">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.Selectable">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.Rectangle">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.Focused">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.CancelMouse">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.ContainsFocus">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElement.StateNotifyList">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="E:FarPoint.Win.IElement.ForegroundImageChanged">
      <summary>コントロールの前景画像を変更したときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.IElement.BackgroundImageChanged">
      <summary>コントロールの背景画像を変更したときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.IElement.PictureChanged">
      <summary>コントロールのピクチャを変更したときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.IElement.FontChanged">
      <summary>コントロールのフォントを変更したときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.IElement.Click">
      <summary>ポインタが要素の上に置かれた状態で、ユーザーが左右いずれかのマウスボタンをクリックして解放すると発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.IElement.DoubleClick">
      <summary>ポインタが要素の上に置かれた状態で、ユーザーが左右いずれかのマウスボタンのクリックと解放を続けて２回実行すると発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.IElement.MouseDown">
      <summary>ユーザーがマウスボタンをクリックしたときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.IElement.MouseUp">
      <summary>ユーザーがマウスボタンを離したときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.IElement.MouseMove">
      <summary>ユーザーがマウスを動かしたときに発生します。</summary>
    </member>
    <member name="F:FarPoint.Win.ElementControl.PICTURE_MARGIN_DEFAULT">
      <summary>要素のデフォルトピクチャマージンを表します（２ピクセル）。</summary>
    </member>
    <member name="F:FarPoint.Win.ElementControl.BACK_COLOR_DEFAULT">
      <summary>要素のデフォルト背景色を表します（SystemColors.Control）。</summary>
    </member>
    <member name="F:FarPoint.Win.ElementControl.FORE_COLOR_DEFAULT">
      <summary>要素のデフォルトテキスト色を表します（SystemColors.ControlText）。</summary>
    </member>
    <member name="F:FarPoint.Win.ElementControl.fontOverride">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.#ctor">
      <summary>コントロール要素を作成します（ElementControlオブジェクト）。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.Finalize">
      <summary>FpElementのデストラクターメソッド</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.#ctor(System.Object)">
      <summary>指定したオブジェクトに基づいてコントロール要素（ElementControlオブジェクト）を作成します。</summary>
      <param name="cloneFrom">設定のコピー元のコントロール要素</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ShouldSerializePictureTransparencyTolerance">
      <summary>PictureTransparencyToleranceプロパティを持続させるかどうかを指定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ResetPictureTransparencyTolerance">
      <summary>要素のピクチャの透過許容誤差をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.AdjustClientArea">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.SetRedraw(System.Boolean,System.Boolean)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ResetBorder">
      <summary>コントロールの境界線をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ShouldSerializeBorder">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ShouldSerializePictureTransparencyColor">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ResetPictureTransparencyColor">
      <summary>ピクチャの透過色をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ResetPicture">
      <summary>コントロールのピクチャをデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ShouldSerializeFont">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ResetFont">
      <summary>コントロールのフォントをデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnParentChanged(System.EventArgs)">
      <summary>親コントロールが変更されたときに ParentChanged イベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.GetFont">
      <summary>フォントが指定されていない場合、現在のフォントまたはデフォルトのフォントを取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ResetText">
      <summary>内容をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ShouldSerializeBackColor">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ResetBackColor">
      <summary>コントロールの背景色をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ShouldSerializeForeColor">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ResetForeColor">
      <summary>コントロールのテキスト色をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.Select(System.Boolean)">
      <summary>コントロールをアクティブにします。</summary>
      <param name="selected">選択されている場合はTrue、それ以外の場合はFalse</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.GetControl">
      <summary>コントロールを取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.Update">
      <summary>コントロールにクライアント領域内で無効となった領域を再描画させます。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>要素の境界を、指定したサイズの境界矩形の位置とサイズに設定します。</summary>
      <param name="x">境界矩形の左上隅のx座標</param>
      <param name="y">境界矩形の左上隅のy座標</param>
      <param name="width">境界矩形の幅（ピクセル単位）</param>
      <param name="height">境界矩形の高さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.SetBounds(System.Drawing.Rectangle)">
      <summary>指定した境界矩形オブジェクトの位置とサイズを使用して要素の境界を設定します。</summary>
      <param name="rectInput">境界矩形を含むRectangleオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.Focus(System.Boolean)">
      <summary>フォーカスをコントロールに移動します。</summary>
      <param name="giveFocus">フォーカスをコントロールに移動するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnBackgroundImageChanged(System.Object,System.EventArgs)">
      <summary>背景ピクチャが変更されたときに BackgroundImageChanged イベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnForegroundImageChanged(System.Object,System.EventArgs)">
      <summary>前景ピクチャが変更されたときに<see cref="E:FarPoint.Win.ElementControl.ForegroundImageChanged" />イベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnPictureChanged(System.Object,System.EventArgs)">
      <summary>ピクチャが変更されたときに<see cref="E:FarPoint.Win.ElementControl.PictureChanged" />イベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnLostFocus(System.EventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnGotFocus(System.EventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnLostFocusNoRefresh(System.EventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnGotFocusNoRefresh(System.EventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnClick(System.EventArgs)">
      <summary>ユーザーがコントロールの上にカーソルを置いてクリックしたときに Click イベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.DoClick(System.Object,System.EventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnDoubleClick(System.EventArgs)">
      <summary>ユーザーがコントロールの上にカーソルを置いてダブルクリックしたときに DoubleClick イベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.DoDoubleClick(System.Object,System.EventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>コントロールの上にカーソルがあるときにポインタ ボタンが押された場合、MouseDown イベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.DoMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>コントロールの上にカーソルがあるときにポインタ ボタンが離された場合、MouseUp イベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.DoMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>コントロールの上にカーソルがあり、コントロール内をポインタが移動したときに、MouseMove イベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.DoMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ResetElements">
      <summary>要素をデフォルト設定にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.Reset">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.Clone">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.SetState(FarPoint.Win.ElementState)">
      <summary>内部使用のみ。</summary>
      <param name="eState">コントロールの状態</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ToggleState">
      <summary>コントロールの状態を切り替えます。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.GetClientRectangle">
      <summary>内部使用のみ。</summary>
      <returns>コントロールの座標</returns>
    </member>
    <member name="M:FarPoint.Win.ElementControl.GetClientRectangle(System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
      <returns>コントロールの座標</returns>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>要素自体の再描画が要求されたときに Paint イベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.ElementStyle)">
      <summary>コントロール（テキストとピクチャ）をオーバーライドスタイルで描画します。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="rectInput">領域を囲む矩形</param>
      <param name="overrideStyle">スタイルとして使用するElementStyle</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>コントロール（テキストとピクチャ）を描画します。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="rectInput">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.GetTextAndPictureRectangles(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle@,System.Drawing.Rectangle@)">
      <summary>内部使用のみ。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
      <param name="rPict">ピクチャを囲む矩形</param>
      <param name="rText">テキストを囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.GetTextAndPictureRectangles(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle@,System.Drawing.Rectangle@,System.String)">
      <summary>内部使用のみ。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
      <param name="rPict">ピクチャを囲む矩形</param>
      <param name="rText">テキストを囲む矩形</param>
      <param name="paintString">文字列</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.AdjustStringFormat(System.Drawing.StringFormat@)">
      <summary>内部使用のみ。</summary>
      <param name="fmt">書式文字列</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.PaintTextAndPicture(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.PaintForegroundImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.PaintFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.PaintElements(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="faceRect">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.PaintBorder(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.PaintBackgroundImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.PaintSpecialBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.PaintSpecialForeground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.PaintBackColor(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>要素の背景を描画します。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="rectInput">要素の座標</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.ElementStyle)">
      <summary>コントロールの背景をオーバーライドスタイルで描画します。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="rectInput">領域を囲む矩形</param>
      <param name="overrideStyle">スタイルのオーバーライドに使用するElementStyle</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>コントロールの背景が描画されたときに発生します。</summary>
      <param name="e">イベントデータを含むPaintEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.SetElementStyle(FarPoint.Win.ElementStyle)">
      <summary>要素のスタイルを設定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.GetElementStyle">
      <summary>要素のスタイルを取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.AddStateNotify(FarPoint.Win.IStateNotify)">
      <summary>内部使用のみ。</summary>
      <param name="target">対象</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.RemoveStateNotify(FarPoint.Win.IStateNotify)">
      <summary>内部使用のみ。</summary>
      <param name="target">対象</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FireStateNotify">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.Dispose(System.Boolean)">
      <summary>内部使用のみ。</summary>
      <param name="disposing">破棄するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#get_Tag">
      <summary>コントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#set_Tag(System.Object)">
      <summary>コントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#add_BackgroundImageChanged(System.EventHandler)">
      <summary>コントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#remove_BackgroundImageChanged(System.EventHandler)">
      <summary>コントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#add_FontChanged(System.EventHandler)">
      <summary>コントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#remove_FontChanged(System.EventHandler)">
      <summary>コントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#add_Click(System.EventHandler)">
      <summary>コントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#remove_Click(System.EventHandler)">
      <summary>コントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#add_DoubleClick(System.EventHandler)">
      <summary>コントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#remove_DoubleClick(System.EventHandler)">
      <summary>コントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#add_MouseDown(System.Windows.Forms.MouseEventHandler)">
      <summary>コントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#remove_MouseDown(System.Windows.Forms.MouseEventHandler)">
      <summary>コントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#add_MouseUp(System.Windows.Forms.MouseEventHandler)">
      <summary>コントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#remove_MouseUp(System.Windows.Forms.MouseEventHandler)">
      <summary>コントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#add_MouseMove(System.Windows.Forms.MouseEventHandler)">
      <summary>コントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#remove_MouseMove(System.Windows.Forms.MouseEventHandler)">
      <summary>コントロール要素を表します。</summary>
    </member>
    <member name="E:FarPoint.Win.ElementControl.PictureChanged">
      <summary>コントロールのピクチャが変更されたときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.ElementControl.ForegroundImageChanged">
      <summary>コントロールの前景画像が変更されたときに発生します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.PictureTransparencyTolerance">
      <summary>要素の透過許容誤差を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.TextWrap">
      <summary>要素内で改行せずにテキストを自動的に折り返すどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.TextWrapPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.CancelMouse">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.CancelMousePriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.Focused">
      <summary>コントロールがフォーカスを持つかどうかを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.ContainsFocus">
      <summary>要素に現在入力フォーカスがあるかどうかを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.PictureMargin">
      <summary>テキストとピクチャの間の余白を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.PictureMarginPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.MarginBottom">
      <summary>コントロール下端と内容の間の余白を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.MarginBottomPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.MarginTop">
      <summary>コントロール上端と内容の間の余白を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.MarginTopPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.MarginLeft">
      <summary>コントロール左端と内容の間の余白を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.MarginLeftPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.MarginRight">
      <summary>コントロール右端と内容の間の余白を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.MarginRightPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.Redraw">
      <summary>要素の描画を許可するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.Parent">
      <summary>コントロールの親を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.ParentPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.Visible">
      <summary>コントロールを表示するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.Enabled">
      <summary>コントロールがフォーカスを受け取ってユーザーアクションに応答するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.Selectable">
      <summary>コントロールがフォーカスを受け取れるかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.SelectablePriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.CanFocus">
      <summary>コントロールがフォーカスを受け取れるかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.CanFocusPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.Border">
      <summary>コントロールの境界線を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.BorderPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.AlignText">
      <summary>コントロールのテキスト配置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.AlignTextPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.TextOrientation">
      <summary>コントロールのテキストの向きを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.TextOrientationPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.PictureOrientation">
      <summary>コントロールのピクチャの向きを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.PictureOrientationPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.PictureTransparencyColor">
      <summary>コントロールのピクチャの透過色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.ForegroundImage">
      <summary>コントロールの前景画像を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.ForegroundImagePriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.BackgroundImage">
      <summary>コントロールの背景画像を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.Picture">
      <summary>コントロールのピクチャを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.PicturePriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.DrawFocusRectangle">
      <summary>コントロールのフォーカス矩形の描画スタイルを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.DrawFocusRectanglePriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.State">
      <summary>コントロールの要素の状態を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.StatePriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.Font">
      <summary>コントロールのフォントを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.FontPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.Text">
      <summary>コントロールの内容を、表示されたものと完全一致する文字列として取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.TextPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.About">
      <summary>コントロールに関する情報を表示します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.Name">
      <summary>コントロールを識別するためにコード内で使用する名前を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.BackColor">
      <summary>コントロールの背景色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.BackColorPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.ForeColor">
      <summary>コントロールのテキスト色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.ForeColorPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.AlignHorz">
      <summary>コントロールの内容の水平方向の配置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.AlignHorzPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.AlignVert">
      <summary>コントロールの内容の垂直方向の配置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.AlignVertPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.Rectangle">
      <summary>コントロールのクライアント領域内の矩形を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.StateNotifyList">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.Elements">
      <summary>現在のElementControlが含むIElement派生オブジェクトのコレクションを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.ElementsPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.CanvasBase.#ctor">
      <summary>キャンバスのベースを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.CanvasBase.OnSizeChanged(System.EventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.CanvasBase.Reset">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.CanvasBase.ResetText">
      <summary>内容をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.CanvasBase.AdjustStringFormat(System.Drawing.StringFormat@)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.CanvasBase.AdjustClientArea">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.CanvasBase.ProcessMnemonic(System.Char)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.CanvasBase.SetElementBounds(System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.CanvasBase.OnGotFocus(System.EventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.CanvasBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。MouseDown処理。</summary>
    </member>
    <member name="M:FarPoint.Win.CanvasBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。MouseUp処理。</summary>
    </member>
    <member name="P:FarPoint.Win.CanvasBase.CanFocus">
      <summary>コントロールがフォーカスを受け取れるかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.CanvasBase.HotkeyPrefix">
      <summary>文字の前に入力されたアンパーサンド（&amp;）によって指定される ホットキーに、アンダースコア（_）を表示するかどうかを 取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.CanvasContainerBase">
      <summary>キャンバスコンテナのベースを表します。</summary>
    </member>
    <member name="T:FarPoint.Win.ElementContainerControl">
      <summary>子を含むコントロール要素を表します。</summary>
    </member>
    <member name="T:FarPoint.Win.IWindowlessChildSupport">
      <summary>ウィンドウなしの子コントロールをサポートするオブジェクトによって提供されるインタフェース。</summary>
    </member>
    <member name="P:FarPoint.Win.IWindowlessChildSupport.SkipMouseProcessing">
      <summary>マウス処理をスキップするかどうかを設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.IWindowlessChildSupport.ActiveWindowlessObject">
      <summary>アクティブなウィンドウレスオブジェクトを取得または設定します。</summary>
    </member>
    <member name="F:FarPoint.Win.ElementContainerControl.PICTURE_MARGIN_DEFAULT">
      <summary>要素のデフォルトピクチャマージンを表します（２ピクセル）。</summary>
    </member>
    <member name="F:FarPoint.Win.ElementContainerControl.BACK_COLOR_DEFAULT">
      <summary>要素のデフォルト背景色を表します（SystemColors.Control）。</summary>
    </member>
    <member name="F:FarPoint.Win.ElementContainerControl.FORE_COLOR_DEFAULT">
      <summary>要素のデフォルトテキスト色を表します（SystemColors.ControlText）。</summary>
    </member>
    <member name="F:FarPoint.Win.ElementContainerControl.fontOverride">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.#ctor">
      <summary>子を含む新しいコントロール要素を作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.#ctor(System.Object)">
      <summary>指定したオブジェクトを複製して、子を含む新しいコントロール要素を作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.#ctor(System.Object,System.Boolean)">
      <summary>指定したオブジェクトを複製して、子を含む新しいコントロール要素を作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ShouldSerializePictureTransparencyTolerance">
      <summary>PictureTransparencyToleranceプロパティを持続させるかどうかを指定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ResetPictureTransparencyTolerance">
      <summary>要素のピクチャの透過許容誤差をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.AdjustClientArea">
      <summary>内部使用のみ。クライアント領域を調整します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.SetRedraw(System.Boolean,System.Boolean)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ResetBorder">
      <summary>コントロールの境界線をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ShouldSerializeBorder">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ShouldSerializeTextRotationAngle">
      <summary>TextRotationAngleプロパティを永続化する必要があるかどうかを示します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ResetTextRotationAngle">
      <summary>要素のテキストの回転角度をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ShouldSerializePictureTransparencyColor">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ResetPictureTransparencyColor">
      <summary>コントロールのピクチャの透過色（PictureTransparencyColorプロパティ）をデフォルト色にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ResetPicture">
      <summary>ピクチャをリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ShouldSerializeFont">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ResetFont">
      <summary>コントロールのフォントをデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnParentChanged(System.EventArgs)">
      <summary>親が変更されたときに発生します。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.GetFont">
      <summary>フォントが指定されていない場合、現在のフォントまたはデフォルトのフォントを取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ResetText">
      <summary>内容をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ShouldSerializeBackColor">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ResetBackColor">
      <summary>コントロールの背景色をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ShouldSerializeForeColor">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ResetForeColor">
      <summary>ForeColorプロパティをデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.Select(System.Boolean)">
      <summary>コントロールをアクティブにします。</summary>
      <param name="selected">選択された場合はTrue、それ以外の場合はFalse。</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.GetControl">
      <summary>Controlオブジェクトを取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.Update">
      <summary>コントロールにクライアント領域内で無効となった領域を再描画させます。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>整数値を使用して、コントロールの境界を指定した位置とサイズに設定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.SetBounds(System.Drawing.Rectangle)">
      <summary>指定した矩形オブジェクトの位置とサイズを使用してコントロールの境界を設定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.Focus(System.Boolean)">
      <summary>フォーカスをコントロールに移動します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnBackgroundImageChanged(System.Object,System.EventArgs)">
      <summary>背景ピクチャが変更されたときに発生します。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnForegroundImageChanged(System.Object,System.EventArgs)">
      <summary>前景ピクチャが変更されたときに発生します。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnPictureChanged(System.Object,System.EventArgs)">
      <summary>ピクチャを変更したとき発生します。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnLostFocus(System.EventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnGotFocus(System.EventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnLostFocusNoRefresh(System.EventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnGotFocusNoRefresh(System.EventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnClick(System.EventArgs)">
      <summary>ユーザーがコントロールをクリックしたときに発生します。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.DoClick(System.Object,System.EventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnDoubleClick(System.EventArgs)">
      <summary>ユーザーがコントロールをダブルクリックしたときに発生します。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.DoDoubleClick(System.Object,System.EventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>カーソルがコントロールの上に置かれた状態でマウスボタンがクリックされると発生します。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.DoMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>カーソルがコントロールの上に置かれた状態でマウスボタンが解放されると発生します。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.DoMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>ポインタがコントロール内を移動し、カーソルがコントロールの上に置かれると発生します。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.DoMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ResetElements">
      <summary>要素をデフォルト設定にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.Reset">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.Clone">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.Clone(System.Boolean)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.SetState(FarPoint.Win.ElementState)">
      <summary>内部使用のみ。</summary>
      <param name="eState">コントロールの状態</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ToggleState">
      <summary>コントロールの状態を切り替えます。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.GetClientRectangle">
      <summary>内部使用のみ。</summary>
      <returns>コントロールの座標</returns>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.GetClientRectangle(System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
      <returns>コントロールの座標</returns>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>要素に再描画が要求されているときに発生します。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.ElementStyle)">
      <summary>コントロール（テキストとピクチャ）をオーバーライドスタイルで描画します。</summary>
      <param name="g">Graphicsオブジェクト</param>
      <param name="rectInput">描画するコントロールの座標</param>
      <param name="overrideStyle">描画に使用するElementStyle</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>コントロール（テキストとピクチャ）を描画します。</summary>
      <param name="g">Graphicsオブジェクト</param>
      <param name="rectInput">描画するコントロールの座標</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.GetTextAndPictureRectangles(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle@,System.Drawing.Rectangle@)">
      <summary>内部使用のみ。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
      <param name="rPict">ピクチャを囲む矩形</param>
      <param name="rText">テキストを囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.GetTextAndPictureRectangles(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle@,System.Drawing.Rectangle@,System.String)">
      <summary>内部使用のみ。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
      <param name="rPict">ピクチャを囲む矩形</param>
      <param name="rText">テキストを囲む矩形</param>
      <param name="paintString">文字列</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.AdjustStringFormat(System.Drawing.StringFormat@)">
      <summary>内部使用のみ。</summary>
      <param name="fmt">文字列書式</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.PaintTextAndPicture(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.PaintForegroundImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.PaintFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.PaintElements(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="faceRect">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.PaintBorder(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.PaintBackgroundImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.PaintSpecialBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.PaintSpecialForeground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.PaintBackColor(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>コントロールの背景色を描画します。</summary>
      <param name="g">Graphicsオブジェクト</param>
      <param name="rectInput">描画するコントロールの座標</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.ElementStyle)">
      <summary>コントロールの背景をオーバーライドスタイルで描画します。</summary>
      <param name="g">Graphicsオブジェクト</param>
      <param name="rectInput">描画するコントロールの座標</param>
      <param name="overrideStyle">描画に使用するElementStyle</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>コントロールに再描画が要求されているときに発生します。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.SetElementStyle(FarPoint.Win.ElementStyle)">
      <summary>要素のスタイルを設定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.GetElementStyle">
      <summary>要素のスタイルを取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.AddStateNotify(FarPoint.Win.IStateNotify)">
      <summary>内部使用のみ。</summary>
      <param name="target">対象</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.RemoveStateNotify(FarPoint.Win.IStateNotify)">
      <summary>内部使用のみ。</summary>
      <param name="target">対象</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FireStateNotify">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#get_Tag">
      <summary>子を含むコントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#set_Tag(System.Object)">
      <summary>子を含むコントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#add_BackgroundImageChanged(System.EventHandler)">
      <summary>子を含むコントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#remove_BackgroundImageChanged(System.EventHandler)">
      <summary>子を含むコントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#add_FontChanged(System.EventHandler)">
      <summary>子を含むコントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#remove_FontChanged(System.EventHandler)">
      <summary>子を含むコントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#add_Click(System.EventHandler)">
      <summary>子を含むコントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#remove_Click(System.EventHandler)">
      <summary>子を含むコントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#add_DoubleClick(System.EventHandler)">
      <summary>子を含むコントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#remove_DoubleClick(System.EventHandler)">
      <summary>子を含むコントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#add_MouseDown(System.Windows.Forms.MouseEventHandler)">
      <summary>子を含むコントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#remove_MouseDown(System.Windows.Forms.MouseEventHandler)">
      <summary>子を含むコントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#add_MouseUp(System.Windows.Forms.MouseEventHandler)">
      <summary>子を含むコントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#remove_MouseUp(System.Windows.Forms.MouseEventHandler)">
      <summary>子を含むコントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#add_MouseMove(System.Windows.Forms.MouseEventHandler)">
      <summary>子を含むコントロール要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#remove_MouseMove(System.Windows.Forms.MouseEventHandler)">
      <summary>子を含むコントロール要素を表します。</summary>
    </member>
    <member name="E:FarPoint.Win.ElementContainerControl.PictureChanged">
      <summary>内部使用のみ。ピクチャが変更されたときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.ElementContainerControl.ForegroundImageChanged">
      <summary>内部使用のみ。前景画像が変更されたときに発生します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.PictureTransparencyTolerance">
      <summary>要素の透過許容誤差を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.TextWrap">
      <summary>改行せずにテキストを自動的に折り返すどうかを取得または設定します。</summary>
      <example>
        <code lang="csharp"> element.TextWrap = true; </code>
        <code lang="vb"> element.TextWrap = True; </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.TextWrapPriv">
      <summary>内部使用のみ。テキストを複数行に折り返すかどうか。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.CancelMouse">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.CancelMousePriv">
      <summary>内部使用のみ。マウスをキャンセルします。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.Focused">
      <summary>コントロールがフォーカスを持つかどうかを取得します。</summary>
      <example>
        <code lang="csharp"> control.Picture = Image.FromFile(Application.StartupPath + "\\smokes.bmp"); control.PictureMargin = 34; control.MarginTop = 3; control.MarginBottom = 3; control.MarginLeft = 3; control.MarginRight = 3; control.PictureOrientation = FarPoint.Win.PictureOrientation.PictureRotate180; control.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight; control.AlignHorz = FarPoint.Win.HorizontalAlignment.Left; control.BackColor = Color.Red; control.Text = "NO SMOKING"; private void button1_Click(object sender, System.EventArgs e) { // Turn off the No Smoking sign control.Visible=false; } </code>
        <code lang="vb"> control.Picture = Image.FromFile(Application.StartupPath &amp; "\smokes.bmp") control.PictureMargin = 34 control.MarginTop = 3 control.MarginBottom = 3 control.MarginLeft = 3 control.MarginRight = 3 control.PictureOrientation = FarPoint.Win.PictureOrientation.PictureRotate180 control.MarginTop = 3 control.MarginBottom = 3 control.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight control.AlignHorz = FarPoint.Win.HorizontalAlignment.Left control.BackColor = Color.Red control.Text = "NO SMOKING" Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click 'Turn off the NO Smoking sign control.Visible = False End Sub </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.ContainsFocus">
      <summary>要素に現在入力フォーカスがあるかどうかを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.PictureMargin">
      <summary>テキストとピクチャの間の余白を取得または設定します。</summary>
      <example>
        <code lang="csharp"> control.Picture = Image.FromFile(Application.StartupPath + "\\smokes.bmp"); control.PictureMargin = 34; control.MarginTop = 3; control.MarginBottom = 3; control.MarginLeft = 3; control.MarginRight = 3; control.PictureOrientation = FarPoint.Win.PictureOrientation.PictureRotate180; control.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight; control.AlignHorz = FarPoint.Win.HorizontalAlignment.Left; control.BackColor = Color.Red; control.Text = "NO SMOKING"; </code>
        <code lang="vb"> control.Picture = Image.FromFile(Application.StartupPath &amp; "\smokes.bmp") control.PictureMargin = 34 control.MarginTop = 3 control.MarginBottom = 3 control.MarginLeft = 3 control.MarginRight = 3 control.PictureOrientation = FarPoint.Win.PictureOrientation.PictureRotate180 control.MarginTop = 3 control.MarginBottom = 3 control.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight control.AlignHorz = FarPoint.Win.HorizontalAlignment.Left control.BackColor = Color.Red control.Text = "NO SMOKING" </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.PictureMarginPriv">
      <summary>内部使用のみ。ピクチャの余白。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.MarginBottom">
      <summary>コントロール下端と内容の間の余白を取得または設定します。</summary>
      <example>
        <code lang="csharp"> control.Picture = Image.FromFile(Application.StartupPath + "\\smokes.bmp"); control.PictureMargin = 34; control.MarginTop = 3; control.MarginBottom = 3; control.MarginLeft = 3; control.MarginRight = 3; control.PictureOrientation = FarPoint.Win.PictureOrientation.PictureRotate180; control.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight; control.AlignHorz = FarPoint.Win.HorizontalAlignment.Left; control.BackColor = Color.Red; control.Text = "NO SMOKING"; </code>
        <code lang="vb"> control.Picture = Image.FromFile(Application.StartupPath &amp; "\smokes.bmp") control.PictureMargin = 34 control.MarginTop = 3 control.MarginBottom = 3 control.MarginLeft = 3 control.MarginRight = 3 control.PictureOrientation = FarPoint.Win.PictureOrientation.PictureRotate180 control.MarginTop = 3 control.MarginBottom = 3 control.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight control.AlignHorz = FarPoint.Win.HorizontalAlignment.Left control.BackColor = Color.Red control.Text = "NO SMOKING" </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.MarginBottomPriv">
      <summary>内部使用のみ。下の余白。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.MarginTop">
      <summary>コントロール上端と内容の間の余白を取得または設定します。</summary>
      <example>
        <code lang="csharp"> control.Picture = Image.FromFile(Application.StartupPath + "\\smokes.bmp"); control.PictureMargin = 34; control.MarginTop = 3; control.MarginBottom = 3; control.MarginLeft = 3; control.MarginRight = 3; control.PictureOrientation = FarPoint.Win.PictureOrientation.PictureRotate180; control.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight; control.AlignHorz = FarPoint.Win.HorizontalAlignment.Left; control.BackColor = Color.Red; control.Text = "NO SMOKING"; </code>
        <code lang="vb"> control.Picture = Image.FromFile(Application.StartupPath &amp; "\smokes.bmp") control.PictureMargin = 34 control.MarginTop = 3 control.MarginBottom = 3 control.MarginLeft = 3 control.MarginRight = 3 control.PictureOrientation = FarPoint.Win.PictureOrientation.PictureRotate180 control.MarginTop = 3 control.MarginBottom = 3 control.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight control.AlignHorz = FarPoint.Win.HorizontalAlignment.Left control.BackColor = Color.Red control.Text = "NO SMOKING" </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.MarginTopPriv">
      <summary>内部使用のみ。上の余白。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.MarginLeft">
      <summary>コントロール左端と内容の間の余白を取得または設定します。</summary>
      <example>
        <code lang="csharp"> control.Picture = Image.FromFile(Application.StartupPath + "\\smokes.bmp"); control.PictureMargin = 34; control.MarginTop = 3; control.MarginBottom = 3; control.MarginLeft = 3; control.MarginRight = 3; control.PictureOrientation = FarPoint.Win.PictureOrientation.PictureRotate180; control.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight; control.AlignHorz = FarPoint.Win.HorizontalAlignment.Left; control.BackColor = Color.Red; control.Text = "NO SMOKING"; </code>
        <code lang="vb"> control.Picture = Image.FromFile(Application.StartupPath &amp; "\smokes.bmp") control.PictureMargin = 34 control.MarginTop = 3 control.MarginBottom = 3 control.MarginLeft = 3 control.MarginRight = 3 control.PictureOrientation = FarPoint.Win.PictureOrientation.PictureRotate180 control.MarginTop = 3 control.MarginBottom = 3 control.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight control.AlignHorz = FarPoint.Win.HorizontalAlignment.Left control.BackColor = Color.Red control.Text = "NO SMOKING" </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.MarginLeftPriv">
      <summary>内部使用のみ。左の余白。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.MarginRight">
      <summary>コントロール右端と内容の間の余白を取得または設定します。</summary>
      <example>
        <code lang="csharp"> control.Picture = Image.FromFile(Application.StartupPath + "\\smokes.bmp"); control.PictureMargin = 34; control.MarginTop = 3; control.MarginBottom = 3; control.MarginLeft = 3; control.MarginRight = 3; control.PictureOrientation = FarPoint.Win.PictureOrientation.PictureRotate180; control.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight; control.AlignHorz = FarPoint.Win.HorizontalAlignment.Left; control.BackColor = Color.Red; control.Text = "NO SMOKING"; </code>
        <code lang="vb"> control.Picture = Image.FromFile(Application.StartupPath &amp; "\smokes.bmp") control.PictureMargin = 34 control.MarginTop = 3 control.MarginBottom = 3 control.MarginLeft = 3 control.MarginRight = 3 control.PictureOrientation = FarPoint.Win.PictureOrientation.PictureRotate180 control.MarginTop = 3 control.MarginBottom = 3 control.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight control.AlignHorz = FarPoint.Win.HorizontalAlignment.Left control.BackColor = Color.Red control.Text = "NO SMOKING" </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.MarginRightPriv">
      <summary>内部使用のみ。右の余白。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.Redraw">
      <summary>要素の描画を許可するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.Parent">
      <summary>コントロールの親を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.ParentPriv">
      <summary>内部使用のみ。親。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.SkipMouseProcessing">
      <summary>コントロールのマウス押下フラグを設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.ActiveWindowlessObject">
      <summary>コントロールのアクティブ子オブジェクトを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.Visible">
      <summary>コントロールを表示するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.Enabled">
      <summary>コントロールがフォーカスを受け取ってユーザーアクションに応答するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.Selectable">
      <summary>コントロールがフォーカスを受け取れるかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.SelectablePriv">
      <summary>内部使用のみ。選択可能かどうか。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.CanFocus">
      <summary>コントロールがフォーカスを受け取れるかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.CanFocusPriv">
      <summary>内部使用のみ。フォーカスを設定できるかどうか。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.Border">
      <summary>コントロールの境界線を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.BorderPriv">
      <summary>内部使用のみ。境界線。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.AlignText">
      <summary>コントロールのテキスト配置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.AlignTextPriv">
      <summary>内部使用のみ。テキストの配置。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.TextOrientation">
      <summary>コントロールのテキストの向きを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.TextOrientationPriv">
      <summary>内部使用のみ。テキストの向き。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.TextRotationAngle">
      <summary>コントロールのテキストの回転角度を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.TextRotationAnglePriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.PictureOrientation">
      <summary>コントロールのピクチャの向きを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.PictureOrientationPriv">
      <summary>内部使用のみ。ピクチャの向き。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.PictureTransparencyColor">
      <summary>コントロールのピクチャの透過色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.ForegroundImage">
      <summary>コントロールの前景画像を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.ForegroundImagePriv">
      <summary>内部使用のみ。前景ピクチャ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.BackgroundImage">
      <summary>コントロールの背景画像を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.Picture">
      <summary>コントロールのピクチャを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.PicturePriv">
      <summary>内部使用のみ。ピクチャ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.DrawFocusRectangle">
      <summary>コントロールのフォーカス矩形の描画スタイルを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.DrawFocusRectanglePriv">
      <summary>内部使用のみ。フォーカス矩形を描画します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.State">
      <summary>コントロールの要素の状態を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.StatePriv">
      <summary>内部使用のみ。要素の状態。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.Font">
      <summary>コントロールのフォントを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.FontPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.Text">
      <summary>コントロールの内容を、表示されたものと完全一致する文字列として取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.TextPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.About">
      <summary>コントロールに関する情報を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.Name">
      <summary>コントロールを識別するためにコード内で使用する名前を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.BackColor">
      <summary>コントロールの背景色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.BackColorPriv">
      <summary>内部使用のみ。背景色。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.ForeColor">
      <summary>コントロールのテキスト色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.ForeColorPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.AlignHorz">
      <summary>コントロールの内容の水平方向の配置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.AlignHorzPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.AlignVert">
      <summary>コントロールの内容の垂直方向の配置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.AlignVertPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.Rectangle">
      <summary>コントロールのクライアント領域内の矩形を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.StateNotifyList">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.Elements">
      <summary>現在のElementControlが含むIElement派生オブジェクトのコレクションを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.ElementsPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.CanvasContainerBase.#ctor">
      <summary>キャンバスコンテナのベースの設定を処理します。</summary>
    </member>
    <member name="M:FarPoint.Win.CanvasContainerBase.#ctor(System.Object)">
      <summary>指定したクローンを持つキャンバスコンテナのベースの設定を処理します。</summary>
      <param name="cloneFrom">新しいキャンバス コンテナのクローン元のオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.CanvasContainerBase.#ctor(System.Object,System.Boolean)">
      <summary>指定したクローンと、親を持たないかどうかに従って、キャンバス コンテナの設定を処理します。</summary>
      <param name="cloneFrom">新しいキャンバス コンテナのクローン元のオブジェクト</param>
      <param name="noParent">親を持たないかどうか</param>
    </member>
    <member name="M:FarPoint.Win.CanvasContainerBase.OnSizeChanged(System.EventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.CanvasContainerBase.Reset">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.CanvasContainerBase.ResetText">
      <summary>内容をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.CanvasContainerBase.AdjustStringFormat(System.Drawing.StringFormat@)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.CanvasContainerBase.AdjustClientArea">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.CanvasContainerBase.ProcessMnemonic(System.Char)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.CanvasContainerBase.SetElementBounds(System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.CanvasContainerBase.OnGotFocus(System.EventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.CanvasContainerBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。MouseDown処理。</summary>
    </member>
    <member name="M:FarPoint.Win.CanvasContainerBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。MouseUp処理。</summary>
    </member>
    <member name="P:FarPoint.Win.CanvasContainerBase.CanFocus">
      <summary>コントロールがフォーカスを受け取れるかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.CanvasContainerBase.HotkeyPrefix">
      <summary>文字の前に入力されたアンパーサンド（&amp;）によって指定される ホットキーに、アンダースコア（_）を表示するかどうかを 取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.IChangeNotify">
      <summary>内部使用のみ。変更通知を処理するインタフェース。</summary>
    </member>
    <member name="M:FarPoint.Win.IChangeNotify.ChangeNotify(System.Object)">
      <summary>変更通知を処理します。</summary>
      <param name="o">オブジェクト</param>
    </member>
    <member name="T:FarPoint.Win.CheckValue">
      <summary>チェックボックスの値を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.CheckValue.False">
      <summary>チェックボックスの値をFalseに設定します。</summary>
    </member>
    <member name="F:FarPoint.Win.CheckValue.True">
      <summary>チェックボックスの値をTrueに設定します。</summary>
    </member>
    <member name="F:FarPoint.Win.CheckValue.Indeterminate">
      <summary>チェックボックスの値をIndeterminateに設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.chkCheckState">
      <summary>チェックボックスの状態を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.chkCheckState.False">
      <summary>チェックボックスの状態をFalseに設定します。</summary>
    </member>
    <member name="F:FarPoint.Win.chkCheckState.True">
      <summary>チェックボックスの状態をTrueに設定します。</summary>
    </member>
    <member name="F:FarPoint.Win.chkCheckState.FalsePressed">
      <summary>チェックボックスの状態をFalse・押下に設定します。</summary>
    </member>
    <member name="F:FarPoint.Win.chkCheckState.TruePressed">
      <summary>チェックボックスの状態をTrue・押下に設定します。</summary>
    </member>
    <member name="F:FarPoint.Win.chkCheckState.Indeterminate">
      <summary>チェックボックスの状態をIndeterminateに設定します。</summary>
    </member>
    <member name="F:FarPoint.Win.chkCheckState.IndeterminatePressed">
      <summary>チェックボックスの状態をIndeterminate・押下に設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.CheckBoxPictureIndex">
      <summary>チェックボックスの状態を表すピクチャのインデックスを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.CheckBoxPictureIndex.False">
      <summary>チェックボックスのFalse状態を表すピクチャのインデックスを設定します。</summary>
    </member>
    <member name="F:FarPoint.Win.CheckBoxPictureIndex.True">
      <summary>チェックボックスのTrue状態を表すピクチャのインデックスを設定します。</summary>
    </member>
    <member name="F:FarPoint.Win.CheckBoxPictureIndex.FalsePressed">
      <summary>チェックボックスのFalseで押された状態を表すピクチャのインデックスを設定します。</summary>
    </member>
    <member name="F:FarPoint.Win.CheckBoxPictureIndex.TruePressed">
      <summary>チェックボックスのTrueで押された状態を表すピクチャのインデックスを設定します。</summary>
    </member>
    <member name="F:FarPoint.Win.CheckBoxPictureIndex.Indeterminate">
      <summary>チェックボックスのIndeterminate状態を表すピクチャのインデックスを設定します。</summary>
    </member>
    <member name="F:FarPoint.Win.CheckBoxPictureIndex.IndeterminatePressed">
      <summary>チェックボックスのIndeterminateで押された状態を表すピクチャのインデックスを設定します。</summary>
    </member>
    <member name="F:FarPoint.Win.CheckBoxPictureIndex.FalseDisabled">
      <summary>チェックボックスのFalseで無効の状態を表すピクチャのインデックスを設定します。</summary>
    </member>
    <member name="F:FarPoint.Win.CheckBoxPictureIndex.TrueDisabled">
      <summary>チェックボックスのTrueで無効の状態を表すピクチャのインデックスを設定します。</summary>
    </member>
    <member name="F:FarPoint.Win.CheckBoxPictureIndex.IndeterminateDisabled">
      <summary>チェックボックスのIndeterminateで無効の状態を表すピクチャのインデックスを設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.CheckBoxPictureConverter">
      <summary>CheckBoxPictureオブジェクトを別の形式に変換します。</summary>
    </member>
    <member name="M:FarPoint.Win.CheckBoxPictureConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>オブジェクトのプロパティ値のセットを指定して、 この型のオブジェクトを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.CheckBoxPictureConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>このオブジェクトの値を変更するのに、CreateInstanceメソッドを呼び出して 新しい値を作成する必要があるかどうかを 判定します。</summary>
    </member>
    <member name="T:FarPoint.Win.CheckBoxPicture">
      <summary>チェックボックスのそれぞれの状態に使用するピクチャ（画像）を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.CheckBoxPicture.Dispose">
      <summary>破棄します。</summary>
    </member>
    <member name="M:FarPoint.Win.CheckBoxPicture.Dispose(System.Boolean)">
      <summary>リソースを破棄して解放します。</summary>
      <param name="disposing">破棄するかどうか</param>
    </member>
    <member name="P:FarPoint.Win.CheckBoxPicture.Item(System.Int32)">
      <summary>チェックボックスのピクチャ（画像）のインデックスを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.CheckBoxPicture.Item(FarPoint.Win.CheckBoxPictureIndex)">
      <summary>チェックボックスのピクチャ（画像）のインデックスを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.CheckBoxPicture.False">
      <summary>チェックボックスのFalse状態を表すピクチャ（画像）を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.CheckBoxPicture.FalseDisabled">
      <summary>チェックボックスのFalseで無効の状態を表すピクチャ（画像）を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.CheckBoxPicture.FalsePressed">
      <summary>チェックボックスのFalseで押された状態を表すピクチャ（画像）を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.CheckBoxPicture.Indeterminate">
      <summary>チェックボックスのIndeterminate状態を表すピクチャ（画像）を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.CheckBoxPicture.IndeterminateDisabled">
      <summary>チェックボックスのIndeterminateで無効の状態を表すピクチャ（画像）を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.CheckBoxPicture.IndeterminatePressed">
      <summary>チェックボックスのIndeterminateで押された状態を表すピクチャ（画像）を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.CheckBoxPicture.True">
      <summary>チェックボックスのTrue状態を表すピクチャ（画像）を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.CheckBoxPicture.TrueDisabled">
      <summary>チェックボックスのTrueで無効の状態を表すピクチャ（画像）を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.CheckBoxPicture.TruePressed">
      <summary>チェックボックスのTrueで押された状態を表すピクチャ（画像）を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.CheckBoxPicture.IsDisposed">
      <summary>破棄されるかどうかを取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.FocusRectangle">
      <summary>フォーカス矩形を表示するかどうかを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.FocusRectangle.Inherit">
      <summary>チェックボックスのスタイルによってフォーカス矩形が表示されるかどうかが決まります。</summary>
    </member>
    <member name="F:FarPoint.Win.FocusRectangle.Show">
      <summary>フォーカス矩形を表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.FocusRectangle.Hide">
      <summary>フォーカス矩形を非表示にします。</summary>
    </member>
    <member name="T:FarPoint.Win.FpCheckBox">
      <summary>FarPointチェックボックスコントロールを表します。</summary>
    </member>
    <member name="F:FarPoint.Win.FpCheckBox.DEFAULT_PICTURE_WIDTH">
      <summary>デフォルトチェックボックスのピクチャの幅。</summary>
    </member>
    <member name="F:FarPoint.Win.FpCheckBox.DEFAULT_PICTURE_HEIGHT">
      <summary>デフォルトチェックボックスのピクチャの高さ。</summary>
    </member>
    <member name="F:FarPoint.Win.FpCheckBox.theme">
      <summary>内部使用。表示スタイルのテーマを設定します。</summary>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.#cctor">
      <summary></summary>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.Finalize">
      <summary></summary>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.Dispose(System.Boolean)">
      <summary>破棄します。</summary>
      <param name="disposing">破棄するかどうか。</param>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.#ctor">
      <summary>新しいFarPointチェックボックスコントロールを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.OnBackgroundImageChanged(System.Object,System.EventArgs)">
      <summary>背景ピクチャが変更されたときに発生します。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.ResetCaption">
      <summary>チェックボックスのテキストをデフォルト設定にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.OnThemeChanged(System.Object,System.EventArgs)">
      <summary>VisualStyleTheme の ThemeChanged イベントを処理します。</summary>
      <param name="sender">オブジェクト</param>
      <param name="e">EventArgs</param>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.ResetTextTrue">
      <summary>チェックボックスのTrue状態のテキストをデフォルト設定にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.ResetTextFalse">
      <summary>チェックボックスのFalse状態のテキストをデフォルト設定にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.ResetTextIndeterminate">
      <summary>チェックボックスのIndeterminate状態のテキストをデフォルト設定にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.OnAfterFocus(System.EventArgs)">
      <summary>AfterFocusイベントを発生させます。</summary>
      <param name="e">イベントデータを含むSystem.EventArgs。</param>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.OnCheckedChanged(System.EventArgs)">
      <summary>CheckedChangedイベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.OnCheckStateChanged(System.EventArgs)">
      <summary>CheckStateChangedイベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,System.Object,System.Drawing.Font,System.String,System.String,System.String,System.String,FarPoint.Win.CheckBoxPicture,FarPoint.Win.ButtonTextAlign,System.Boolean,System.Boolean,System.Drawing.Text.HotkeyPrefix)">
      <summary>チェックボックスのテキストとピクチャを表示するための高さと幅を計算します。</summary>
      <param name="g">描画に使用するグラフィックデバイスインタフェース（GDI+グラフィック面）</param>
      <param name="size">優先サイズまたは必要な最大サイズ</param>
      <param name="value">チェックボックスの状態を指定するCheckState定数、またはチェックボックスの現在の状態として使用するNull（あるいは非CheckState値）</param>
      <param name="f">高さと幅の計算に使用するフォント</param>
      <param name="textTrue">チェックボックスがオン（True）のときの文字列</param>
      <param name="textFalse">チェックボックスがオフ（False）のときの文字列</param>
      <param name="textGray">チェックボックスがグレー（Indeterminate）のときの文字列</param>
      <param name="caption">他のテキスト値がどれも設定されていない場合の文字列</param>
      <param name="pict">チェックボックスのピクチャ（画像）</param>
      <param name="align">テキストとチェックボックスの配置</param>
      <param name="bKeyDown">キーが押されているかどうか</param>
      <param name="bMouseDown">マウスが押されているかどうか</param>
      <param name="prefix">ホットキー接頭辞</param>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.IsInputKey(System.Windows.Forms.Keys)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>KeyDownイベントを処理します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>KeyUpイベントを処理します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.OnGotFocus(System.EventArgs)">
      <summary>GotFocusイベントを処理します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.OnLostFocus(System.EventArgs)">
      <summary>LostFocusイベントを処理します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseDownイベントを処理します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseMoveイベントを処理します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseUpイベントを処理します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>背景を描画します。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>チェックボックスを描画します。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.AdjustStringFormat(System.Drawing.StringFormat@)">
      <summary>書式を調整します。</summary>
      <param name="fmt">書式</param>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.DoPaint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.CheckValue,System.Boolean,System.Drawing.Font,System.String,System.String,System.String,System.String,FarPoint.Win.ButtonTextAlign,FarPoint.Win.CheckBoxPicture,System.Boolean,System.Boolean,System.Boolean,FarPoint.Win.Picture,System.Drawing.StringFormat,System.Boolean)">
      <summary>デフォルトのピクチャの高さと幅を持つチェックボックスを描画します。</summary>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.OnMouseLeave(System.EventArgs)">
      <summary>MouseLeaveイベントを処理します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.OnMouseEnter(System.EventArgs)">
      <summary>MouseEnterイベントを処理します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.DoPaint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.CheckValue,System.Boolean,System.Drawing.Font,System.String,System.String,System.String,System.String,FarPoint.Win.ButtonTextAlign,FarPoint.Win.CheckBoxPicture,System.Boolean,System.Boolean,System.Boolean,FarPoint.Win.Picture,System.Drawing.StringFormat,System.Boolean,System.Int32,System.Int32,FarPoint.Win.VisualStyles,System.Boolean)">
      <summary>チェックボックスを描画します。</summary>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.DoPaint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.CheckValue,System.Boolean,System.Drawing.Font,System.String,System.String,System.String,System.String,FarPoint.Win.ButtonTextAlign,FarPoint.Win.CheckBoxPicture,System.Boolean,System.Boolean,System.Boolean,FarPoint.Win.Picture,System.Drawing.StringFormat,System.Boolean,System.Int32,System.Int32,FarPoint.Win.VisualStyles,System.Boolean,FarPoint.Win.FocusRectangle)">
      <summary>チェックボックスを描画します。</summary>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.WndProc(System.Windows.Forms.Message@)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="E:FarPoint.Win.FpCheckBox.AfterFocus">
      <summary>コントロールがフォーカスを受け取った後に発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.FpCheckBox.CheckChanged">
      <summary>コントロールのチェック状態が変化したときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.FpCheckBox.CheckStateChanged">
      <summary>コントロールのチェック状態が変化するときに発生します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.BackgroundImage">
      <summary>チェックボックスコントロールの背景画像として使用するピクチャを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.PictureWidth">
      <summary>コントロールのチェックボックスピクチャ（画像）の幅を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.FocusRectangle">
      <summary>フォーカス矩形が表示されるかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.PictureHeight">
      <summary>コントロールのチェックボックスピクチャ（画像）の高さを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.PictureAlignH">
      <summary>コントロールのチェックボックスピクチャの水平方向の配置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.PictureAlignV">
      <summary>コントロールのチェックボックスピクチャの垂直方向の配置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.Caption">
      <summary>チェックボックスに表示するデフォルトテキストを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.HotkeyPrefix">
      <summary>アンパーサンド（&amp;）文字でテキストに下線を引くかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.VisualStyles">
      <summary>表示スタイルを使用するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.TextTrue">
      <summary>チェックボックスコントロールの状態がTrueのときに表示するテキストを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.TextFalse">
      <summary>チェックボックスコントロールの状態がFalseのときに表示するテキストを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.TextIndeterminate">
      <summary>チェックボックスコントロールの状態がIndeterminateのときに表示するテキストを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.Checked">
      <summary>チェックボックスがONかどうかを表す値を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.AutoCheck">
      <summary>チェックボックスコントロールをクリックするか、コントロールにフォーカスがあるときでスペースキーを押して、 ユーザーがコントロールの状態を切り替えることができるかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.CheckState">
      <summary>チェックボックスの状態を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.TextAlign">
      <summary>チェックボックスコントロール内のピクチャを基準とするテキストの配置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.ThreeState">
      <summary>チェックボックスコントロールに第３の状態があるかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.Value">
      <summary>チェックボックスコントロールの値を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.Picture">
      <summary>チェックボックス画像として使用するピクチャの配列を取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.AutoSearch">
      <summary>文字キー入力によるコンボボックスのリスト項目の自動検索の有効／無効と検索方法を表します。</summary>
    </member>
    <member name="F:FarPoint.Win.AutoSearch.None">
      <summary>文字キー入力による検索を無効にします。文字キーの入力は無視されます。</summary>
    </member>
    <member name="F:FarPoint.Win.AutoSearch.SingleCharacter">
      <summary>１文字のキー入力に基づいて最初の文字が一致するリスト項目を検索し、 一致する項目があった場合は一致した最初の項目までスクロールします。</summary>
    </member>
    <member name="F:FarPoint.Win.AutoSearch.MultipleCharacter">
      <summary>任意の文字数のキー入力に基づいて、入力文字と一致するリスト項目を検索し、 一致する項目があった場合は一致した最初の項目までスクロールします。</summary>
    </member>
    <member name="F:FarPoint.Win.AutoSearch.SingleGreaterThan">
      <summary>１文字のキー入力に基づいて最初の文字が一致するリスト項目を検索し、 一致する項目があった場合は一致した最初の項目までスクロールします。 一致する項目がない場合は、先頭の文字が、アルファベット順で入力文字以降の次の項目まで移動します。</summary>
    </member>
    <member name="T:FarPoint.Win.ListAlignment">
      <summary>ドロップダウンリストを配置するコンボボックスの辺を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.ListAlignment.Left">
      <summary>ドロップダウンリストを左側に配置します。</summary>
    </member>
    <member name="F:FarPoint.Win.ListAlignment.Right">
      <summary>ドロップダウンリストを右側に配置します。</summary>
    </member>
    <member name="T:FarPoint.Win.ComboCharacterSet">
      <summary>セルの内容に使用できる文字セットを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.ComboCharacterSet.Ascii">
      <summary>任意のASCII文字</summary>
    </member>
    <member name="F:FarPoint.Win.ComboCharacterSet.Alpha">
      <summary>英字のみ</summary>
    </member>
    <member name="F:FarPoint.Win.ComboCharacterSet.AlphaNumeric">
      <summary>英数字のみ</summary>
    </member>
    <member name="F:FarPoint.Win.ComboCharacterSet.Numeric">
      <summary>数字のみ</summary>
    </member>
    <member name="T:FarPoint.Win.PopupClosedEventArgs">
      <summary>
        <see cref="!:PopupClosed" />イベントのイベント情報を格納します。</summary>
    </member>
    <member name="F:FarPoint.Win.PopupClosedEventArgs.popup">
      <summary>ポップアップフォーム。</summary>
    </member>
    <member name="M:FarPoint.Win.PopupClosedEventArgs.#ctor(System.Windows.Forms.Form)">
      <summary>指定したポップアップフォームを使用して、このクラスの新しいインスタンスを構築します。</summary>
      <param name="popup">閉じられるポップアップフォーム。</param>
    </member>
    <member name="P:FarPoint.Win.PopupClosedEventArgs.Popup">
      <summary>閉じられるポップアップフォームを取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.PopupCancelEventArgs">
      <summary>
        <see cref="!:PopupCancel" />イベントの引数。閉じられるポップアップフォームへの参照と、操作をキャンセルする手段を提供します。</summary>
    </member>
    <member name="F:FarPoint.Win.PopupCancelEventArgs.cancel">
      <summary>操作をキャンセルするかどうか</summary>
    </member>
    <member name="F:FarPoint.Win.PopupCancelEventArgs.location">
      <summary>マウスダウン位置</summary>
    </member>
    <member name="F:FarPoint.Win.PopupCancelEventArgs.popup">
      <summary>ポップアップフォーム。</summary>
    </member>
    <member name="M:FarPoint.Win.PopupCancelEventArgs.#ctor(System.Windows.Forms.Form,System.Drawing.Point)">
      <summary>このクラスの新しいインスタンスを構築します。</summary>
      <param name="popup">ポップアップフォーム</param>
      <param name="location">ポップアップをキャンセルするマウスイベントが発生したマウス位置（存在する場合）。</param>
    </member>
    <member name="P:FarPoint.Win.PopupCancelEventArgs.Popup">
      <summary>ポップアップフォームを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.PopupCancelEventArgs.CursorLocation">
      <summary>このポップアップをキャンセルするマウスダウンが発生した位置を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.PopupCancelEventArgs.Cancel">
      <summary>フォームを閉じる操作をキャンセルするかどうかを取得または設定します。<c>True</c>に設定した場合、ポップアップは閉じません。</summary>
    </member>
    <member name="T:FarPoint.Win.PopupClosedEventHandler">
      <summary>
        <see cref="!:PopupClosed" />イベントに応答するメソッドを表します。</summary>
    </member>
    <member name="T:FarPoint.Win.PopupCancelEventHandler">
      <summary>
        <see cref="!:PopupCancel" />イベントに応答するメソッドを表します。</summary>
    </member>
    <member name="T:FarPoint.Win.PopupWindowHelper">
      <summary>コンボボックスやメニューなどのポップアップウィンドウの作成を支援するクラス。このクラスには、ポップアップが表示されている間、ポップアップオーナーフォームのタイトルバーをアクティブな状態に維持する機能や、ユーザーがポップアップウィンドウの外側をクリックしたり別のアプリケーションにフォーカスを移動したりしたときにポップアップを自動的にキャンセルする機能があります。</summary>
    </member>
    <member name="F:FarPoint.Win.PopupWindowHelper.popClosedHandler">
      <summary>ポップアップウィンドウが閉じるときを検出するイベントハンドラ</summary>
    </member>
    <member name="F:FarPoint.Win.PopupWindowHelper.filter">
      <summary>ポップアップウィンドウが表示されている間、アプリケーションの任意の位置がマウスでクリックされたことを検出するメッセージフィルタ。</summary>
    </member>
    <member name="F:FarPoint.Win.PopupWindowHelper.popup">
      <summary>表示されるポップアップフォーム。</summary>
    </member>
    <member name="F:FarPoint.Win.PopupWindowHelper.owner">
      <summary>表示されるポップアップフォームのオーナー。</summary>
    </member>
    <member name="F:FarPoint.Win.PopupWindowHelper.popupShowing">
      <summary>ポップアップが表示されるかどうか。</summary>
    </member>
    <member name="F:FarPoint.Win.PopupWindowHelper.skipClose">
      <summary>ポップアップが閉じずにキャンセルされたかどうか。PopupCancelによって通知されます。</summary>
    </member>
    <member name="M:FarPoint.Win.PopupWindowHelper.ShowPopup(System.Windows.Forms.Control,System.Windows.Forms.Form,System.Drawing.Point)">
      <summary>指定したフォームをポップアップウィンドウとして表示し、オーナーのタイトルバーをアクティブな状態に維持します。さらに、ユーザーがポップアップウィンドウの外側をクリックした場合にポップアップをキャンセルする準備をします。<para>このメッセージを使用するための標準的なコードは次のとおりです。</para><code> frmPopup popup = new frmPopup(); Point location = this.PointToScreen(new Point(button1.Left, button1.Bottom)); popupHelper.ShowPopup(this, popup, location);</code><para><see cref="E:System.Windows.Forms.Form.Load" />イベントではなくポップアップフォームのコンストラクターにできるかぎり多くの初期化コードを指定します。そうした方が外観が向上します。</para></summary>
      <param name="owner">ポップアップを所有するメインフォーム</param>
      <param name="popup">ポップアップとして表示するウィンドウ</param>
      <param name="location">ポップアップを表示する位置の画面に対する相対位置。</param>
    </member>
    <member name="M:FarPoint.Win.PopupWindowHelper.popup_Closed(System.Object,System.EventArgs)">
      <summary>ポップアップフォームからの<see cref="E:System.Windows.Forms.Form.Closed" />イベントに応答します。</summary>
      <param name="sender">閉じられたポップアップフォーム。</param>
      <param name="e">使用されていません。</param>
    </member>
    <member name="M:FarPoint.Win.PopupWindowHelper.WndProc(System.Windows.Forms.Message@)">
      <summary>所有元フォームの既存のウィンドウプロシージャをサブクラス化することで、ポップアップが表示されているときにタイトルバーをアクティブな状態に維持し、ユーザーが別のアプリケーションをクリックしたかどうかを検出できるようにします。</summary>
      <param name="m">ウィンドウプロシージャメッセージ</param>
    </member>
    <member name="M:FarPoint.Win.PopupWindowHelper.ClosePopup">
      <summary>ポップアップが非表示になるときに呼び出されます。</summary>
    </member>
    <member name="M:FarPoint.Win.PopupWindowHelper.OnPopupClosed(FarPoint.Win.PopupClosedEventArgs)">
      <summary>
        <see cref="E:FarPoint.Win.PopupWindowHelper.PopupClosed" />イベントを発生させます。</summary>
      <param name="e">閉じられるポップアップフォームを記述する<see cref="T:FarPoint.Win.PopupClosedEventArgs" />。</param>
    </member>
    <member name="M:FarPoint.Win.PopupWindowHelper.OnPopupCancel(FarPoint.Win.PopupCancelEventArgs)">
      <summary>
        <see cref="E:FarPoint.Win.PopupWindowHelper.PopupCancel" />イベントを発生させます。</summary>
      <param name="e">キャンセルされるポップアップフォームを記述する<see cref="T:FarPoint.Win.PopupCancelEventArgs" />。</param>
    </member>
    <member name="M:FarPoint.Win.PopupWindowHelper.#ctor(System.Windows.Forms.Control)">
      <summary>デフォルトコンストラクター。</summary>
      <remarks>このクラスをポップアップの表示元のフォームに関連付けるには、<see cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />メソッドを使用します。</remarks>
    </member>
    <member name="E:FarPoint.Win.PopupWindowHelper.PopupClosed">
      <summary>ポップアップフォームが閉じるときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.PopupWindowHelper.PopupCancel">
      <summary>ポップアップウィンドウがキャンセルされるときに発生します。<see cref="P:FarPoint.Win.PopupCancelEventArgs.Cancel" />プロパティを<c>True</c>に設定することで、フォームがキャンセルされないようにすることができます。</summary>
    </member>
    <member name="T:FarPoint.Win.PopupWindowHelperMessageFilter">
      <summary>ポップアップフォームが表示されている間、マウスイベントを検出し、ポップアップの外側でマウスがクリックされたときに所有元の<see cref="T:FarPoint.Win.PopupWindowHelper" />クラスに通知するメッセージループフィルタ。</summary>
    </member>
    <member name="F:FarPoint.Win.PopupWindowHelperMessageFilter.popup">
      <summary>ポップアップフォーム</summary>
    </member>
    <member name="F:FarPoint.Win.PopupWindowHelperMessageFilter.owner">
      <summary>所有元の<see cref="T:FarPoint.Win.PopupWindowHelper" />オブジェクト。</summary>
    </member>
    <member name="M:FarPoint.Win.PopupWindowHelperMessageFilter.#ctor(FarPoint.Win.PopupWindowHelper,System.Windows.Forms.Control)">
      <summary>このクラスの新しいインスタンスを構築し、所有元オブジェクトを設定します。</summary>
      <param name="owner">このクラスを所有する<see cref="T:FarPoint.Win.PopupWindowHelper" />オブジェクト。</param>
      <param name="host">フィルタリングされるメッセージを受信するホストコントロール</param>
    </member>
    <member name="M:FarPoint.Win.PopupWindowHelperMessageFilter.PreFilterMessage(System.Windows.Forms.Message@)">
      <summary>ポップアップウィンドウが表示されている間、マウスメッセージのメッセージループをチェックします。マウスメッセージが検出された場合、その位置がフォームの外側かどうかをチェックし、外側である場合はオーナーに通知します。</summary>
      <param name="m">メッセージループによって処理されるウィンドウメッセージ</param>
      <returns>メッセージをフィルタリングする場合は<c>True</c>、それ以外の場合は<c>False</c>。この実装は常に<c>False</c>を返します。</returns>
    </member>
    <member name="M:FarPoint.Win.PopupWindowHelperMessageFilter.OnMouseDown">
      <summary>マウス位置をチェックし、マウスがポップアップフォームの外側にある場合はOnCancelPopupメソッドを呼び出します。</summary>
    </member>
    <member name="M:FarPoint.Win.PopupWindowHelperMessageFilter.OnCancelPopup(FarPoint.Win.PopupCancelEventArgs)">
      <summary>
        <see cref="E:FarPoint.Win.PopupWindowHelperMessageFilter.PopupCancel" />イベントを発生させます。</summary>
      <param name="e">キャンセルイベントに関連付けられた<see cref="T:FarPoint.Win.PopupCancelEventArgs" />。</param>
    </member>
    <member name="E:FarPoint.Win.PopupWindowHelperMessageFilter.PopupCancel">
      <summary>ポップアップウィンドウがキャンセルされるときに発生します。<see cref="P:FarPoint.Win.PopupCancelEventArgs.Cancel" />プロパティを<c>True</c>に設定することで、フォームがキャンセルされないようにすることができます。</summary>
    </member>
    <member name="P:FarPoint.Win.PopupWindowHelperMessageFilter.Popup">
      <summary>表示されているポップアップフォームを取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.FpCombo">
      <summary>FarPointコンボボックスコントロールを表します。</summary>
    </member>
    <member name="T:FarPoint.Win.SuperEditBase">
      <summary>コントロールを編集するベースを表します。</summary>
    </member>
    <member name="T:FarPoint.Win.ISpinUpNotify">
      <summary>内部使用のみ。スピンアップ通知をサポートするインタフェース。</summary>
    </member>
    <member name="M:FarPoint.Win.ISpinUpNotify.SpinUpNotify(System.Object)">
      <summary>スピンアップを通知します。</summary>
      <param name="o">オブジェクト</param>
    </member>
    <member name="T:FarPoint.Win.ISpinDownNotify">
      <summary>内部使用のみ。スピンダウン通知をサポートするインタフェース。</summary>
    </member>
    <member name="M:FarPoint.Win.ISpinDownNotify.SpinDownNotify(System.Object)">
      <summary>スピンダウンを通知します。</summary>
      <param name="o">オブジェクト</param>
    </member>
    <member name="T:FarPoint.Win.IPopUpNotify">
      <summary>内部使用のみ。ポップアップ通知をサポートするインタフェース。</summary>
    </member>
    <member name="M:FarPoint.Win.IPopUpNotify.PopUpNotify(System.Object)">
      <summary>ポップアップを通知します。</summary>
      <param name="o">オブジェクト</param>
    </member>
    <member name="T:FarPoint.Win.IDropDownNotify">
      <summary>内部使用のみ。ドロップダウン通知をサポートするインタフェース。</summary>
    </member>
    <member name="M:FarPoint.Win.IDropDownNotify.DropDownNotify(System.Object)">
      <summary>ドロップダウンを通知します。</summary>
      <param name="o">オブジェクト</param>
    </member>
    <member name="T:FarPoint.Win.ISlideLeftNotify">
      <summary>内部使用のみ。左へのスライドの通知をサポートするインタフェース。</summary>
    </member>
    <member name="M:FarPoint.Win.ISlideLeftNotify.SlideLeftNotify(System.Object)">
      <summary>左へのスライドを通知します。</summary>
      <param name="o">オブジェクト</param>
    </member>
    <member name="T:FarPoint.Win.ISlideRightNotify">
      <summary>内部使用のみ。右へのスライドの通知をサポートするインタフェース。</summary>
    </member>
    <member name="M:FarPoint.Win.ISlideRightNotify.SlideRightNotify(System.Object)">
      <summary>右へのスライドを通知します。</summary>
      <param name="o">オブジェクト</param>
    </member>
    <member name="F:FarPoint.Win.SuperEditBase.EmptyUndefinedStringConstant">
      <summary>内部使用のみ。空の未定義文字列。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEditBase.NumericValueStringConstant">
      <summary>内部使用のみ。数値の文字列。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEditBase.TextValueStringConstant">
      <summary>内部使用のみ。テキスト値の文字列。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEditBase.DateValueStringConstant">
      <summary>内部使用のみ。日付値の文字列。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEditBase.FormulaValueStringConstant">
      <summary>内部使用のみ。数式値の文字列。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEditBase.CurrencyValueStringConstant">
      <summary>内部使用のみ。通貨値の文字列。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEditBase.DefaultHeightConstant">
      <summary>内部使用のみ。デフォルトの高さ。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEditBase.DecimalConstant">
      <summary>内部使用のみ。10進数。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEditBase.ThousandSeparatorConstant">
      <summary>内部使用のみ。桁区切り記号。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEditBase.LiteralConstant">
      <summary>内部使用のみ。リテラル。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEditBase.textbox">
      <summary>内部使用のみ。入力テキストボックス。</summary>
    </member>
    <member name="F:FarPoint.Win.SuperEditBase.trueHeight">
      <summary>内部使用のみ。本当の高さ。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnDropDown(System.Object,FarPoint.Win.DropDownEventArgs)">
      <summary>
        <see cref="E:FarPoint.Win.SuperEditBase.DropDown" />イベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.WndProc(System.Windows.Forms.Message@)">
      <summary>内部使用のみ。ウィンドウを処理します。</summary>
      <param name="m">メッセージ</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.#ctor">
      <summary>新しいSuperEditBaseオブジェクトを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ShouldSerializeCursor">
      <summary>カーソルをシリアル化する必要があるかどうかを取得します。</summary>
      <returns></returns>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.Reset">
      <summary>コントロールの内容をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.IsNull">
      <summary>コントロールがNull値を含むかどうかを判定します。</summary>
      <returns>コントロールがNull値を含むかどうかを表すブール値</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.IsValid">
      <summary>コントロールの内容が有効かどうかを判定します。</summary>
      <returns>内容が有効の場合True</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.IsInputKey(System.Windows.Forms.Keys)">
      <summary>内部使用のみ。入力キーかどうかを取得します。</summary>
      <param name="keyData">キーデータ</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ResetFont">
      <summary>コントロールのフォントをデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ShouldSerializeBackColor">
      <summary>内部使用のみ。背景色をシリアル化する必要があるかどうかを判定します。</summary>
      <returns>プロパティ値をデフォルトから変更した場合はTrue。それ以外の場合はFalse。</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ResetBackColor">
      <summary>背景色をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ShouldSerializeForeColor">
      <summary>内部使用のみ。</summary>
      <returns>プロパティ値をデフォルトから変更した場合はTrue。それ以外の場合はFalse。</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ResetForeColor">
      <summary>テキスト色をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ShouldSerializeInvalidColor">
      <summary>内部使用のみ。</summary>
      <returns>プロパティ値をデフォルトから変更した場合はTrue。それ以外の場合はFalse。</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ResetInvalidColor">
      <summary>コントロールが無効なデータを含むときに使用する背景色をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ShouldSerializeNullColor">
      <summary>内部使用のみ。</summary>
      <returns>プロパティ値をデフォルトから変更した場合はTrue。それ以外の場合はFalse。</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ResetNullColor">
      <summary>コントロールがNull値を含むときに表示する背景色をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ResetText">
      <summary>内容をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ShouldSerializeText">
      <summary>内部使用のみ。</summary>
      <returns></returns>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ShouldSerializeButtonColor">
      <summary>内部使用のみ。</summary>
      <returns>プロパティ値をデフォルトから変更した場合はTrue。それ以外の場合はFalse。</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ResetButtonColor">
      <summary>コントロール内のボタンの背景色をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ShouldSerializeButtonMarginColor">
      <summary>内部使用のみ。ボタンの余白の色をシリアル化する必要があるかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ResetButtonMarginColor">
      <summary>編集コントロールのボタンとテキストの間の余白の色をデフォルト色にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.IsDefaultBorder(FarPoint.Win.IBorder)">
      <summary>デフォルトの境界線かどうかを取得します。</summary>
      <param name="border">境界線</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ShouldSerializeBorder">
      <summary>内部使用のみ。</summary>
      <returns>プロパティ値をデフォルトから変更した場合はTrue。それ以外の場合はFalse。</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ResetBorder">
      <summary>境界線をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.GetRegionalSettingsPriv">
      <summary>内部使用のみ。地域設定を取得します。</summary>
      <returns></returns>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.SetRegionalSettingsPriv(FarPoint.Win.SuperEdit.IRegionalSettings)">
      <summary>内部使用のみ。地域設定を設定します。</summary>
      <param name="rgnSettings">地域設定</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.GetNewFormat">
      <summary>新しい書式を取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.SetNewFormat(System.Object)">
      <summary>新しい書式を設定します。</summary>
      <param name="val">値</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.SetNewFormat">
      <summary>新しい書式を設定します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.GetPaintString">
      <summary>描画する文字列を取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.GetDrawingFont(System.Boolean@)">
      <summary>描画用のフォントを取得します。</summary>
      <param name="fontCreated">作成されたフォント</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.GetDrawingText(System.String)">
      <summary>描画するテキストを含む文字列を取得します。</summary>
      <param name="paintString">テキストを含む文字列</param>
      <returns>テキストを含む文字列</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.GetDrawingStringFormat(System.Drawing.Rectangle@)">
      <summary>指定した矩形にテキストを描画するための新しい文字列書式を取得します。</summary>
      <param name="drawRect">テキストを描画する矩形</param>
      <returns>文字列書式を含むStringFormatオブジェクト</returns>
      <remarks>一部の設定で矩形が変更される場合があります。</remarks>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.PaintString(System.Drawing.Graphics,System.Drawing.Rectangle,System.String)">
      <summary>文字列を描画します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="faceRect">矩形領域</param>
      <param name="paintStr">描画する文字列</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ResetToInitText">
      <summary>初期テキストにリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.PaintTextAndPicture(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>テキストとピクチャを描画します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="r">矩形領域</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.PaintFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>フォーカス矩形を描画します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="r">矩形領域</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Paint イベントを発生させて、編集コントロールを描画します。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.PaintBackgroundImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>背景画像を描画します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="r">矩形領域</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.PaintBackColor(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>背景色を描画します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="r">矩形領域</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.PaintSpecialBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>特殊な背景を描画します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="r">矩形領域</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.IsSizeAllowed">
      <summary>サイズが許可されるかどうかを取得します。</summary>
      <returns></returns>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnResize(System.EventArgs)">
      <summary>Resize イベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnSizeChanged(System.EventArgs)">
      <summary>SizeChanged イベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnParentFontChanged(System.EventArgs)">
      <summary>ParentFontChanged イベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnParentChanged(System.EventArgs)">
      <summary>ParentChanged イベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.IsMouseOverButton">
      <summary>ポインタが編集コントロールのボタンの上にあるかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.SetToolTip(System.Windows.Forms.ToolTip,System.String)">
      <summary>埋め込み（内部の子）コントロールのToolTipテキストを設定します。</summary>
      <param name="toolTipControl">ToolTipコントロールの名前</param>
      <param name="toolTipText">ポップアップヒントとして表示するテキストの文字列</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.SetTextBoxBackColor">
      <summary>内部使用のみ。テキストボックスの背景色を設定します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.SetTextBoxBackgroundImage">
      <summary>内部使用のみ。テキストボックスの背景画像を設定します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ToggleState">
      <summary>内部使用のみ。状態を切り替えます。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.AdjustClientArea">
      <summary>内部使用のみ。クライアント領域を調整します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.AdjustClientArea(System.Boolean)">
      <summary>内部使用のみ。クライアント領域を調整します。</summary>
      <param name="bInvalidate">無効にするかどうか</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.SetElementBounds(System.Drawing.Rectangle)">
      <summary>内部使用のみ。要素の境界を設定します。</summary>
      <param name="r">境界矩形</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.Select(System.Int32,System.Int32)">
      <summary>編集コントロールの指定した位置から開始して、指定した数の文字を選択します。</summary>
      <param name="selStart">選択を開始するコントロール内の最初の文字の位置</param>
      <param name="selLength">選択する文字数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.SelectAll">
      <summary>コントロールの内容全体を選択します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnClick(System.EventArgs)">
      <summary>Click イベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnCausesValidationChanged(System.EventArgs)">
      <summary>CausesValidationChanged イベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnMouseEnter(System.EventArgs)">
      <summary>MouseEnter イベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseMove イベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnMouseLeave(System.EventArgs)">
      <summary>MouseLeave イベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.InitLayout">
      <summary>内部使用のみ。レイアウトを初期化します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.GetCharIndexAtPoint(System.Drawing.Point,System.Boolean)">
      <summary>グラフィック オブジェクトの指定した位置にある文字インデックスを計算します。</summary>
      <param name="pt">ポイント</param>
      <param name="splitChar">文字を分割するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.AdjustEditorFaceRectangle(System.Boolean,System.Int32)">
      <summary>エディタの面の矩形を調整します。</summary>
      <param name="rightToLeft"></param>
      <returns></returns>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。マウスアップを処理します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。マウスアップを処理します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ProcessMnemonic(System.Char)">
      <summary>内部使用のみ。ショートカットキー文字を処理します。</summary>
      <param name="charCode">文字コード</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnDoubleClick(System.EventArgs)">
      <summary>DoubleClick イベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnGotFocus(System.EventArgs)">
      <summary>GotFocus イベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditTextCut(System.Object,System.EventArgs)">
      <summary>EditTextCut イベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditTextPasted(System.Object,System.ComponentModel.CancelEventArgs)">
      <summary>EditTextPasted イベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditTextPasting(System.Object,System.ComponentModel.CancelEventArgs)">
      <summary>EditTextPastingイベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
      <summary>EditKeyDown イベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
      <summary>EditKeyPress イベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditKeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
      <summary>EditKeyUp イベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditValidating(System.Object,System.ComponentModel.CancelEventArgs)">
      <summary>EditValidating イベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditValidated(System.Object,System.EventArgs)">
      <summary>EditValidated イベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditTextChanged(System.Object,System.EventArgs)">
      <summary>EditTextChanged イベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditClick(System.Object,System.EventArgs)">
      <summary>EditClick イベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditDoubleClick(System.Object,System.EventArgs)">
      <summary>EditDoubleClick イベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditHelpRequested(System.Object,System.Windows.Forms.HelpEventArgs)">
      <summary>EditHelpRequested イベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditMouseEnter(System.Object,System.EventArgs)">
      <summary>EditMouseEnterイベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditMouseLeave(System.Object,System.EventArgs)">
      <summary>EditMouseLeave イベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditMouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>EditMouseWheel イベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>EditMouseUp イベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>EditMouseMove イベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>EditMouseDown イベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditGotFocus(System.Object,System.EventArgs)">
      <summary>EditGotFocus イベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.Validate(System.String)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.Validate">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.GetValueFromFreeFormat">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ForceValidation">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ForceText(FarPoint.Win.SuperEdit.ISEditFormatter,System.Object)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditLostFocus(System.Object,System.EventArgs)">
      <summary>EditLostFocus イベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnUserError(FarPoint.Win.SuperEdit.UserErrorEventArgs)">
            Occurs when the user performs an action that cannot be processed or is invalid.
            <summary><see cref="E:FarPoint.Win.SuperEditBase.UserError" />イベントを発生させます。</summary><param name="e">イベント引数</param></member>
    <member name="M:FarPoint.Win.SuperEditBase.OnInvalidData(System.EventArgs)">
      <summary>
        <see cref="E:FarPoint.Win.SuperEditBase.InvalidData" />イベントを発生させます。</summary>
      <param name="e">イベント引数</param>
            Occurs when the control contains invalid data.
        </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnAdvance(System.EventArgs)">
      <summary>
        <see cref="E:FarPoint.Win.SuperEditBase.Advance" />イベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>Layout イベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.Copy">
      <summary>編集コントロールで選択されているテキストをクリップボードにコピーします。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.Cut">
      <summary>編集コントロールで選択されている内容をクリップボードに切り取ります。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.Paste">
      <summary>クリップボードの内容を編集コントロールに貼り付けます。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.Clear">
      <summary>編集コントロールの選択されている内容をすべて削除します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.Undo">
      <summary>直前の編集コマンドを取り消します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.SetNull">
      <summary>コントロールの値をNull値に設定します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ClearAll">
      <summary>編集コントロールの内容をすべて削除します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.SpinUpDefaultAction">
      <summary>内部使用のみ。スピンアップのデフォルトアクション。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.SpinDownDefaultAction">
      <summary>内部使用のみ。スピンダウンのデフォルトアクション。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.PopUpDefaultAction">
      <summary>内部使用のみ。ポップアップのデフォルトアクション。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.DropDownDefaultAction">
      <summary>内部使用のみ。ドロップダウンのデフォルトアクション。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.SlideLeftDefaultAction">
      <summary>内部使用のみ。左へのスライドのデフォルトアクション。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.SlideRightDefaultAction">
      <summary>内部使用のみ。右へのスライドのデフォルトアクション。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseUp イベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseDownイベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.SpinUpNotify(System.Object)">
      <summary>内部使用のみ。</summary>
      <param name="o">アクションのオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.SpinDownNotify(System.Object)">
      <summary>内部使用のみ。</summary>
      <param name="o">アクションのオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.FirePopup">
      <summary>内部使用のみ。</summary>
      <returns></returns>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.PopUpNotify(System.Object)">
      <summary>内部使用のみ。</summary>
      <param name="o">アクションのオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.DropDownNotify(System.Object)">
      <summary>内部使用のみ。</summary>
      <param name="o">アクションのオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.SlideLeftNotify(System.Object)">
      <summary>内部使用のみ。</summary>
      <param name="o">アクションのオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.SlideRightNotify(System.Object)">
      <summary>内部使用のみ。</summary>
      <param name="o">アクションのオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.CreateStringWithLiterals(System.String)">
      <summary>リテラル文字から成る文字列を作成します。</summary>
      <param name="originalString">コピー元の文字列</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.HandleValidCharacter(System.Int32@)">
      <summary>内部使用のみ。文字はコントロールによって処理されていない場合に有効です。</summary>
      <param name="c">ASCII文字の数値</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.HandleValidKey(System.Int32)">
      <summary>内部使用のみ。キーはコントロールによって処理されていない場合に有効です。</summary>
      <param name="c">ASCII文字の数値</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.GetLeftmostCharacters(System.Int32)">
      <summary>左端の文字から開始して指定した文字数を取得します。</summary>
      <param name="count">返す文字数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.GetRightmostCharacters(System.Int32)">
      <summary>右端の文字から開始して指定した数の文字を取得します。</summary>
      <param name="count">返す文字数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.GetCharFromPos(System.Drawing.Point)">
      <summary>内部使用のみ。</summary>
      <param name="pt"></param>
      <returns></returns>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.Select(System.Boolean,System.Boolean)">
      <summary>タブ順序に指定された順序でコントロールを 選択します。</summary>
      <param name="directed">選択するコントロールの方向を指定する場合はTrue、それ以外の場合はFalse</param>
      <param name="forward">タブ順序に従って移動する場合はTrue、タブ順序の逆に移動する場合はFalse</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.Dispose(System.Boolean)">
      <summary>内部使用のみ。リソースを破棄して解放します。</summary>
      <param name="disposing">破棄するかどうか</param>
    </member>
    <member name="E:FarPoint.Win.SuperEditBase.SpinUp">
      <summary>ユーザーが編集コントロールのスピンアップボタンをクリックするときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.SuperEditBase.SpinDown">
      <summary>ユーザーが編集コントロールのスピンダウンボタンをクリックするときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.SuperEditBase.PopUp">
      <summary>ユーザーが編集コントロールのポップアップボタンをクリックするときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.SuperEditBase.DropDown">
      <summary>ユーザーが編集コントロールのドロップダウンボタンをクリックするときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.SuperEditBase.SlideLeft">
      <summary>ユーザーが編集コントロールのスライド左ボタンをクリックするときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.SuperEditBase.SlideRight">
      <summary>ユーザーが編集コントロールのスライド右ボタンをクリックするときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.SuperEditBase.UserError">
      <summary>処理不可能または無効な内容が入力されたときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.SuperEditBase.InvalidData">
      <summary>コントロールに無効なデータが含まれているときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.SuperEditBase.Advance">
      <summary>フォーカスを前または次のコントロールに移動するときに発生します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.Cursor">
      <summary>ポインタが編集コントロールの上に置かれているときのポインタの画像を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.VisualStyles">
      <summary>表示スタイルが使用されるかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.Modified">
      <summary>編集コントロールのテキストが変更されているかどうかを表すブール値を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.TextboxPriv">
      <summary>内部使用のみ。入力テキストボックスを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonPriv">
      <summary>内部使用のみ。編集ボタンを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonAlign">
      <summary>編集コントロールのボタンの配置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonAlignPriv">
      <summary>内部使用のみ。ボタンの配置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonWidth">
      <summary>編集コントロールのボタンの幅を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonWidthPriv">
      <summary>内部使用のみ。ボタンの幅を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonMargin">
      <summary>編集コントロールのボタンとテキストの間の余白を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonMarginPriv">
      <summary>内部使用のみ。ボタンの余白を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonWrap">
      <summary>ボタンインデックスがButtonMinとButtonMaxプロパティで指定した値に達したときに 折り返すかどうかを表すブール値を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonWrapPriv">
      <summary>内部使用のみ。ボタンのインデックスが折り返すかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonIndex">
      <summary>編集コントロールのボタンのインデックス値を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonIndexPriv">
      <summary>内部使用のみ。ボタンのインデックスを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonMin">
      <summary>編集コントロールのボタンインデックスの最小値を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonMinPriv">
      <summary>内部使用のみ。最小のボタンインデックスを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonMax">
      <summary>編集コントロールのボタンインデックスの最大値を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonMaxPriv">
      <summary>内部使用のみ。最大のボタンインデックスを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonStyle">
      <summary>編集コントロールに表示するボタンの種類を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonStylePriv">
      <summary>内部使用のみ。ボタンのスタイルを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.DrawFocusRectangle">
      <summary>編集コントロールのフォーカス矩形の描画スタイルを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.EditModeCursorPosition">
      <summary>編集コントロールのフォーカスを受け取ったときのポインタの位置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.AllowClipboardKeys">
      <summary>コントロールがクリップボードショートカットキーをサポートするかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.Focused">
      <summary>編集コントロールにフォーカスがあるかどうかを表すブール値を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.Enabled">
      <summary>コントロールがフォーカスを受け取ってユーザーアクションに応答するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.AutoAdvance">
      <summary>矢印キーでポインタが移動したときにフォーカスが別のコントロールに移動するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.IsInvalidPriv">
      <summary>内部使用のみ。内容が無効かどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.InvalidOption">
      <summary>コントロールがフォーカスを失ったとき無効なデータを表示する、非表示にする、またはクリアするかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.Font">
      <summary>コントロールのフォントを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.FontPriv">
      <summary>内部使用のみ。フォントを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.BackColor">
      <summary>コントロールの背景色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.BackgroundImage">
      <summary>コントロールの背景画像を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ForeColor">
      <summary>コントロールのテキスト色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.InvalidColor">
      <summary>コントロールに無効なデータが含まれているときに表示する背景色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.NullColor">
      <summary>コントロールがNull値を含むときに表示する背景色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.UserEntry">
      <summary>データがコントロールに提供されたときの検証方法を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.UserEntryPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.CausesValidation">
      <summary>コントロールがフォーカスを失ったときに他のコントロールでデータ検証が発生するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.CanValidate">
      <summary>フォーカスを失ったときにコントロールがデータを検証するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.Selectable">
      <summary>ユーザーが編集コントロールを操作できるかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.CanFocus">
      <summary>編集コントロールがフォーカスを受け取れるかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.Text">
      <summary>コントロールの書式付きの内容を、表示されたものと完全一致する文字列として 取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonColor">
      <summary>編集コントロールのボタンの背景色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonMarginColor">
      <summary>編集コントロールのボタンとテキストの間の余白の色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.AllowNull">
      <summary>コントロールがNull値を有効とみなすかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.AllowNullPriv">
      <summary>内部使用のみ。Nullを許可するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.StringTrimmingPriv">
      <summary>内部使用のみ。文字列のトリミングモードを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.HideSelection">
      <summary>コントロールがフォーカスを失ったときに選択されているテキストのハイライト表示も取り消すかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.AutoHeight">
      <summary>フォントに基づいてコントロール全体をサイズ変更するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.AutoMenu">
      <summary>基本的な編集操作のコンテキストメニューをコントロールが表示するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ControlType">
      <summary>コントロールが読み取り／書き込み、読み取り専用、静的のいずれかであるか、またはボタンを押したときに値の変更を許可するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.PictureOrientation">
      <summary>編集コントロールのピクチャの向きを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.PictureTransparencyColor">
      <summary>編集コントロールのピクチャの透過色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.TextOrientation">
      <summary>編集コントロールのテキストの向きを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.TextWrap">
      <summary>改行せずにテキストを自動的に折り返すどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.AlignText">
      <summary>ピクチャの配置を基準としたテキストの配置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.Picture">
      <summary>編集コントロールに表示するピクチャを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.PictureMargin">
      <summary>テキストとピクチャの間の余白を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.FormatText">
      <summary>編集コントロールのテキスト内容を書式設定する方法を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.Value">
      <summary>編集コントロールの書式なしの値を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.Border">
      <summary>コントロールの境界線を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.AlignHorz">
      <summary>コントロールの内容の水平方向の配置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.AlignVert">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.SelectionStart">
      <summary>選択されている文字の先頭位置、または文字が選択されていない場合の 挿入ポイントの位置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.SelectionLength">
      <summary>編集コントロールで選択されている文字数を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.SelectedText">
      <summary>編集コントロールで現在選択されているテキストを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.Formatter">
      <summary>コントロールのフォーマッタを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.MaxLength">
      <summary>コントロール内に入力または貼り付け可能な最大文字数を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ContextMenu">
      <summary>コントロールで表示するコンテキストメニューを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ContextMenuStrip">
      <summary>コントロールに対して表示するコンテキストメニューストリップを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.DirtyFlag">
      <summary>編集が変更されたかどうか（ダーティかどうか）を示すフラグを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.HotkeyPrefix">
      <summary>文字の前にアンパーサンド（&amp;）を入力したときに、静的コントロールで その文字にアンダースコア（_）を付けるかどうかを取得または設定します。</summary>
    </member>
    <member name="M:FarPoint.Win.FpCombo.#ctor">
      <summary>FarPointコンボボックスコントロールを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.FpCombo.OnEditTextCut(System.Object,System.EventArgs)">
      <summary>編集テキストの切り取りイベントを発生させます。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.OnEditTextPasted(System.Object,System.ComponentModel.CancelEventArgs)">
      <summary>編集テキストの貼り付けイベントを発生させます。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.OnLostFocus(System.EventArgs)">
      <summary>LostFocusイベントを発生させます。</summary>
      <param name="e">イベントデータを含むEventArgs。</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.OnGotFocus(System.EventArgs)">
      <summary>フォーカス取得イベントを発生させます。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.OnEditTextChanged(System.Object,System.EventArgs)">
      <summary>編集テキストの変更イベントを発生させます。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.SelectPageDown">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpCombo.SelectNext">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpCombo.SelectPageUp">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpCombo.SelectPrevious">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpCombo.OnEditKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
      <summary>内部使用のみ。編集キーのキープレスイベントを発生させます。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.OnEditMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.OnEditMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.IsInputKey(System.Windows.Forms.Keys)">
      <summary>内部使用のみ。</summary>
      <param name="keyData">キーデータ</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.OnKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.DoAutoSearching(System.Int32,FarPoint.Win.AutoSearch)">
      <summary>内部使用のみ。指定した文字の自動検索を実行します。</summary>
      <param name="c">文字</param>
      <param name="search">自動検索</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.ProcessDialogKey(System.Windows.Forms.Keys)">
      <summary>内部使用のみ。</summary>
      <param name="keyData">キーデータ</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.HandleValidCharacter(System.Int32@)">
      <summary>内部使用のみ。</summary>
      <param name="key">キーのインデックス</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.HandleValidKey(System.Int32)">
      <summary>内部使用のみ。有効な文字キー入力を処理します。</summary>
      <param name="key">入力された文字キー</param>
      <returns>有効な場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.FpCombo.OnCloseUp(System.EventArgs)">
      <summary>CloseUpイベントを発生させます。</summary>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.OnDropDown(FarPoint.Win.DropDownEventArgs)">
      <summary>DropDownイベントを発生させます。</summary>
      <param name="e">イベントデータを含むDropDownEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.OnAfterFocus(System.EventArgs)">
      <summary>AfterFocusイベントを発生させます。</summary>
      <param name="e">イベントデータを含むSystem.EventArgs。</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.OnSelectedIndexChanged(System.EventArgs)">
      <summary>SelectedIndexChangedイベントを発生させます。</summary>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.OnSelectedValueChanged(System.EventArgs)">
      <summary>SelectedValueChangedイベントを発生させます。</summary>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.OnSelectionChangeCommitted(System.EventArgs)">
      <summary>SelectionChangeCommittedイベントを発生させます。</summary>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.DropDownDefaultAction">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpCombo.WndProc(System.Windows.Forms.Message@)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpCombo.DropDownNotify(System.Object)">
      <summary>内部使用のみ。</summary>
      <param name="o">アクションのオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.ShowList(System.Boolean)">
      <summary>コンボボックスコントロールのドロップダウンリストを表示するかどうかを決定します。</summary>
      <param name="bShow">ドロップダウンリストを表示するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseDownイベントを発生させます。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.ToggleState">
      <summary>内部使用のみ。コントロールの状態を切り替えます。</summary>
    </member>
    <member name="M:FarPoint.Win.FpCombo.GetDroppedList">
      <summary>ドロップダウンリストボックスを取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.FpCombo.DrawListBoxItem(System.Windows.Forms.ListBox,System.Windows.Forms.DrawItemEventArgs)">
      <summary>リストボックス項目の１つを描画します。</summary>
      <param name="ctlListBox">リストボックスコントロール</param>
      <param name="e">項目を含むDrawItemイベント</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.ProcessDialogChar(System.Char)">
      <summary>内部使用のみ。</summary>
      <param name="charCode">文字コード</param>
    </member>
    <member name="E:FarPoint.Win.FpCombo.CloseUp">
      <summary>コントロールが終了する（閉じる）ときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.FpCombo.AfterFocus">
      <summary>コントロールがフォーカスを受け取った後に発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.FpCombo.SelectedIndexChanged">
      <summary>コンボボックスリスト内の選択項目のインデックスが変更されたときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.FpCombo.SelectedValueChanged">
      <summary>コンボボックスリストの選択項目の値が変更されたときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.FpCombo.SelectionChangeCommitted">
      <summary>コンボボックスリストの選択項目への変更が確定されたときに発生します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.ListControl">
      <summary>コンボボックスのドロップダウンリストに使用するリストボックスコントロールを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.AcceptsArrowKeys">
      <summary>キーボードの矢印キーを処理する方法を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.ListAlignment">
      <summary>ドロップダウンリストを配置するコントロールの辺を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.WordWrap">
      <summary>１行に収まらないテキストを複数行に折り返すかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.AutoCompleteMode">
      <summary>オートコンプリートの動作を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.AutoCompleteSource">
      <summary>オートコンプリートで使用される補完文字列のソースを指定する値を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.AutoCompleteCustomSource">
      <summary>AutoCompleteSourceプロパティがCustomSourceに設定されている場合に使用される、カスタムのSystem.Collections.Specialized.StringCollectionを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.CharacterSet">
      <summary>使用する文字セットを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.CharacterCasing">
      <summary>大文字小文字の設定を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.Editable">
      <summary>コンボボックスのテキスト部分が編集可能かどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.BorderStyle">
      <summary>境界線スタイルを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.Multiline">
      <summary>コンボボックスがテキストを複数行で表示するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.AcceptsReturn">
      <summary>コンボボックスがキーボードの復帰（［Enter］キー）を受け付けるかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.MaximumLength">
      <summary>コンボボックスのテキスト部分のデータの最大文字数を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.ListOffset">
      <summary>リストをコントロールの配置した端からオフセットするピクセル数を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.BackgroundColor">
      <summary>コンボボックスの背景色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.ListWidth">
      <summary>コンボボックスのドロップダウンリストの幅を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.MaxDrop">
      <summary>コンボボックスのドロップダウンリストに一度に表示する項目数を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.AutoSearch">
      <summary>文字キーの入力によってコンボボックスの項目リストを検索する方法を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.List">
      <summary>コンボボックスの項目リストを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.ItemData">
      <summary>コンボボックスの項目データリストを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.ImageList">
      <summary>コンボボックスの画像リストを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.SelectedItem">
      <summary>コンボボックスリストで選択されている項目を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.SelectedIndex">
      <summary>コンボボックスリストで選択されている項目のインデックスを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.DroppedDown">
      <summary>ドロップダウンリストを表示（ドロップダウン）するかどうかを取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.MathOverride">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="F:FarPoint.Win.MathOverride.pow10">
      <summary>10のべき乗を簡単に調べられるようにします。</summary>
    </member>
    <member name="M:FarPoint.Win.MathOverride.Pow10(System.Int32)">
      <summary>指定したべき指数で10をべき乗した結果を返します。</summary>
    </member>
    <member name="M:FarPoint.Win.MathOverride.ApproxEqual(System.Double,System.Double)">
      <summary>２つの数値を2^-4でスケーリング（４ビット除去）してから、それらの数値が等しいかどうかをテストします。これは小さい丸め誤差を取り除くために四捨五入メソッドと切り捨てメソッドで使用されます。</summary>
    </member>
    <member name="M:FarPoint.Win.MathOverride.ApproxRoundDecimal(System.Decimal,System.Int32)">
      <summary>ApproxEqualを考慮して10進数値を処理する端数処理メソッド。</summary>
    </member>
    <member name="M:FarPoint.Win.MathOverride.ApproxRound2(System.Double,System.Int32)">
      <summary>ApproxEqual を考慮して倍精度浮動小数点数値を 15 桁の 10 進数にする端数処理メソッド。</summary>
    </member>
    <member name="M:FarPoint.Win.MathOverride.ApproxFloor(System.Double)">
      <summary>ApproxEqualを考慮するfloorメソッド。</summary>
    </member>
    <member name="M:FarPoint.Win.MathOverride.ApproxCeiling(System.Double)">
      <summary>ApproxEqualを考慮するceilingメソッド。</summary>
    </member>
    <member name="T:FarPoint.Win.ControlBase">
      <summary>FarPointコントロールの共通原理（基本クラス）を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ControlBase.#ctor">
      <summary>コントロールの新しい基本クラスを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.ControlBase.IsInputKey(System.Windows.Forms.Keys)">
      <summary>指定したキーが、事前処理なしでコントロールによって 処理可能なキーかどうかを判定します。</summary>
      <param name="keyData">チェックするキー</param>
      <returns>事前処理なしでコントロールによる処理が可能なキーの場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.ControlBase.OnGotFocus(System.EventArgs)">
      <summary>System.Windows.Forms.Control.GotFocusイベントを発生させます。</summary>
      <param name="e">イベントデータを含むSystem.EventArgs。</param>
    </member>
    <member name="M:FarPoint.Win.ControlBase.OnLostFocus(System.EventArgs)">
      <summary>System.Windows.Forms.Control.LostFocusイベントを発生させます。</summary>
      <param name="e">イベントデータを含むSystem.EventArgs。</param>
    </member>
    <member name="M:FarPoint.Win.ControlBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="e"></param>
    </member>
    <member name="M:FarPoint.Win.ControlBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="e"></param>
    </member>
    <member name="M:FarPoint.Win.ControlBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="e"></param>
    </member>
    <member name="M:FarPoint.Win.ControlBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="e"></param>
    </member>
    <member name="M:FarPoint.Win.ControlBase.InvalidateFocus">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ControlBase.OnPaint(System.Windows.Forms.PaintEventArgs,System.Object)">
      <summary>内部使用のみ。</summary>
      <param name="e"></param>
      <param name="val"></param>
    </member>
    <member name="M:FarPoint.Win.ControlBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="e"></param>
    </member>
    <member name="M:FarPoint.Win.ControlBase.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="e"></param>
    </member>
    <member name="M:FarPoint.Win.ControlBase.SetClientSize(System.Drawing.Rectangle)">
      <summary>コントロールのクライアント矩形サイズを設定します。</summary>
      <param name="rect">クライアント矩形</param>
    </member>
    <member name="M:FarPoint.Win.ControlBase.GetAdjustedClientRectangle(System.Drawing.Rectangle,FarPoint.Win.Inset,FarPoint.Win.Inset)">
      <summary>コントロールの調整済みクライアント矩形を返します。</summary>
      <param name="ctlRectangle">クライアント矩形</param>
      <param name="border">境界線のインセット</param>
      <param name="margin">余白のインセット</param>
    </member>
    <member name="M:FarPoint.Win.ControlBase.SetBoundingRectangle(System.Drawing.Rectangle,FarPoint.Win.Inset,FarPoint.Win.Inset)">
      <summary>コントロールのクライアント矩形の境界を設定します。</summary>
      <param name="ctlRectangle">クライアント矩形</param>
      <param name="border">境界線のインセット</param>
      <param name="margin">余白のインセット</param>
    </member>
    <member name="M:FarPoint.Win.ControlBase.WndProc(System.Windows.Forms.Message@)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="T:FarPoint.Win.TextAlign">
      <summary>コントロールのテキストとピクチャの配置を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.TextAlign.TextBottomPictTop">
      <summary>テキストをコントロールの下辺に配置し、ピクチャがある場合は テキストの上に配置します</summary>
    </member>
    <member name="F:FarPoint.Win.TextAlign.TextTopPictBottom">
      <summary>テキストをコントロールの上辺に配置し、ピクチャがある場合は テキストの下に配置します</summary>
    </member>
    <member name="F:FarPoint.Win.TextAlign.TextLeftPictRight">
      <summary>テキストをコントロールの左辺に配置し、ピクチャがある場合は テキストの右に配置します。</summary>
    </member>
    <member name="F:FarPoint.Win.TextAlign.TextRightPictLeft">
      <summary>テキストをコントロールの右辺に配置し、ピクチャがある場合は テキストの左に配置します。</summary>
    </member>
    <member name="T:FarPoint.Win.DrawFocusRectangle">
      <summary>フォーカス矩形の表示と位置を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.DrawFocusRectangle.Default">
      <summary>システム設定からフォーカス矩形を継承します。</summary>
    </member>
    <member name="F:FarPoint.Win.DrawFocusRectangle.None">
      <summary>フォーカス矩形を表示しません。</summary>
    </member>
    <member name="F:FarPoint.Win.DrawFocusRectangle.AroundText">
      <summary>テキストの周囲にのみフォーカス矩形を描画します。</summary>
    </member>
    <member name="F:FarPoint.Win.DrawFocusRectangle.AroundPicture">
      <summary>ピクチャの周囲にのみフォーカス矩形を描画します。</summary>
    </member>
    <member name="F:FarPoint.Win.DrawFocusRectangle.AroundTextAndPicture">
      <summary>テキストとピクチャの周囲にフォーカス矩形を描画します。</summary>
    </member>
    <member name="F:FarPoint.Win.DrawFocusRectangle.AroundEdge">
      <summary>要素の端の周囲にフォーカス矩形を描画します。</summary>
    </member>
    <member name="T:FarPoint.Win.TextOrientation">
      <summary>コントロールのテキストの向きを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.TextOrientation.TextHorizontal">
      <summary>コントロールのテキストを水平方向に配置します。</summary>
    </member>
    <member name="F:FarPoint.Win.TextOrientation.TextHorizontalFlipped">
      <summary>コントロールのテキストを水平方向に配置して反転させます。</summary>
    </member>
    <member name="F:FarPoint.Win.TextOrientation.TextVertical">
      <summary>コントロールのテキストを垂直方向に配置します。</summary>
    </member>
    <member name="F:FarPoint.Win.TextOrientation.TextVerticalFlipped">
      <summary>コントロールのテキストを垂直方向に反転して配置します。</summary>
    </member>
    <member name="F:FarPoint.Win.TextOrientation.TextTopDown">
      <summary>コントロールの上から下の方向でテキストを配置し、左から右の方向で折り返します。</summary>
    </member>
    <member name="F:FarPoint.Win.TextOrientation.TextTopDownRTL">
      <summary>コントロールの上から下の方向でテキストを配置し、右から左の方向で折り返します。</summary>
    </member>
    <member name="F:FarPoint.Win.TextOrientation.TextRotateCustom">
      <summary>シェイプ関連オブジェクトのみの回転角度に基づいてテキストを配置します。</summary>
    </member>
    <member name="T:FarPoint.Win.PictureOrientation">
      <summary>コントロールのピクチャの向きを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.PictureOrientation.PictureRotateNone">
      <summary>ピクチャを回転しません。</summary>
    </member>
    <member name="F:FarPoint.Win.PictureOrientation.PictureRotate90">
      <summary>ピクチャを右に90度回転します。</summary>
    </member>
    <member name="F:FarPoint.Win.PictureOrientation.PictureRotate180">
      <summary>ピクチャを右に180度回転します。</summary>
    </member>
    <member name="F:FarPoint.Win.PictureOrientation.PictureRotate270">
      <summary>ピクチャを右に270度回転します。</summary>
    </member>
    <member name="F:FarPoint.Win.PictureOrientation.PictureRotateCustom">
      <summary>ピクチャを右にカスタムの角度回転します。</summary>
    </member>
    <member name="T:FarPoint.Win.ElementState">
      <summary>要素の表示状態を切り替えます。</summary>
    </member>
    <member name="F:FarPoint.Win.ElementState.Normal">
      <summary>表示状態は通常（アクティブ）です。</summary>
    </member>
    <member name="F:FarPoint.Win.ElementState.Inverted">
      <summary>表示状態は反転されています（要素が押されたときなど）。</summary>
    </member>
    <member name="F:FarPoint.Win.ElementState.Inactive">
      <summary>表示状態は非アクティブです。</summary>
    </member>
    <member name="T:FarPoint.Win.ElementWithButtonsStyle">
      <summary>ElementWithButtonsクラスで使用するボタンスタイルを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.ElementWithButtonsStyle.StaticNoButtons">
      <summary>ボタンを表示しません。</summary>
    </member>
    <member name="F:FarPoint.Win.ElementWithButtonsStyle.Scroll">
      <summary>両側にボタンを表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.ElementWithButtonsStyle.DropDown">
      <summary>ドロップダウンボタンを右側に表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.ElementWithButtonsStyle.PopUp">
      <summary>ポップアップボタンを右側に表示します。</summary>
    </member>
    <member name="T:FarPoint.Win.IStateNotify">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.IStateNotify.StateNotify(System.Object)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="T:FarPoint.Win.IElementNotify">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.IElementNotify.ElementNotify(System.Object,System.Object)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="T:FarPoint.Win.IElementDeletedNotify">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.IElementDeletedNotify.ElementDeletedNotify(System.Object,System.Object)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="T:FarPoint.Win.IInternalCommunication">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.IInternalCommunication.PassString(System.String,System.String@)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.IInternalCommunication.PassStringBytes(System.String,System.Byte[]@)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="T:FarPoint.Win.IElementEnhanced">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElementEnhanced.TextRotationAngle">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElementEnhanced.PictureRotationAngle">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="T:FarPoint.Win.ElementWithButtons">
      <summary>ボタンを表示するウィンドウレス要素を表します。</summary>
    </member>
    <member name="T:FarPoint.Win.ElementWindowless">
      <summary>コントロールのウィンドウレス要素を表します。</summary>
    </member>
    <member name="F:FarPoint.Win.ElementWindowless.PICTURE_MARGIN_DEFAULT">
      <summary>要素のデフォルトピクチャマージンを表します（２ピクセル）。</summary>
    </member>
    <member name="F:FarPoint.Win.ElementWindowless.BACK_COLOR_DEFAULT">
      <summary>要素のデフォルト背景色を表します（SystemColors.Control）。</summary>
    </member>
    <member name="F:FarPoint.Win.ElementWindowless.FORE_COLOR_DEFAULT">
      <summary>要素のデフォルトテキスト色を表します（SystemColors.ControlText）。</summary>
    </member>
    <member name="F:FarPoint.Win.ElementWindowless.DYNAMICNAME">
      <summary>Shapeのデフォルト名を表します。この名前は、シェイプがコレクションに追加されるときに正しくなります。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.#ctor">
      <summary>新しいウインドウレス要素オブジェクトを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.#ctor(System.Object)">
      <summary>指定したオブジェクトに基づいて新しいウインドウレス要素オブジェクトを作成します。</summary>
      <param name="cloneFrom">コピー元のオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.CopyTo(System.Object)">
      <summary>このウインドウレス要素オブジェクトのプロパティを対象オブジェクトにコピーします。</summary>
      <param name="target">対象オブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetPictureMargin">
      <summary>テキストとピクチャの間の余白をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetMarginBottom">
      <summary>要素の下辺と内容の間の余白をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetMarginTop">
      <summary>要素の上辺と内容の間の余白をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetMarginLeft">
      <summary>要素の左辺と内容の間の余白をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetMarginRight">
      <summary>要素の右辺と内容の間の余白をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.SetRedraw(System.Boolean,System.Boolean)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトをXMLに保存します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトをXMLからロードします。</summary>
      <param name="r">オブジェクトのロード元のXmlNodeReader</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.BringToFront(System.Object)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.SendToBack(System.Object)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetVisible">
      <summary>要素の表示／非表示をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetEnabled">
      <summary>要素の有効／無効をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetCanFocus">
      <summary>要素にフォーカスできるかどうかをデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetBorder">
      <summary>要素の境界線をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetAlignText">
      <summary>要素のテキスト配置をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetTextOrientation">
      <summary>要素のテキストの向きをデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ShouldSerializeTextRotationAngle">
      <summary>TextRotationAngleプロパティを永続化する必要があるかどうかを示します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetTextRotationAngle">
      <summary>要素のテキストの回転角度をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetPictureOrientation">
      <summary>要素のピクチャの向きをデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ShouldSerializePictureTransparencyTolerance">
      <summary>PictureTransparencyToleranceプロパティを持続させるかどうかを指定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetPictureTransparencyTolerance">
      <summary>要素のピクチャの透過許容誤差をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ShouldSerializePictureTransparencyColor">
      <summary>PictureTransparencyColorプロパティを持続させるかどうかを指定します。</summary>
      <returns>透過色</returns>
      <example>
        <code lang="csharp"> control.Picture = Image.FromFile("d:\overlay.bmp"); control.MarginTop = 3; control.MarginBottom = 3; control.PictureTransparencyColor = Color.Blue; </code>
        <code lang="vb"> control.Picture = Image.FromFile("d:\overlay.bmp") control.MarginTop = 3 control.MarginBottom = 3 control.PictureTransparencyColor = Color.Blue </code>
      </example>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetPictureTransparencyColor">
      <summary>要素のピクチャの透過色をデフォルト値にリセットします。</summary>
      <example>
        <code lang="csharp"> control.Picture = Image.FromFile("d:\overlay.bmp"); control.MarginTop = 3; control.MarginBottom = 3; control.PictureTransparencyColor = Color.Blue; private void button1_Click(object sender, System.EventArgs e) { control.ResetPictureTransparencyColor() } </code>
        <code lang="vb"> control.Picture = Image.FromFile("d:\overlay.bmp") control.MarginTop = 3 control.MarginBottom = 3 control.PictureTransparencyColor = Color.Blue Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click control.ResetPictureTransparencyColor() End Sub </code>
      </example>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetPicture">
      <summary>要素の画像をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetForegroundImage">
      <summary>要素の前景画像をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetBackgroundImage">
      <summary>要素の背景画像をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ShouldSerializeFont">
      <summary>Fontプロパティを持続させるかどうかを指定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetFont">
      <summary>要素のフォントをデフォルト値にリセットします。</summary>
      <example>
        <code lang="csharp"> Font f = new System.Drawing.Font("MS Sans Serif", 12, FontStyle.Bold); element.Font = f; element.State = FarPoint.Win.ElementState.Inverted; element.ResetFont(); </code>
        <code lang="vb"> Dim f As New System.Drawing.Font("MS Sans Serif", 12, FontStyle.Bold) element.Font = f element.State = FarPoint.Win.ElementState.Inverted element.ResetFont(); </code>
      </example>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.GetFont">
      <summary>FontプロパティがNullの場合、要素が使用するデフォルトフォントを取得します。</summary>
      <example>
        <code lang="csharp"> Font f = element.GetFont(); } </code>
        <code lang="vb"> Font f = element.GetFont() </code>
      </example>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetText">
      <summary>要素のテキストをデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ShouldSerializeTag">
      <summary>Tagプロパティを持続させるかどうかを指定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetTag">
      <summary>要素のTagオブジェクトをデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ShouldSerializeBackColor">
      <summary>BackColor プロパティを持続させるかどうかを指定します。</summary>
      <returns>新しい背景色</returns>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetBackColor">
      <summary>背景色をデフォルト設定にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ShouldSerializeForeColor">
      <summary>ForeColorプロパティを持続させるかどうかを指定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetForeColor">
      <summary>要素のテキスト色をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetAlignHorz">
      <summary>要素の水平方向の配置をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetAlignVert">
      <summary>要素の垂直方向の配置をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnGotFocus(System.EventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnLostFocus(System.EventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.Select(System.Boolean)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.GetControl">
      <summary>要素がElementWindowlessクラスから派生した場合、Controlオブジェクトを取得します。</summary>
      <returns>ElementControlから派生した場合はNull</returns>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnFontChanged(System.EventArgs)">
      <summary>コントロールのフォントが変更されたときに<see cref="E:FarPoint.Win.ElementWindowless.FontChanged" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.Update">
      <summary>コントロールにクライアント領域内で無効となった領域を再描画させます。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.AdjustClientArea">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>要素の境界を、指定したサイズ（整数値）の境界矩形の位置とサイズに設定します。</summary>
      <param name="x">境界矩形の左上隅の X 座標（整数）</param>
      <param name="y">境界矩形の左上隅の Y 座標（整数）</param>
      <param name="width">境界矩形のピクセル単位の幅（整数）</param>
      <param name="height">境界矩形のピクセル単位の高さ（整数）</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.SetBoundsFloat(System.Single,System.Single,System.Single,System.Single)">
      <summary>要素の境界を、指定したサイズ（浮動小数点数値）の境界矩形の位置とサイズに設定します。</summary>
      <param name="x">境界矩形の左上隅の X 座標（浮動小数点数）</param>
      <param name="y">境界矩形の左上隅の Y 座標（浮動小数点数）</param>
      <param name="width">境界矩形のピクセル単位の幅（浮動小数点数）</param>
      <param name="height">境界矩形のピクセル単位の高さ（浮動小数点数）</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.SetBounds(System.Drawing.Rectangle)">
      <summary>要素の境界を、指定した境界矩形オブジェクトの位置とサイズ（整数値）に設定します。</summary>
      <param name="rectInput">整数でサイズが指定された境界矩形を含む Rectangle オブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.SetBounds(System.Drawing.RectangleF)">
      <summary>要素の境界を、指定した境界矩形オブジェクトの位置とサイズ（浮動小数点数値）に設定します。</summary>
      <param name="rectInput">浮動小数点数でサイズが指定された境界矩形を含む Rectangle オブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.Focus(System.Boolean)">
      <summary>フォーカスを要素に移動します。</summary>
      <param name="giveFocus">要素がフォーカスを受け取れるかどうか</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.AttachMouseListeners">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.DetachListeners">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnBackgroundImageChanged(System.Object,System.EventArgs)">
      <summary>背景ピクチャが変更されたときに<see cref="E:FarPoint.Win.ElementWindowless.BackgroundImageChanged" />イベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnForegroundImageChanged(System.Object,System.EventArgs)">
      <summary>前景ピクチャが変更されたときに<see cref="E:FarPoint.Win.ElementWindowless.ForegroundImageChanged" />イベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnPictureChanged(System.Object,System.EventArgs)">
      <summary>ピクチャが変更されたときに<see cref="E:FarPoint.Win.ElementWindowless.PictureChanged" />イベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnParentChanged(System.EventArgs)">
      <summary>要素の親が変更されたときに<see cref="E:FarPoint.Win.ElementWindowless.ParentChanged" />イベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnChanged(System.Object,System.EventArgs)">
      <summary>要素が変更されたときに<see cref="E:FarPoint.Win.ElementWindowless.Changed" />イベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
      <summary>要素のプロパティが変更されたときに<see cref="E:FarPoint.Win.ElementWindowless.PropertyChanged" />イベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnNameChanging(System.Object,FarPoint.Win.NameChangingEventArgs)">
      <summary>NameChangingイベントを発生させます。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseDown処理。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>コントロールの上にカーソルがあるときにポインタボタンが押された場合、<see cref="E:FarPoint.Win.ElementWindowless.MouseDown" />イベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.DoMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseDown処理。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>コントロールの上にカーソルがあるときにポインタボタンが離された場合、<see cref="E:FarPoint.Win.ElementWindowless.MouseUp" />イベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.DoMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>コントロールの上にカーソルがあり、コントロール内をポインタが移動したときに、<see cref="E:FarPoint.Win.ElementWindowless.MouseMove" />イベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.DoMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnClick(System.EventArgs)">
      <summary>ユーザーがコントロールをクリックしたときに<see cref="E:FarPoint.Win.ElementWindowless.Click" />イベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.DoClick(System.Object,System.EventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnDoubleClick(System.EventArgs)">
      <summary>ユーザーがコントロールをダブルクリックしたときに<see cref="E:FarPoint.Win.ElementWindowless.DoubleClick" />イベントを発生させます。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.DoDoubleClick(System.Object,System.EventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.Refresh">
      <summary>要素のクライアント領域を無効にしてすぐに再描画させます。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetElements">
      <summary>要素をデフォルト設定にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.Reset">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.Clone">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.SetState(FarPoint.Win.ElementState)">
      <summary>要素の状態を設定します。</summary>
      <param name="eState">要素を設定する列挙状態</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ToggleState">
      <summary>要素の状態を切り替えます。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.GetClientRectangle">
      <summary>要素の座標を取得します。</summary>
      <returns>要素の座標</returns>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.GetClientRectangle(System.Drawing.Rectangle)">
      <summary>要素の座標を取得します。</summary>
      <param name="rectInput">矩形を含むRectangleオブジェクト</param>
      <returns>要素の座標</returns>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.GetClientRectangleF">
      <summary>要素の座標を取得します。</summary>
      <returns>要素の座標</returns>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.GetClientRectangleF(System.Drawing.RectangleF)">
      <summary>要素の座標を取得します。</summary>
      <param name="rectInput">矩形を含むRectangleオブジェクト</param>
      <returns>要素の座標</returns>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>要素（テキストとピクチャ）を描画します。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="rectInput">要素の座標</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.ElementStyle)">
      <summary>要素（テキストとピクチャ）をオーバーライドスタイルで描画します。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="rectInput">要素の座標</param>
      <param name="overrideStyle">オーバーライド時に使用するスタイル</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.GetTextAndPictureRectangles(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle@,System.Drawing.Rectangle@)">
      <summary>要素のテキストとピクチャの矩形を取得します。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">要素座標を含むRectangleオブジェクト</param>
      <param name="rPict">取得するピクチャの矩形</param>
      <param name="rText">取得するテキストの矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.AdjustStringFormat(System.Drawing.StringFormat@)">
      <summary>内部使用のみ。</summary>
      <param name="fmt">文字列書式</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.PaintText(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>要素のテキストを指定した矩形に描画します。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="rText">テキストを囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.PaintPicture(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>指定した要素にピクチャを描画します。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="rPict">ピクチャを囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.PaintTextAndPicture(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>要素にテキストとピクチャを描画します。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">テキストとピクチャの両方を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.PaintForegroundImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>前景画像を描画します。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.PaintFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>フォーカス矩形を描画します。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.PaintElements(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>要素を描画します。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="faceRect">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.PaintBorder(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>境界線を描画します。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.PaintBackgroundImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>背景画像を描画します。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.PaintSpecialBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>特殊背景を描画します。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.PaintSpecialForeground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>特殊前景を描画します。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.PaintBackColor(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>背景色を描画します。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>要素の背景を描画します。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="rectInput">要素の座標</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.ElementStyle)">
      <summary>要素の背景をオーバーライドスタイルで描画します。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="rectInput">要素の座標</param>
      <param name="overrideStyle">オーバーライド時に使用するスタイル</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.SetElementStyle(FarPoint.Win.ElementStyle)">
      <summary>要素のスタイルを設定します。</summary>
      <param name="style">要素のスタイルを含むElementStyleオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.SetElementStyle(FarPoint.Win.ElementStyle,System.Boolean)">
      <summary>要素のスタイルを設定し、未設定のプロパティをクリアします。</summary>
      <param name="style">要素のスタイルを含むElementStyleオブジェクト</param>
      <param name="clearUnsetProps">要素の未設定のプロパティを デフォルト値にリセットするかどうかを表すブール値</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.GetElementStyle">
      <summary>要素のスタイルを取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.AddStateNotify(FarPoint.Win.IStateNotify)">
      <summary>内部使用のみ。</summary>
      <param name="target">対象</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.RemoveStateNotify(FarPoint.Win.IStateNotify)">
      <summary>内部使用のみ。</summary>
      <param name="target">対象</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.FireStateNotify">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.GetRotatedTextSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Rectangle,FarPoint.Win.TextOrientation,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming)">
      <summary>指定したフォント、向き、折り返し設定、ホットキー接頭辞、文字列トリミングで、指定したテキストを描画したときのサイズを取得します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">文字列</param>
      <param name="font">フォント</param>
      <param name="r">矩形</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="hotkeyPrefix">HotkeyPrefix</param>
      <param name="stringTrim">StringTrimming</param>
      <returns>サイズ</returns>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.GetRotatedTextSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.RectangleF,FarPoint.Win.TextOrientation,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming)">
      <summary>指定したフォント、向き、折り返し設定、ホットキー接頭辞、文字列トリミングで、指定したテキストを描画したときのサイズを取得します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">文字列</param>
      <param name="font">フォント</param>
      <param name="r">RectangleF</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="hotkeyPrefix">HotkeyPrefix</param>
      <param name="stringTrim">StringTrimming</param>
      <returns>SizeFオブジェクト</returns>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.GetRotatedTextSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.RectangleF,FarPoint.Win.TextOrientation,System.Boolean,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming)">
      <summary>指定したフォント、向き、折り返し設定、ホットキー接頭辞、文字列トリミングで、指定したテキストを描画したときのサイズを取得します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">文字列</param>
      <param name="font">フォント</param>
      <param name="r">RectangleF</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="multiline">複数行テキストを描画する場合は True、それ以外の場合は False</param> // 20080 -scl
            <param name="hotkeyPrefix">HotkeyPrefix</param><param name="stringTrim">StringTrimming</param><returns>SizeFオブジェクト</returns></member>
    <member name="M:FarPoint.Win.ElementWindowless.GetRotatedTextSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.RectangleF,FarPoint.Win.TextOrientation,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Double)">
      <summary>指定したフォント、向き、折り返し設定、ホットキー接頭辞、文字列トリミングで、指定したテキストを描画したときのサイズを取得します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">文字列</param>
      <param name="font">フォント</param>
      <param name="r">RectangleF</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="hotkeyPrefix">HotkeyPrefix</param>
      <param name="stringTrim">StringTrimming</param>
      <param name="angle">テキストの回転角度。</param>
      <returns>SizeFオブジェクト</returns>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.DrawRotatedText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Rectangle,FarPoint.Win.HorizontalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32)">
      <summary>指定したフォント、色、配置、向き、ホットキー接頭辞、折り返し設定を使用して、指定した矩形に指定した文字列を描画します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">描画する文字列</param>
      <param name="font">使用するフォント</param>
      <param name="foreColor">テキストの色</param>
      <param name="rectText">文字列を描画する矩形</param>
      <param name="halign">水平方向の配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="hotkeyPrefix">HotkeyPrefix</param>
      <param name="stringTrim">StringTrimming</param>
      <param name="drawRectHeight">対象矩形の高さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.DrawRotatedText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,FarPoint.Win.HorizontalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32)">
      <summary>指定したフォント、色、配置、向き、折り返し設定、ホットキー接頭辞、文字列トリミングを使用して、指定した矩形に指定した文字列を描画します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">描画する文字列</param>
      <param name="font">使用するフォント</param>
      <param name="foreColor">テキストの色</param>
      <param name="rectText">文字列を描画する矩形</param>
      <param name="halign">水平方向の配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="hotkeyPrefix">HotkeyPrefix</param>
      <param name="stringTrim">StringTrimming</param>
      <param name="drawRectHeight">対象矩形の高さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.DrawRotatedText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32)">
      <summary>指定したフォント、色、配置、向き、折り返し設定、ホットキー接頭辞、文字列トリミングを使用して、指定した矩形に指定した文字列を描画します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">描画する文字列</param>
      <param name="font">使用するフォント</param>
      <param name="foreColor">テキストの色</param>
      <param name="rectText">文字列を描画する矩形</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="hotkeyPrefix">HotkeyPrefix</param>
      <param name="stringTrim">StringTrimming</param>
      <param name="drawRectHeight">対象矩形の高さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.DrawRotatedText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32,System.Boolean)">
      <summary>指定したフォント、色、配置、向き、折り返し設定、ホットキー接頭辞、文字列トリミングを使用して、指定した矩形に指定した文字列を描画します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">描画する文字列</param>
      <param name="font">使用するフォント</param>
      <param name="foreColor">テキストの色</param>
      <param name="rectText">文字列を描画する矩形</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="hotkeyPrefix">HotkeyPrefix</param>
      <param name="stringTrim">StringTrimming</param>
      <param name="drawRectHeight">対象矩形の高さ（ピクセル単位）</param>
      <param name="adjust">配置に合わせて矩形を調整するかどうかを表すブール値</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.DrawRotatedText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32,System.Boolean,System.Single)">
      <summary>指定したフォント、色、配置、向き、折り返し設定、ホットキー接頭辞、文字列トリミングを使用して、指定した矩形に指定した文字列を描画します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">描画する文字列</param>
      <param name="font">使用するフォント</param>
      <param name="foreColor">テキストの色</param>
      <param name="rectText">文字列を描画する矩形</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="hotkeyPrefix">HotkeyPrefix</param>
      <param name="stringTrim">StringTrimming</param>
      <param name="drawRectHeight">対象矩形の高さ（ピクセル単位）</param>
      <param name="adjust">配置に合わせて矩形を調整するかどうかを表すブール値</param>
      <param name="rotationAngle">テキストを回転する角度</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.DrawRotatedText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32,System.Boolean,System.Single)">
      <summary>指定した文字列を指定した矩形内に、指定したフォント、色、配置、向き、折り返し、ホットキー接頭辞、文字列トリミング、回転角度を使用して描画します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">描画する文字列</param>
      <param name="font">使用するフォント</param>
      <param name="foreColor">テキストの色</param>
      <param name="rectText">文字列を描画する矩形</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="multiline">複数行テキストの場合は True</param>
      <param name="hotkeyPrefix">HotkeyPrefix</param>
      <param name="stringTrim">StringTrimming</param>
      <param name="drawRectHeight">対象矩形の高さ（ピクセル単位）</param>
      <param name="adjust">配置に合わせて矩形を調整するかどうかを表すブール値</param>
      <param name="rotationAngle">テキストを回転する角度</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.DrawRotatedText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32,System.Boolean,System.Double,System.Boolean)">
      <summary>指定した文字列を指定した矩形内に、指定したフォント、色、配置、向き、折り返し、ホットキー接頭辞、文字列トリミング、回転角度を使用して描画します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">描画する文字列</param>
      <param name="font">使用するフォント</param>
      <param name="foreColor">テキストの色</param>
      <param name="rectText">文字列を描画する矩形</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="hotkeyPrefix">HotkeyPrefix</param>
      <param name="stringTrim">StringTrimming</param>
      <param name="drawRectHeight">対象矩形の高さ（ピクセル単位）</param>
      <param name="adjust">配置に合わせて矩形を調整するかどうかを表すブール値</param>
      <param name="rotationAngle">テキストを回転する角度</param>
      <param name="rightToLeft">右から左へレンダリングする場合は True</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.DrawRotatedText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32,System.Boolean,System.Double,System.Boolean)">
      <summary>指定した文字列を指定した矩形内に、指定したフォント、色、配置、向き、折り返し、ホットキー接頭辞、文字列トリミング、回転角度を使用して描画します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">描画する文字列</param>
      <param name="font">使用するフォント</param>
      <param name="foreColor">テキストの色</param>
      <param name="rectText">文字列を描画する矩形</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="multiline">テキストを複数行で描画する場合は True、それ以外の場合は False</param> // 20080 -scl
            <param name="hotkeyPrefix">HotkeyPrefix</param><param name="stringTrim">StringTrimming</param><param name="drawRectHeight">対象矩形の高さ（ピクセル単位）</param><param name="adjust">配置に合わせて矩形を調整するかどうかを表すブール値</param><param name="rotationAngle">テキストを回転する角度</param><param name="rightToLeft">右から左へレンダリングする場合は True</param></member>
    <member name="M:FarPoint.Win.ElementWindowless.DrawRotatedText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32,System.Boolean,System.Double,System.Int32,System.Boolean)">
      <summary>指定した文字列を指定した矩形内に、指定したフォント、色、配置、向き、折り返し、ホットキー接頭辞、文字列トリミング、回転角度を使用して描画します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">描画する文字列</param>
      <param name="font">使用するフォント</param>
      <param name="foreColor">テキストの色</param>
      <param name="rectText">文字列を描画する矩形</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="multiline">テキストを複数行で描画する場合は True、それ以外の場合は False</param> // 20080 -scl
            <param name="hotkeyPrefix">HotkeyPrefix</param><param name="stringTrim">StringTrimming</param><param name="drawRectHeight">対象矩形の高さ（ピクセル単位）</param><param name="adjust">配置に合わせて矩形を調整するかどうかを表すブール値</param><param name="rotationAngle">テキストを回転する角度</param><param name="txtIndent">テキストをインデントするピクセル数</param><param name="rightToLeft">右から左へレンダリングする場合は True</param></member>
    <member name="P:FarPoint.Win.ElementWindowless.UsingTextRenderer">
      <summary>内部使用のみ。テキストレンダラー情報を取得します。</summary>
    </member>
    <member name="E:FarPoint.Win.ElementWindowless.BackgroundImageChanged">
      <summary>要素の背景画像が変更されると発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.ElementWindowless.Click">
      <summary>ユーザーが要素をクリックすると発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.ElementWindowless.DoubleClick">
      <summary>ユーザーが要素をダブルクリックすると発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.ElementWindowless.FontChanged">
      <summary>要素のフォントが変更されると発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.ElementWindowless.ForegroundImageChanged">
      <summary>要素の前景画像が変更されると発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.ElementWindowless.MouseDown">
      <summary>カーソルが要素の上に置かれた状態でユーザーがマウスボタンを押すと発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.ElementWindowless.MouseMove">
      <summary>カーソルが要素の上に置かれた状態でユーザーがカーソルを移動すると発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.ElementWindowless.MouseUp">
      <summary>カーソルが要素の上に置かれた状態でユーザーがマウスボタンを解放すると発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.ElementWindowless.PictureChanged">
      <summary>要素のピクチャが変更されると発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.ElementWindowless.ParentChanged">
      <summary>要素の親が変更されたときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.ElementWindowless.Changed">
      <summary>要素が変更されたとき発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.ElementWindowless.PropertyChanged">
      <summary>要素のプロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.ElementWindowless.NameChanging">
      <summary>要素のNameプロパティが変更される前に発生します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.TextWrap">
      <summary>要素のテキストを折り返すかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.TextWrapPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.Focused">
      <summary>要素にフォーカスがあるかどうかを取得します。</summary>
      <example>
        <code lang="csharp"> bool vbool; element.AlignHorz = FarPoint.Win.HorizontalAlignment.Left; element.AlignVert = FarPoint.Win.VerticalAlignment.Top; element.TextWrap = true; element.Text = "Let's plan on meeting at 10."; vbool = element.Focused; textBox1.Text = Convert.ToString(vbool); </code>
        <code lang="vb"> Dim vbool As Boolean element.AlignHorz = FarPoint.Win.HorizontalAlignment.Left element.AlignVert = FarPoint.Win.VerticalAlignment.Top element.TextWrap = true element.Text = "Let's plan on meeting at 10." vbool = control.Focused TextBox1.Text = vbool </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.ContainsFocus">
      <summary>要素に現在入力フォーカスがあるかどうかを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.CancelMouse">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.CancelMousePriv">
      <summary>内部使用のみ。マウスをキャンセルします。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.PictureMargin">
      <summary>テキストとピクチャの間の余白を取得または設定します。</summary>
      <example>
        <code lang="csharp"> element.Picture = System.Drawing.Image.FromFile("d:\\mail16A.ico"); element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight; element.PictureMargin = 25; </code>
        <code lang="vb"> element.Picture = System.Drawing.Image.FromFile("d:\mail16A.ico") element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight element.PictureMargin = 25 </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.PictureMarginPriv">
      <summary>内部使用のみ。ピクチャの余白。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.MarginBottom">
      <summary>要素の下辺と内容の間の余白を取得または設定します。</summary>
      <example>
        <code lang="csharp"> element.Picture = System.Drawing.Image.FromFile("d:\\mail16A.ico"); element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight; element.PictureMargin = 25; element.MarginBottom = 20; </code>
        <code lang="vb"> element.Picture = System.Drawing.Image.FromFile("d:\mail16A.ico") element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight element.PictureMargin = 25 element.MarginBottom = 20 </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.MarginBottomPriv">
      <summary>内部使用のみ。下の余白。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.MarginTop">
      <summary>要素の上辺と内容の間の余白を取得または設定します。</summary>
      <example>
        <code lang="csharp"> element.Picture = System.Drawing.Image.FromFile("d:\\mail16A.ico"); element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight; element.PictureMargin = 25; element.MarginTop = 20; </code>
        <code lang="vb"> element.Picture = System.Drawing.Image.FromFile("d:\mail16A.ico") element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight element.PictureMargin = 25 element.MarginTop = 20 </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.MarginTopPriv">
      <summary>内部使用のみ。上の余白。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.MarginLeft">
      <summary>要素の左辺と内容の間の余白を取得または設定します。</summary>
      <example>
        <code lang="csharp"> element.Picture = System.Drawing.Image.FromFile("d:\\mail16A.ico"); element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight; element.PictureMargin = 25; element.MarginLeft = 20; </code>
        <code lang="vb"> element.Picture = System.Drawing.Image.FromFile("d:\mail16A.ico") element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight element.PictureMargin = 25 element.MarginLeft = 20 </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.MarginLeftPriv">
      <summary>内部使用のみ。左の余白。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.MarginRight">
      <summary>要素の右辺と内容の間の余白を取得または設定します。</summary>
      <example>
        <code lang="csharp"> element.Picture = System.Drawing.Image.FromFile("d:\\mail16A.ico"); element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight; element.PictureMargin = 25; element.MarginRight = 20; </code>
        <code lang="vb"> element.Picture = System.Drawing.Image.FromFile("d:\mail16A.ico") element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight element.PictureMargin = 25 element.MarginRight = 20 </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.MarginRightPriv">
      <summary>内部使用のみ。右の余白。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.Redraw">
      <summary>要素の描画を許可するかどうかを取得または設定します。</summary>
      <example>
        <code lang="csharp"> private void button1_Click(object sender, System.EventArgs e) { element.Redraw = true; } </code>
        <code lang="vb"> Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click element.Redraw = True End Sub </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.Selectable">
      <summary>コントロールがフォーカスを受け取れるかどうかを取得または設定します。</summary>
      <example>
        <code lang="csharp"> private void button1_Click(object sender, System.EventArgs e) { element.Visible = true; element.Enabled = false; element.Selectable = false; } </code>
        <code lang="vb"> Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click element.Visible = True element.Enabled = False element.Selectable = False End Sub </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.DrawFocusRectangle">
      <summary>要素のフォーカス矩形の描画スタイルを取得または設定します。</summary>
      <example>
        <code lang="csharp"> element.Picture = System.Drawing.Image.FromFile("d:\\mail16A.ico"); element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight; element.PictureMargin = 25; element.MarginBottom = 20; element.DrawFocusRectangle = FarPoint.Win.DrawFocusRectangle.AroundText; </code>
        <code lang="vb"> element.Picture = System.Drawing.Image.FromFile("d:\mail16A.ico") element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight element.PictureMargin = 25 element.MarginBottom = 20 element.DrawFocusRectangle = FarPoint.Win.DrawFocusRectangle.AroundText </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.DrawFocusRectanglePriv">
      <summary>内部使用のみ。フォーカス矩形を描画します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.Parent">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.ParentPriv">
      <summary>内部使用のみ。親。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.Visible">
      <summary>要素を表示するかどうかを取得または設定します。</summary>
      <example>
        <code lang="csharp"> private void button1_Click(object sender, System.EventArgs e) { element.Visible = true; element.Enabled = false; element.Selectable = false; } </code>
        <code lang="vb"> Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click element.Visible = True element.Enabled = False element.Selectable = False End Sub </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.Enabled">
      <summary>この要素が有効かどうかを取得または設定します。</summary>
      <example>
        <code lang="csharp"> private void button1_Click(object sender, System.EventArgs e) { element.Visible = true; element.Enabled = false; element.Selectable = false; } </code>
        <code lang="vb"> Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click element.Visible = True element.Enabled = False element.Selectable = False End Sub </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.CanFocus">
      <summary>要素がフォーカスを受け取れるかどうかを取得または設定します。</summary>
            /// <example><code lang="csharp"> private void button1_Click(object sender, System.EventArgs e) { element.Visible = true; element.Enabled = false; element.Selectable = false; element.CanFocus = false; } </code><code lang="vb"> Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click element.Visible = True element.Enabled = False element.Selectable = False element.CanFocus = False End Sub </code></example></member>
    <member name="P:FarPoint.Win.ElementWindowless.Border">
      <summary>要素の境界線を取得または設定します。</summary>
      <example>
        <code lang="csharp"> element.Picture = System.Drawing.Image.FromFile("d:\\mail16A.ico"); element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight; element.PictureMargin = 25; element.MarginBottom = 20; element.DrawFocusRectangle = FarPoint.Win.DrawFocusRectangle.AroundText; element.Border = new FarPoint.Win.BevelBorder(FarPoint.Win.BevelBorderType.Lowered,SystemColors.ControlLightLight,SystemColors.ControlDark,3,true,true,false,false); </code>
        <code lang="vb"> element.Picture = System.Drawing.Image.FromFile("d:\mail16A.ico") element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight element.PictureMargin = 25 element.MarginBottom = 20 element.DrawFocusRectangle = FarPoint.Win.DrawFocusRectangle.AroundText element.Border = New FarPoint.Win.BevelBorder(FarPoint.Win.BevelBorderType.Lowered,SystemColors.ControlLightLight,SystemColors.ControlDark,3,True,True,False,False) </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.AlignText">
      <summary>要素のテキスト配置を取得または設定します。</summary>
      <example>
        <code lang="csharp"> element.Picture = System.Drawing.Image.FromFile("d:\\mail16A.ico"); element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight; element.PictureMargin = 25; element.MarginBottom = 20; element.DrawFocusRectangle = FarPoint.Win.DrawFocusRectangle.AroundText; element.Border = new FarPoint.Win.BevelBorder(FarPoint.Win.BevelBorderType.Lowered,SystemColors.ControlLightLight,SystemColors.ControlDark,3,true,true,false,false); </code>
        <code lang="vb"> element.Picture = System.Drawing.Image.FromFile("d:\mail16A.ico") element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight element.PictureMargin = 25 element.MarginBottom = 20 element.DrawFocusRectangle = FarPoint.Win.DrawFocusRectangle.AroundText element.Border = New FarPoint.Win.BevelBorder(FarPoint.Win.BevelBorderType.Lowered,SystemColors.ControlLightLight,SystemColors.ControlDark,3,True,True,False,False) </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.TextOrientation">
      <summary>要素のテキストの向きを取得または設定します。</summary>
      <example>
        <code lang="csharp"> element.Picture = System.Drawing.Image.FromFile("d:\\mail16A.ico"); element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight; element.PictureMargin = 25; element.MarginBottom = 20; element.DrawFocusRectangle = FarPoint.Win.DrawFocusRectangle.AroundText; element.Border = new FarPoint.Win.BevelBorder(FarPoint.Win.BevelBorderType.Lowered,SystemColors.ControlLightLight,SystemColors.ControlDark,3,true,true,false,false); element.TextOrientation = FarPoint.Win.TextOrientation.TextTopDown; </code>
        <code lang="vb"> element.Picture = System.Drawing.Image.FromFile("d:\mail16A.ico") element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight element.PictureMargin = 25 element.MarginBottom = 20 element.DrawFocusRectangle = FarPoint.Win.DrawFocusRectangle.AroundText element.Border = New FarPoint.Win.BevelBorder(FarPoint.Win.BevelBorderType.Lowered,SystemColors.ControlLightLight,SystemColors.ControlDark,3,True,True,False,False) element.TextOrientation = FarPoint.Win.TextOrientation.TextTopDown </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.TextOrientationPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.TextRotationAngle">
      <summary>要素のテキストの回転角度を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.TextRotationAnglePriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.PictureOrientation">
      <summary>要素のピクチャの向きを取得または設定します。</summary>
      <example>
        <code lang="csharp"> element.Picture = System.Drawing.Image.FromFile("d:\\mail16A.ico"); element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight; element.PictureMargin = 25; element.MarginBottom = 20; element.DrawFocusRectangle = FarPoint.Win.DrawFocusRectangle.AroundText; element.Border = new FarPoint.Win.BevelBorder(FarPoint.Win.BevelBorderType.Lowered,SystemColors.ControlLightLight,SystemColors.ControlDark,3,true,true,false,false); element.TextOrientation = FarPoint.Win.TextOrientation.TextTopDown; element.PictureOrientation = FarPoint.Win.PictureOrientation.PictureRotate90; </code>
        <code lang="vb"> element.Picture = System.Drawing.Image.FromFile("d:\mail16A.ico") element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight element.PictureMargin = 25 element.MarginBottom = 20 element.DrawFocusRectangle = FarPoint.Win.DrawFocusRectangle.AroundText element.Border = New FarPoint.Win.BevelBorder(FarPoint.Win.BevelBorderType.Lowered,SystemColors.ControlLightLight,SystemColors.ControlDark,3,True,True,False,False) element.TextOrientation = FarPoint.Win.TextOrientation.TextTopDown element.PictureOrientation = FarPoint.Win.PictureOrientation.PictureRotate90 </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.PictureOrientationPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.PictureTransparencyTolerance">
      <summary>要素の透過許容誤差を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.PictureTransparencyColor">
      <summary>要素の透過色を取得または設定します。</summary>
      <example>
        <code lang="csharp"> control.Picture = Image.FromFile("d:\overlay.bmp"); control.MarginTop = 3; control.MarginBottom = 3; control.PictureTransparencyColor = Color.Blue; </code>
        <code lang="vb"> control.Picture = Image.FromFile("d:\overlay.bmp") control.MarginTop = 3 control.MarginBottom = 3 control.PictureTransparencyColor = Color.Blue </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.Picture">
      <summary>要素のピクチャを取得または設定します。</summary>
      <example>
        <code lang="csharp"> control.Picture = Image.FromFile("d:\overlay.bmp"); control.MarginTop = 3; control.MarginBottom = 3; control.PictureTransparencyColor = Color.Blue; </code>
        <code lang="vb"> control.Picture = Image.FromFile("d:\overlay.bmp") control.MarginTop = 3 control.MarginBottom = 3 control.PictureTransparencyColor = Color.Blue </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.PicturePriv">
      <summary>内部使用のみ。ピクチャ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.ForegroundImage">
      <summary>要素の前景画像を取得または設定します。</summary>
      <example>
        <code lang="csharp"> control.ForegroundImage = new FarPoint.Win.Picture(Image.FromFile("d:\overlay.bmp")); control.MarginTop = 3; control.MarginBottom = 3; </code>
        <code lang="vb"> control.ForegroundImage = New FarPoint.Win.Picture(Image.FromFile("d:\overlay.bmp")) control.MarginTop = 3 control.MarginBottom = 3 </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.ForegroundImagePriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.BackgroundImage">
      <summary>コントロールの背景画像を取得または設定します。</summary>
      <example>
        <code lang="csharp"> control.BackgroundImage = new FarPoint.Win.Picture(Image.FromFile("d:\overlay.bmp")); control.MarginTop = 3; control.MarginBottom = 3; </code>
        <code lang="vb"> control.BackgroundImage = New FarPoint.Win.Picture(Image.FromFile("d:\overlay.bmp")) control.MarginTop = 3 control.MarginBottom = 3 </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.BackgroundImagePriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.State">
      <summary>要素の状態を取得または設定します。</summary>
      <example>
        <code lang="csharp"> Font f = new System.Drawing.Font("MS Sans Serif", 12, FontStyle.Bold); element.Font = f; element.State = FarPoint.Win.ElementState.Inverted; </code>
        <code lang="vb"> Dim f As New System.Drawing.Font("MS Sans Serif", 12, FontStyle.Bold) element.Font = f element.State = FarPoint.Win.ElementState.Inverted </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.Font">
      <summary>要素のフォントを取得または設定します。</summary>
      <example>
        <code lang="csharp"> Font f = new System.Drawing.Font("MS Sans Serif", 12, FontStyle.Bold); element.Font = f; element.State = FarPoint.Win.ElementState.Inverted; </code>
        <code lang="vb"> Dim f As New System.Drawing.Font("MS Sans Serif", 12, FontStyle.Bold) element.Font = f element.State = FarPoint.Win.ElementState.Inverted </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.FontPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.Text">
      <summary>要素のテキストを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.TextPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.Name">
      <summary>要素の名前を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.Tag">
      <summary>要素のTagオブジェクトを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.BackColor">
      <summary>要素の背景色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.BackColorPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.ForeColor">
      <summary>要素の前景色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.ForeColorPriv">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.AlignHorz">
      <summary>要素の内容の水平方向の配置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.AlignVert">
      <summary>要素の内容の垂直方向の配置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.Rectangle">
      <summary>要素の矩形の座標を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.RectangleF">
      <summary>要素の矩形の座標を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.StateNotifyList">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.Elements">
      <summary>現在のElementControlオブジェクトに含まれるIElement派生オブジェクトのコレクションを取得します。</summary>
    </member>
    <member name="F:FarPoint.Win.ElementWithButtons.dropDown">
      <summary>ドロップダウンボタン</summary>
    </member>
    <member name="F:FarPoint.Win.ElementWithButtons.scrollUp">
      <summary>スピンアップボタン</summary>
    </member>
    <member name="F:FarPoint.Win.ElementWithButtons.scrollDown">
      <summary>スクロールダウンボタン</summary>
    </member>
    <member name="F:FarPoint.Win.ElementWithButtons.popUp">
      <summary>ポップアップボタン</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.#ctor">
      <summary>デフォルト値を使用して、新しいボタン付き要素を作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.#ctor(System.Object)">
      <summary>指定したオブジェクトをコピーして、ボタン付きの新しい要素を作成します。</summary>
      <param name="cloneFrom">コピー元のオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.Dispose">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.Reset">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.InitializeButtons">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.SetRedraw(System.Boolean,System.Boolean)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.AttachListeners">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.GetClientRectangle(System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseDownイベントを処理します。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseUpイベントを処理します。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.OnScrollClick(System.Object,System.EventArgs)">
      <summary>スクロールボタンで発生するClickイベントを処理します。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.OnScrollMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>スクロールボタンで発生するMouseDownイベントを処理します。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.OnScrollDoubleClick(System.Object,System.EventArgs)">
      <summary>スクロールボタンで発生するDoubleClickイベントを処理します。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.OnDropClick(System.Object,System.EventArgs)">
      <summary>ドロップダウンボタンで発生するClickイベントを処理します。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.OnDropDoubleClick(System.Object,System.EventArgs)">
      <summary>ドロップダウンボタンで発生するDoubleClickイベントを処理します。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.OnPopUpClick(System.Object,System.EventArgs)">
      <summary>ポップアップボタンで発生するClickイベントを処理します。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.OnPopUpDoubleClick(System.Object,System.EventArgs)">
      <summary>ポップアップボタンで発生するDoubleClickイベントを処理します。</summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.Clone">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.AdjustClientArea">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.SetBoundsFloat(System.Single,System.Single,System.Single,System.Single)">
      <summary>要素の境界を、指定したサイズの境界矩形の位置とサイズに設定します。</summary>
      <param name="x">境界矩形の左上隅のx座標</param>
      <param name="y">境界矩形の左上隅のy座標</param>
      <param name="width">境界矩形の幅（ピクセル単位）</param>
      <param name="height">境界矩形の高さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.SetElementBounds(System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.DoClick(System.Object,System.EventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.OnDropMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.DoMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWithButtons.Redraw">
      <summary>要素の描画を許可するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWithButtons.Parent">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWithButtons.ButtonStyle">
      <summary>ElementsWithButtonsオブジェクトのボタンスタイルを取得または設定します。</summary>
      <example>
        <code lang="csharp"> element.ButtonStyle = FarPoint.Win.ElementWithButtonsStyle.DropDown; element.ButtonWidth = 5; </code>
        <code lang="vb"> element.ButtonStyle = FarPoint.Win.ElementWithButtonsStyle.DropDown element.ButtonWidth = 5 </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementWithButtons.ButtonWidth">
      <summary>ボタンの幅を取得または設定します。</summary>
      <example>
        <code lang="csharp"> element.ButtonStyle = FarPoint.Win.ElementWithButtonsStyle.DropDown; element.ButtonWidth = 5; </code>
        <code lang="vb"> element.ButtonStyle = FarPoint.Win.ElementWithButtonsStyle.DropDown element.ButtonWidth = 5 </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.ElementWithButtons.VisualStyles">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWithButtons.ButtonWidthInternal">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWithButtons.ScrollUpButton">
      <summary>スクロールアップボタンが実装されているかどうかを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWithButtons.ScrollDownButton">
      <summary>スクロールダウンボタンが実装されているかどうかを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWithButtons.DropDownButton">
      <summary>ドロップダウンボタンが実装されているかどうかを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementWithButtons.PopUpButton">
      <summary>ポップアップボタンが実装されているかどうかを取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.NoFocusChangeException">
      <summary>NoFocusChange例外を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.NoFocusChangeException.#ctor">
      <summary>新しいNoFocusChange例外を作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.NoFocusChangeException.#ctor(System.String)">
      <summary>新しいNoFocusChange例外を作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.NoFocusChangeException.#ctor(System.String,System.Exception)">
      <summary>新しいNoFocusChange例外を作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.NoFocusChangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化情報から新しいNoFocusChange例外を作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.NoFocusChangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化情報からオブジェクトデータを取得します。</summary>
      <param name="info">シリアル化情報</param>
      <param name="context">ストリームコンテキスト</param>
    </member>
    <member name="T:FarPoint.Win.DropDownButtonElement">
      <summary>ドロップダウンボタン要素を表します。</summary>
    </member>
    <member name="T:FarPoint.Win.ButtonElement">
            ==========================================================================================
             <summary>ボタン要素オブジェクトを表します。</summary></member>
    <member name="F:FarPoint.Win.ButtonElement.pressed">
      <summary>ボタンが押されたかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ButtonElement.#ctor">
      <summary>ボタン要素オブジェクトを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.ButtonElement.#ctor(System.Object)">
      <summary>別のボタン要素をコピーしてボタン要素を作成します。</summary>
      <param name="cloneFrom">コピー元のオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.ButtonElement.Clone">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.ButtonElement.OnGotFocus(System.EventArgs)">
      <summary>要素がフォーカスを取得したときに発生します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.ButtonElement.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseDown処理。</summary>
    </member>
    <member name="M:FarPoint.Win.ButtonElement.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseUp処理。</summary>
    </member>
    <member name="M:FarPoint.Win.DropDownButtonElement.#ctor">
      <summary>新しいドロップダウンボタン要素を作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.DropDownButtonElement.Finalize">
      <summary>システム リソースを解放します。</summary>
    </member>
    <member name="M:FarPoint.Win.DropDownButtonElement.Dispose">
      <summary>システム リソースを解放します。</summary>
    </member>
    <member name="M:FarPoint.Win.DropDownButtonElement.AttachMouseListeners">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.DropDownButtonElement.DetachListeners">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.DropDownButtonElement.DoMouseEnter(System.Object,System.EventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.DropDownButtonElement.DoMouseLeave(System.Object,System.EventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.DropDownButtonElement.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.DropDownButtonElement.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.DropDownButtonElement.DoMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.DropDownButtonElement.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.DropDownButtonElement.VisualStyles">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="T:FarPoint.Win.SpinUpButtonElement">
      <summary>スピンアップボタン要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.SpinUpButtonElement.#ctor">
      <summary>新しいスピンアップボタン要素を作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.SpinUpButtonElement.Finalize">
      <summary>システム リソースを解放します。</summary>
    </member>
    <member name="M:FarPoint.Win.SpinUpButtonElement.Dispose">
      <summary>システム リソースを解放します。</summary>
    </member>
    <member name="M:FarPoint.Win.SpinUpButtonElement.AttachMouseListeners">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.SpinUpButtonElement.DetachListeners">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.SpinUpButtonElement.DoMouseEnter(System.Object,System.EventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.SpinUpButtonElement.DoMouseLeave(System.Object,System.EventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.SpinUpButtonElement.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.SpinUpButtonElement.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.SpinUpButtonElement.DoMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.SpinUpButtonElement.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.SpinUpButtonElement.VisualStyles">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="T:FarPoint.Win.SpinDownButtonElement">
      <summary>スピンダウンボタン要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.SpinDownButtonElement.#ctor">
      <summary>新しいスピンダウンボタン要素を作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.SpinDownButtonElement.Finalize">
      <summary>システム リソースを解放します。</summary>
    </member>
    <member name="M:FarPoint.Win.SpinDownButtonElement.Dispose">
      <summary>システム リソースを解放します。</summary>
    </member>
    <member name="M:FarPoint.Win.SpinDownButtonElement.AttachMouseListeners">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.SpinDownButtonElement.DetachListeners">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.SpinDownButtonElement.DoMouseEnter(System.Object,System.EventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.SpinDownButtonElement.DoMouseLeave(System.Object,System.EventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.SpinDownButtonElement.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.SpinDownButtonElement.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.SpinDownButtonElement.DoMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.SpinDownButtonElement.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.SpinDownButtonElement.VisualStyles">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="T:FarPoint.Win.NameChangingEventArgs">
      <summary>
        <see cref="!:NameChanging" />イベントのイベントデータを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.NameChangingEventArgs.#ctor(System.String)">
      <summary>
        <see cref="!:NameChangedEventArgs" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="newName">新しい名前。</param>
    </member>
    <member name="P:FarPoint.Win.NameChangingEventArgs.NewName">
      <summary>新しい値を取得または設定します。</summary>
      <value>新しい値。</value>
    </member>
    <member name="T:FarPoint.Win.NameChangingEventHandler">
      <summary>NameChangingイベントを処理します。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータを含む<see cref="T:FarPoint.Win.NameChangingEventArgs" />。</param>
    </member>
    <member name="T:FarPoint.Win.IDynamicName">
      <summary>ElementWindowlessインスタンスの名前の動的な生成をサポートするインタフェース。</summary>
    </member>
    <member name="M:FarPoint.Win.IDynamicName.GetPrefixName">
      <summary>プレフィックス名を動的に取得します。</summary>
      <returns></returns>
    </member>
    <member name="T:FarPoint.Win.Elements">
      <summary>要素のコレクションを表します。</summary>
    </member>
    <member name="F:FarPoint.Win.Elements.items">
      <summary>項目の配列リスト</summary>
    </member>
    <member name="F:FarPoint.Win.Elements.elementNotifyList">
      <summary>要素通知の配列リスト</summary>
    </member>
    <member name="F:FarPoint.Win.Elements.elementDeletedNotifyList">
      <summary>削除要素通知の配列リスト</summary>
    </member>
    <member name="M:FarPoint.Win.Elements.#ctor">
      <summary>要素のコレクションを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.Elements.Find(System.String)">
      <summary>指定した名前に一致するコレクション内の要素を検索します。</summary>
      <param name="elementName">要素の名前</param>
    </member>
    <member name="M:FarPoint.Win.Elements.Contains(System.Object)">
      <summary>要素がコレクションに含まれるかどうかを取得します。</summary>
      <param name="element">要素オブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Elements.IndexOf(System.Object)">
      <summary>要素のコレクション内のインデックスを取得します。</summary>
      <param name="element">要素オブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Elements.FindByType(System.Type,System.String)">
      <summary>指定した型と名前に一致するコレクション内の要素を検索します。</summary>
      <param name="t">要素の型</param>
      <param name="elementName">要素の名前</param>
    </member>
    <member name="M:FarPoint.Win.Elements.Add(System.Object)">
      <summary>要素をコレクションに追加してそのインデックスを返します。</summary>
      <param name="e">要素オブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Elements.Add(System.Object,System.Boolean)">
      <summary>要素をコレクションに追加してそのインデックスを返します。</summary>
      <param name="e">要素オブジェクト</param>
      <param name="noClone">クローンせずにそのまま追加するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.Elements.Insert(System.Int32,System.Object)">
      <summary>コレクションの指定したインデックスに要素を挿入します。</summary>
      <param name="index">インデックス</param>
      <param name="e">要素オブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Elements.Insert(System.Int32,System.Object,System.Boolean)">
      <summary>コレクションの指定したインデックスに要素を挿入します。</summary>
      <param name="index">インデックス</param>
      <param name="e">要素オブジェクト</param>
      <param name="noClone">クローンせずにそのまま追加するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.Elements.Clear">
      <summary>すべての要素をコレクションから削除します。</summary>
    </member>
    <member name="M:FarPoint.Win.Elements.Remove(System.Object)">
      <summary>指定した要素をコレクションから削除します。</summary>
      <param name="e">要素オブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Elements.RemoveAt(System.Int32)">
      <summary>インデックスで指定した要素をコレクションから削除します。</summary>
      <param name="index">要素のインデックス</param>
    </member>
    <member name="M:FarPoint.Win.Elements.RemoveByName(System.String)">
      <summary>名前で指定した要素をコレクションから削除します。</summary>
      <param name="elementName">要素の名前</param>
    </member>
    <member name="M:FarPoint.Win.Elements.Replace(System.Object,System.Object)">
      <summary>既存の要素を新しい要素に置き換えます。</summary>
      <param name="newObj">使用する新しい要素</param>
      <param name="oldObj">置き換える要素</param>
      <returns>成功した場合は新しい要素、それ以外の場合は-１</returns>
    </member>
    <member name="M:FarPoint.Win.Elements.ReplaceAt(System.Int32,System.Object)">
      <summary>インデックスの既存の要素を新しい要素に置き換えます。</summary>
      <param name="index">置換対象の要素のインデックス</param>
      <param name="newObj">使用する新しい要素</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Elements.GetEnumerator(System.Int32,System.Int32)">
      <summary>要素の配列リストのインデックスと数を返します。</summary>
      <param name="index">要素の位置</param>
      <param name="count">コレクション内の要素数</param>
      <returns>要素の配列リストのインデックスと数</returns>
    </member>
    <member name="M:FarPoint.Win.Elements.GetEnumerator">
      <summary>要素の配列リストを返します。</summary>
      <returns>要素の配列リスト</returns>
    </member>
    <member name="M:FarPoint.Win.Elements.AddNotify(FarPoint.Win.IElementNotify)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.Elements.RemoveNotify(FarPoint.Win.IElementNotify)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.Elements.FireElementAddNotify(System.Object)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.Elements.FireElementNotify(System.Object)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.Elements.AddDeletedNotify(FarPoint.Win.IElementDeletedNotify)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.Elements.RemoveDeletedNotify(FarPoint.Win.IElementDeletedNotify)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.Elements.FireElementDeletedNotify(System.Object)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.Elements.CopyTo(System.Array,System.Int32)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.Elements.AddRange(System.Object[])">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.Elements.Count">
      <summary>コレクションの要素数を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.Elements.Item(System.Int32)">
      <summary>コレクションの指定したインデックスの要素を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.Elements.IsSynchronized">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.Elements.SyncRoot">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="T:FarPoint.Win.Elements.ElementEnumerator">
      <summary>各種の列挙子（All、Days、RecurringDates、SpecificDates）の IEnumeratorを実装します。</summary>
    </member>
    <member name="F:FarPoint.Win.Elements.ElementEnumerator.elements">
      <summary>列挙される配列（クローン）</summary>
    </member>
    <member name="F:FarPoint.Win.Elements.ElementEnumerator.index">
      <summary>現在のインデックス</summary>
    </member>
    <member name="F:FarPoint.Win.Elements.ElementEnumerator.returnIndex">
      <summary>インデックスを返すかどうかを示すフラグ</summary>
    </member>
    <member name="F:FarPoint.Win.Elements.ElementEnumerator.min">
      <summary>列挙する最小インデックス（外部）</summary>
    </member>
    <member name="F:FarPoint.Win.Elements.ElementEnumerator.max">
      <summary>列挙する最大インデックス（外部）</summary>
    </member>
    <member name="M:FarPoint.Win.Elements.ElementEnumerator.#ctor(FarPoint.Win.Elements)">
      <summary>指定した配列内の要素の列挙子を作成します。</summary>
      <param name="elementArray">要素配列</param>
    </member>
    <member name="M:FarPoint.Win.Elements.ElementEnumerator.#ctor(FarPoint.Win.Elements,System.Boolean,System.Int32,System.Int32)">
      <summary>配列の指定範囲に含まれる要素の列挙子を作成します。</summary>
      <param name="elementArray">要素配列</param>
      <param name="returnIndex">インデックスを返すかどうか</param>
      <param name="startIndex">開始インデックス</param>
      <param name="endIndex">終了インデックス</param>
    </member>
    <member name="M:FarPoint.Win.Elements.ElementEnumerator.MoveNext">
      <summary>列挙子を要素配列内の次の要素に進めます。</summary>
    </member>
    <member name="M:FarPoint.Win.Elements.ElementEnumerator.Reset">
      <summary>列挙子を最初の位置にリセットします。これは要素配列の 最初の要素の前となります。</summary>
    </member>
    <member name="P:FarPoint.Win.Elements.ElementEnumerator.Current">
      <summary>列挙子の現在の要素を取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.IElementStyle">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.IElementStyle.StyleName">
      <summary>スタイル名を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.IElementStyle.Border">
      <summary>境界線を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.IElementStyle.Picture">
      <summary>ピクチャを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.IElementStyle.PictureTransparencyColor">
      <summary>ピクチャの透過色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.IElementStyle.PictureMargin">
      <summary>印刷の余白を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.IElementStyle.MarginRight">
      <summary>右の余白を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.IElementStyle.MarginLeft">
      <summary>左の余白を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.IElementStyle.MarginTop">
      <summary>上の余白を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.IElementStyle.MarginBottom">
      <summary>下の余白を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.IElementStyle.ForegroundImage">
      <summary>前景ピクチャを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.IElementStyle.BackgroundImage">
      <summary>背景ピクチャを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.IElementStyle.Font">
      <summary>フォントを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.IElementStyle.BackColor">
      <summary>背景色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.IElementStyle.ForeColor">
      <summary>テキストの色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.IElementStyle.AlignHorz">
      <summary>水平方向の配置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.IElementStyle.AlignVert">
      <summary>垂直方向の配置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.IElementStyle.AlignText">
      <summary>テキストの配置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.IElementStyle.TextOrientation">
      <summary>テキストの向きを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.IElementStyle.PictureOrientation">
      <summary>ピクチャの向きを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.IElementStyle.DrawFocusRectangle">
      <summary>フォーカス矩形を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.IElementStyle.Text">
      <summary>テキストを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.IElementStyle.TextWrap">
      <summary>テキストを折り返すかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.IElementStyle.Visible">
      <summary>表示するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.IElementStyle.Enabled">
      <summary>有効にするかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.IElementStyle.CanFocus">
      <summary>ユーザーがフォーカスを設定できるかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.IElementStyle.Selectable">
      <summary>選択可能かどうかを取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.ElementStyle">
      <summary>要素スタイルオブジェクトを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.#ctor">
      <summary>要素スタイルを作成します（ElementStyleオブジェクト）。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.Reset">
      <summary>要素スタイルをリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsPictureMarginSet">
      <summary>PictureMarginプロパティが設定されているかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsMarginBottomSet">
      <summary>MarginBottomプロパティが設定されているかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsMarginTopSet">
      <summary>MarginTopプロパティが設定されているかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsMarginLeftSet">
      <summary>MarginLeftプロパティが設定されているかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsMarginRightSet">
      <summary>MarginRightプロパティが設定されているかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsSelectableSet">
      <summary>MarginRightプロパティが設定されているかどうかを表す値を取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsDrawFocusRectangleSet">
      <summary>DrawFocusRectangleプロパティが設定されているかどうかを判定します。</summary>
      <returns></returns>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsVisibleSet">
      <summary>Visibleプロパティが設定されているかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsEnabledSet">
      <summary>Enabledプロパティが設定されているかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsTextWrapSet">
      <summary>TextWrapプロパティが設定されているかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsCanFocusSet">
      <summary>CanFocusプロパティが設定されているかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsBorderSet">
      <summary>Borderプロパティが設定されているかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsAlignTextSet">
      <summary>AlignTextプロパティが設定されているかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsTextOrientationSet">
      <summary>TextOrientationプロパティが設定されているかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsPictureOrientationSet">
      <summary>PictureOrientationプロパティが設定されているかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsPictureTransparencyColorSet">
      <summary>PictureTransparencyColorプロパティが設定されているかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsPictureSet">
      <summary>Pictureプロパティが設定されているかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsForegroundImageSet">
      <summary>ForegroundImageプロパティが設定されているかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsBackgroundImageSet">
      <summary>BackgroundImageプロパティが設定されているかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsFontSet">
      <summary>Fontプロパティが設定されているかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsTextSet">
      <summary>Textプロパティが設定されているかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsStyleNameSet">
      <summary>StyleNameプロパティが設定されているかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsBackColorSet">
      <summary>BackColorプロパティが設定されているかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsForeColorSet">
      <summary>ForeColorプロパティが設定されているかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsAlignHorzSet">
      <summary>AlignHorzプロパティが設定されているかどうかを判定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsAlignVertSet">
      <summary>AlignVertプロパティが設定されているかどうかを判定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.PictureMargin">
      <summary>スタイルのテキストとピクチャの間の余白を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.MarginBottom">
      <summary>オブジェクトの下端から内容までの余白を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.MarginTop">
      <summary>オブジェクトの上端から内容までの余白を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.MarginLeft">
      <summary>オブジェクトの左端から内容までの余白を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.MarginRight">
      <summary>オブジェクトの右端から内容までの余白を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.Selectable">
      <summary>ユーザーが要素を操作できるかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.DrawFocusRectangle">
      <summary>オブジェクトのフォーカス矩形の描画スタイルを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.Visible">
      <summary>スタイルで要素を表示するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.Enabled">
      <summary>オブジェクトがフォーカスを取得してユーザーアクションに応答するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.TextWrap">
      <summary>改行せずにテキストを自動的に折り返すどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.CanFocus">
      <summary>オブジェクトがフォーカスを受け取れるかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.Border">
      <summary>スタイルの境界線を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.AlignText">
      <summary>スタイルのピクチャの配置を基準としたテキストの配置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.TextOrientation">
      <summary>テキストの向きを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.PictureOrientation">
      <summary>スタイルのピクチャの向きを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.PictureTransparencyColor">
      <summary>スタイルのピクチャの透過色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.Picture">
      <summary>スタイルのピクチャを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.ForegroundImage">
      <summary>スタイルの前景画像を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.BackgroundImage">
      <summary>スタイルの背景画像を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.Font">
      <summary>スタイルのフォントを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.Text">
      <summary>コントロールの内容を、表示されたものと完全一致する文字列として取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.StyleName">
      <summary>作成したスタイルの名前を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.BackColor">
      <summary>スタイルの背景色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.ForeColor">
      <summary>スタイルのテキスト色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.AlignHorz">
      <summary>スタイルの水平方向の配置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.AlignVert">
      <summary>スタイルの垂直方向の配置を取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.FpHyperlink">
      <summary>FarPointハイパーリンクコントロールを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.FpHyperlink.#ctor">
      <summary>新しいFarPointハイパーリンクコントロールを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.FpHyperlink.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>ハイパーリンクコントロールの背景を描画します。</summary>
    </member>
    <member name="M:FarPoint.Win.FpHyperlink.OnPaint(System.Windows.Forms.PaintEventArgs,System.Object)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpHyperlink.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpHyperlink.OnGotFocus(System.EventArgs)">
      <summary>GotFocus イベントを発生させます。</summary>
      <param name="e">イベントデータを含むEventArgs。</param>
    </member>
    <member name="M:FarPoint.Win.FpHyperlink.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpHyperlink.IsPointInPicture(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Picture)">
      <summary>ポイントがハイパーリンクコントロールのピクチャ内にあるかどうかを決定します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="x">ポイントのX座標</param>
      <param name="y">ポイントのＹ座標</param>
      <param name="faceRect">画像矩形</param>
      <param name="pic">ピクチャ（画像）</param>
    </member>
    <member name="M:FarPoint.Win.FpHyperlink.IsPointInLink(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,System.String,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Windows.Forms.LinkArea[],FarPoint.Win.Picture)">
      <summary>ポイントがハイパーリンクコントロールのリンクのテキスト内にあるかどうかを決定します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="x">ポイントのX座標</param>
      <param name="y">ポイントのＹ座標</param>
      <param name="r">画像矩形</param>
      <param name="text">ハイパーリンクのテキスト</param>
      <param name="f">テキストのフォント</param>
      <param name="horizontalAlignment">水平方向の配置</param>
      <param name="verticalAlignment">垂直方向の配置</param>
      <param name="areas">ハイパーリンク領域</param>
      <param name="pict">ピクチャ（画像）</param>
    </member>
    <member name="M:FarPoint.Win.FpHyperlink.IsPointInLink(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,System.String,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Windows.Forms.LinkArea[],FarPoint.Win.Picture,System.Boolean)">
      <summary>ポイントがハイパーリンクコントロールのリンクのテキスト内にあるかどうかを決定します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="x">ポイントのX座標</param>
      <param name="y">ポイントのＹ座標</param>
      <param name="r">画像矩形</param>
      <param name="text">ハイパーリンクのテキスト</param>
      <param name="f">テキストのフォント</param>
      <param name="horizontalAlignment">水平方向の配置</param>
      <param name="verticalAlignment">垂直方向の配置</param>
      <param name="areas">ハイパーリンク領域</param>
      <param name="pict">ピクチャ（画像）</param>
      <param name="rightToLeft">右から左への描画を設定するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.FpHyperlink.DoPaint(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Windows.Forms.LinkArea[],System.Drawing.Color,System.Drawing.Color,FarPoint.Win.Picture,System.Boolean[],System.Boolean,System.Boolean)">
      <summary>セルを描画します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="r">画像矩形</param>
      <param name="text">ハイパーリンクのテキスト</param>
      <param name="backColor">背景色</param>
      <param name="foreColor">前景（テキスト）色</param>
      <param name="font">ハイパーリンクテキストのフォント</param>
      <param name="horizontalAlignment">水平方向の配置</param>
      <param name="verticalAlignment">垂直方向の配置</param>
      <param name="areas">ハイパーリンクされた領域</param>
      <param name="linkColor">ハイパーリンクの色</param>
      <param name="visitedColor">表示済みのハイパーリンクの色</param>
      <param name="pict">ピクチャ（画像）</param>
      <param name="visited">ハイパーリンクが以前にクリックされたかどうか（表示されたかどうか）</param>
      <param name="bLocked">コントロールがロックされているかどうか</param>
      <param name="rightToLeft">右から左への描画を設定するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.FpHyperlink.DoPaint(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Windows.Forms.LinkArea[],System.Drawing.Color,System.Drawing.Color,FarPoint.Win.Picture,System.Boolean[],System.Boolean,System.Boolean,System.Drawing.StringTrimming)">
      <summary>セルを描画します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="r">画像矩形</param>
      <param name="text">ハイパーリンクのテキスト</param>
      <param name="backColor">背景色</param>
      <param name="foreColor">前景（テキスト）色</param>
      <param name="font">ハイパーリンクテキストのフォント</param>
      <param name="horizontalAlignment">水平方向の配置</param>
      <param name="verticalAlignment">垂直方向の配置</param>
      <param name="areas">ハイパーリンクされた領域</param>
      <param name="linkColor">ハイパーリンクの色</param>
      <param name="visitedColor">表示済みのハイパーリンクの色</param>
      <param name="pict">ピクチャ（画像）</param>
      <param name="visited">ハイパーリンクが以前にクリックされたかどうか（表示されたかどうか）</param>
      <param name="bLocked">コントロールがロックされているかどうか</param>
      <param name="rightToLeft">右から左への描画を設定するかどうか</param>
      <param name="trim">StringTrimming設定</param>
    </member>
    <member name="M:FarPoint.Win.FpHyperlink.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Font,System.Object)">
      <summary>ハイパーリンクコントロールのテキストを表示するサイズを取得します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="font">フォント</param>
      <param name="value">値</param>
    </member>
    <member name="M:FarPoint.Win.FpHyperlink.OnAfterFocus(System.EventArgs)">
      <summary>AfterFocusイベントを発生させます。</summary>
      <param name="e">イベントデータを含むSystem.EventArgs。</param>
    </member>
    <member name="M:FarPoint.Win.FpHyperlink.OnLinkClicked(System.EventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpHyperlink.OnInvalidLink(System.EventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="E:FarPoint.Win.FpHyperlink.AfterFocus">
      <summary>このコントロールがフォーカスを取得した後に発生します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpHyperlink.Picture">
      <summary>ハイパーリンクコントロールの背景に表示するピクチャを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpHyperlink.StringTrim">
      <summary>コントロールに収まらない文字をトリムする方法を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpHyperlink.VisitedLinkColor">
      <summary>以前に開いたリンクを描画する色を取得または設定します</summary>
    </member>
    <member name="P:FarPoint.Win.FpHyperlink.LinkColor">
      <summary>ハイパーリンクコントロールのリンクの色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpHyperlink.ActiveLink">
      <summary>アクティブリンクを返します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpHyperlink.Links">
      <summary>URL文字列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpHyperlink.LinkAreas">
      <summary>リンクとして使用するテキスト領域を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpHyperlink.LinksVisited">
      <summary>リンクを開いたかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpHyperlink.Link">
      <summary>URL文字列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpHyperlink.LinkArea">
      <summary>リンクとして使用するテキスト領域を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpHyperlink.Visited">
      <summary>リンクを開いたかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpHyperlink.HorizontalAlignment">
      <summary>ハイパーリンクコントロールのテキストの水平方向の配置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpHyperlink.VerticalAlignment">
      <summary>ハイパーリンクコントロールのテキストの垂直方向の配置を取得または設定します。</summary>
    </member>
    <member name="E:FarPoint.Win.FpHyperlink.LinkClicked">
      <summary>ユーザーがリンクをクリックするときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.FpHyperlink.InvalidLink">
      <summary>ユーザーがリンクをクリックするときに発生します。</summary>
    </member>
    <member name="T:FarPoint.Win.Inset">
      <summary>境界線と余白のサイズを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.Inset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>上下左右を指定してインセットを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.Inset.#ctor(System.Int32,System.Int32)">
      <summary>指定した x と y を使用してインセットを作成します。</summary>
      <param name="xInset"></param>
      <param name="yInset"></param>
    </member>
    <member name="M:FarPoint.Win.Inset.#ctor(System.Int32)">
      <summary>指定した側を使用してインセットを作成します。</summary>
      <param name="sideInset"></param>
    </member>
    <member name="P:FarPoint.Win.Inset.Left">
      <summary>左からのインセットを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.Inset.Top">
      <summary>上からのインセットを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.Inset.Right">
      <summary>右からのインセットを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.Inset.Bottom">
      <summary>下からのインセットを取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.ProgressTextStyle">
      <summary>進行状況インジケータのテキスト部分の外観を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.ProgressTextStyle.Value">
      <summary>生の値をテキストとして表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.ProgressTextStyle.Percent">
      <summary>パーセント値を表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.ProgressTextStyle.PercentRemaining">
      <summary>残りのパーセントを表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.ProgressTextStyle.Custom">
      <summary>Textプロパティの値によって定義されたカスタムテキストを表示します。</summary>
    </member>
    <member name="T:FarPoint.Win.ProgressOrientation">
      <summary>コントロールの進行状況インジケータの向きを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.ProgressOrientation.LeftToRight">
      <summary>左から右の水平方向の進行状況インジケータを表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.ProgressOrientation.RightToLeft">
      <summary>右から左の水平方向の進行状況インジケータを表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.ProgressOrientation.TopToBottom">
      <summary>上から下の垂直方向の進行インジケータを表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.ProgressOrientation.BottomToTop">
      <summary>下から上の垂直方向の進行状況インジケータを表示します。</summary>
    </member>
    <member name="T:FarPoint.Win.ProgressStyle">
      <summary>コントロールの進行状況インジケータの外観を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.ProgressStyle.Default">
      <summary>進行状況インジケータを塗りつぶしで表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.ProgressStyle.Bars">
      <summary>進行状況インジケータを連続した小さいバーで表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.ProgressStyle.Gradient">
      <summary>プログレス インジケータをグラデーションとして表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.ProgressStyle.Picture">
      <summary>プログレス インジケータをピクチャとして表示します。</summary>
    </member>
    <member name="T:FarPoint.Win.FpProgress">
      <summary>FarPoint進行状況インジケータコントロールを表します。</summary>
    </member>
    <member name="F:FarPoint.Win.FpProgress.maximum">
      <summary>進行状況インジケータコントロールの向き定数。</summary>
    </member>
    <member name="F:FarPoint.Win.FpProgress.theme">
      <summary>内部使用のみ。表示スタイルのテーマ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpProgress.#cctor">
      <summary>新しい FarPoint プログレス インジケータを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.FpProgress.Finalize">
      <summary>内部使用のみ。FarPoint プログレス インジケータ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpProgress.Dispose(System.Boolean)">
      <summary>内部使用のみ。使用されたリソースをすべて解放します。</summary>
      <param name="disposing">破棄するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.FpProgress.#ctor">
            FpProgress base class.
            <summary>新しいFarPoint進行状況インジケータコントロールを作成します。</summary></member>
    <member name="M:FarPoint.Win.FpProgress.OnBackgroundImageChanged(System.Object,System.EventArgs)">
      <summary>背景ピクチャが変更されたときに発生します。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.FpProgress.OnThemeChanged(System.Object,System.EventArgs)">
      <summary>VisualStyleTheme の ThemeChanged イベントを処理します。</summary>
      <param name="sender">オブジェクト</param>
      <param name="e">EventArgs</param>
    </member>
    <member name="M:FarPoint.Win.FpProgress.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>進行状況インジケータの背景を描画します。</summary>
    </member>
    <member name="M:FarPoint.Win.FpProgress.OnPaint(System.Windows.Forms.PaintEventArgs,System.Object)">
      <summary>内部使用のみ。コントロールを描画します。</summary>
    </member>
    <member name="M:FarPoint.Win.FpProgress.DoPaint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Int32,System.Int32,System.Int32,FarPoint.Win.ProgressOrientation,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Drawing.Color,System.Drawing.Color,System.Boolean,FarPoint.Win.Picture,System.Boolean,FarPoint.Win.ProgressStyle,FarPoint.Win.VisualStyles,FarPoint.Win.ProgressTextStyle,System.String,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode,FarPoint.Win.Picture,System.Boolean)">
      <summary>プログレスインジケーターを描画します。</summary>
      <param name="g">GDI+グラフィック面</param>
      <param name="r">画像矩形</param>
      <param name="backColor">コントロールの背景色</param>
      <param name="foreColor">コントロールの前景（テキスト）色</param>
      <param name="font">テキストのフォント</param>
      <param name="value">コントロールの値</param>
      <param name="minimum">プログレスインジケーターの最小値</param>
      <param name="maximum">プログレスインジケーターの最大値</param>
      <param name="orientation">進行状況インジケータの向き</param>
      <param name="horizontalAlignment">プログレスインジケーターの水平方向の配置</param>
      <param name="verticalAlignment">プログレスインジケーターの垂直方向の配置</param>
      <param name="fillColor">プログレスインジケーターの塗りつぶしの色</param>
      <param name="fillTextColor">プログレスインジケーターの塗りつぶし領域のテキスト色</param>
      <param name="showText">テキストを表示するかどうか</param>
      <param name="backgroundImage">背景画像</param>
      <param name="locked">ロックされているかどうか</param>
      <param name="style">プログレスインジケーターの表示タイプ</param>
      <param name="fillColor2">グラデーションを表示するよう設定されている場合のプログレスインジケーターの2つ目の色</param>
      <param name="gradMode">グラデーションを表示するよう設定されている場合のプログレスインジケーターのグラデーションスタイル</param>
      <param name="picture">ピクチャを表示するよう設定されている場合のプログレスインジケーターの画像</param>
      <param name="visualStyles">表示スタイル（XP テーマ）設定</param>
      <param name="textStyle">プログレス インジケータのテキスト スタイル</param>
      <param name="textStr">プログレス インジケータのテキスト文字列</param>
      <param name="rightToLeft">右から左へ描画するかどうかを指定します。</param>
    </member>
    <member name="M:FarPoint.Win.FpProgress.DoPaint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Int32,System.Int32,System.Int32,FarPoint.Win.ProgressOrientation,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Drawing.Color,System.Drawing.Color,System.Boolean,FarPoint.Win.Picture,System.Boolean,FarPoint.Win.ProgressStyle,FarPoint.Win.VisualStyles,FarPoint.Win.ProgressTextStyle,System.String,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode,FarPoint.Win.Picture,System.Boolean,System.Boolean)">
      <summary>プログレスインジケーターを描画します。</summary>
      <param name="g">GDI+グラフィック面</param>
      <param name="r">画像矩形</param>
      <param name="backColor">コントロールの背景色</param>
      <param name="foreColor">コントロールの前景（テキスト）色</param>
      <param name="font">テキストのフォント</param>
      <param name="value">コントロールの値</param>
      <param name="minimum">プログレスインジケーターの最小値</param>
      <param name="maximum">プログレスインジケーターの最大値</param>
      <param name="orientation">進行状況インジケータの向き</param>
      <param name="horizontalAlignment">プログレスインジケーターの水平方向の配置</param>
      <param name="verticalAlignment">プログレスインジケーターの垂直方向の配置</param>
      <param name="fillColor">プログレスインジケーターの塗りつぶしの色</param>
      <param name="fillTextColor">プログレスインジケーターの塗りつぶし領域のテキスト色</param>
      <param name="showText">テキストを表示するかどうか</param>
      <param name="backgroundImage">背景画像</param>
      <param name="locked">ロックされているかどうか</param>
      <param name="style">プログレスインジケーターの表示タイプ</param>
      <param name="fillColor2">グラデーションを表示するよう設定されている場合のプログレスインジケーターの2つ目の色</param>
      <param name="gradMode">グラデーションを表示するよう設定されている場合のプログレスインジケーターのグラデーションスタイル</param>
      <param name="picture">ピクチャを表示するよう設定されている場合のプログレスインジケーターの画像</param>
      <param name="visualStyles">表示スタイル（XP テーマ）設定</param>
      <param name="textStyle">プログレス インジケータのテキスト スタイル</param>
      <param name="textStr">プログレス インジケータのテキスト文字列</param>
      <param name="rightToLeft">右から左へ描画するかどうかを指定します。</param>
      <param name="validValue">値が有効かどうかを指定します。</param>
    </member>
    <member name="M:FarPoint.Win.FpProgress.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Font,System.Int32,System.Int32,System.Int32,FarPoint.Win.ProgressOrientation)">
      <summary>進行状況インジケータのテキストとピクチャを表示するために必要な高さと幅を計算します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="font">テキストのフォント</param>
      <param name="value">値</param>
      <param name="minimum">最小許容値</param>
      <param name="maximum">最大許容値</param>
      <param name="orientation">進行状況インジケータの向き</param>
    </member>
    <member name="M:FarPoint.Win.FpProgress.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Font,System.Int32,System.Int32,System.Int32,FarPoint.Win.ProgressOrientation,FarPoint.Win.ProgressTextStyle,System.String)">
      <summary>進行状況インジケータのテキストとピクチャを表示するために必要な高さと幅を計算します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="font">テキストのフォント</param>
      <param name="value">値</param>
      <param name="minimum">最小許容値</param>
      <param name="maximum">最大許容値</param>
      <param name="orientation">進行状況インジケータの向き</param>
      <param name="textStyle">何をテキストとして表示するかを指定します。</param>
      <param name="textStr">表示するテキスト文字列</param>
    </member>
    <member name="P:FarPoint.Win.FpProgress.BackgroundImage">
      <summary>コントロールの背景画像を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.TextStyle">
      <summary>進行状況インジケータのテキスト部分の表示方法を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.Orientation">
      <summary>進行状況インジケータの向きを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.Style">
      <summary>進行状況インジケータの表示方法を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.VisualStyles">
      <summary>プログレス インジケータを表示する際に表示スタイルを使用するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.Maximum">
      <summary>進行状況インジケータの最大値を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.Minimum">
      <summary>進行状況インジケータの最小値を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.Text">
      <summary>値を文字列として取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.Value">
      <summary>進行状況インジケータの現在値を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.FillColor">
      <summary>プログレス インジケータを描画する色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.FillColor2">
      <summary>プログレス インジケータをグラデーションで描画する際の２番目の色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.GradientMode">
      <summary>スタイルがグラデーションを表示するよう設定されている場合にプログレス インジケータに表示するグラデーション スタイルを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.Picture">
      <summary>スタイルがピクチャを表示するよう設定されている場合にプログレス インジケータに表示する画像を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.FillTextColor">
      <summary>進行状況インジケータのテキスト色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.ShowText">
      <summary>プログレス インジケータにパーセント値をテキストとして表示するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.HorizontalAlignment">
      <summary>進行状況インジケータのテキストの水平方向の配置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.VerticalAlignment">
      <summary>進行状況インジケータのテキストの垂直方向の配置を取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.RadioOrientation">
      <summary>コントロールのオプションボタンの向きを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.RadioOrientation.Horizontal">
      <summary>オプションボタンを水平方向に表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.RadioOrientation.Vertical">
      <summary>オプションボタンを垂直方向に表示します。</summary>
    </member>
    <member name="T:FarPoint.Win.RadioPictureType">
      <summary>マルチオプションボタンコントロールの個々のオプションの状態を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.RadioPictureType.PictureFalse">
      <summary>False状態のピクチャを使用します。</summary>
    </member>
    <member name="F:FarPoint.Win.RadioPictureType.PictureFalsePressed">
      <summary>Falseで押された状態のピクチャを使用します。</summary>
    </member>
    <member name="F:FarPoint.Win.RadioPictureType.PictureTrue">
      <summary>True状態のピクチャを使用します。</summary>
    </member>
    <member name="F:FarPoint.Win.RadioPictureType.PictureTruePressed">
      <summary>Trueで押された状態のピクチャを使用します。</summary>
    </member>
    <member name="T:FarPoint.Win.RadioPictureConverter">
      <summary>CheckBoxPictureオブジェクトを別の形式に変換します。</summary>
    </member>
    <member name="M:FarPoint.Win.RadioPictureConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>オブジェクトのプロパティ値のセットを指定して、 この型のオブジェクトを作成します。</summary>
      <param name="context">コンテキスト</param>
      <param name="propertyValues">プロパティ値</param>
    </member>
    <member name="M:FarPoint.Win.RadioPictureConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>このオブジェクトの値を変更するのに、CreateInstanceメソッドを呼び出して 新しい値を作成する必要があるかどうかを判定します。</summary>
    </member>
    <member name="T:FarPoint.Win.RadioPicture">
      <summary>それぞれのオプションボタンの状態を表すピクチャを表します。</summary>
    </member>
    <member name="P:FarPoint.Win.RadioPicture.Item(System.Int32)">
      <summary>それぞれのオプションボタンの状態を表すピクチャを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.RadioPicture.Item(FarPoint.Win.RadioPictureType)">
      <summary>それぞれのオプションボタンの状態を表すピクチャを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.RadioPicture.False">
      <summary>False状態に使用する画像を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.RadioPicture.FalsePressed">
      <summary>Falseで押された状態に使用する画像を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.RadioPicture.True">
      <summary>True状態に使用する画像を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.RadioPicture.TruePressed">
      <summary>Trueで押された状態に使用する画像を取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.FpMultiOption">
      <summary>FarPointのマルチオプションボタンコントロールを表します。</summary>
    </member>
    <member name="F:FarPoint.Win.FpMultiOption.DEFAULT_PICTURE_WIDTH">
      <summary>デフォルトのピクチャ（画像）の幅。</summary>
    </member>
    <member name="F:FarPoint.Win.FpMultiOption.DEFAULT_PICTURE_HEIGHT">
      <summary>デフォルトのピクチャ（画像）の高さ。</summary>
    </member>
    <member name="F:FarPoint.Win.FpMultiOption.theme">
      <summary>内部使用のみ。表示スタイルのテーマ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.#cctor">
      <summary>新しいFarPointマルチオプションボタンを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.Finalize">
      <summary>内部使用のみ。リソースを解放します。</summary>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.Dispose(System.Boolean)">
      <summary>内部使用のみ。リソースを解放します。</summary>
      <param name="disposing">破棄するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.#ctor">
            FpMultiOption base class
            <summary>新しいマルチオプションボタンコントロールを作成します。</summary></member>
    <member name="M:FarPoint.Win.FpMultiOption.OnBackgroundImageChanged(System.Object,System.EventArgs)">
      <summary>背景ピクチャが変更されたときに発生します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.OnAfterFocus(System.EventArgs)">
      <summary>AfterFocusイベントを発生させます。</summary>
      <param name="e">イベントデータを含むSystem.EventArgs。</param>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.OnThemeChanged(System.Object,System.EventArgs)">
      <summary>VisualStyleTheme の ThemeChanged イベントを処理します。</summary>
      <param name="sender">オブジェクト</param>
      <param name="e">EventArgs</param>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.OnValueChanged(System.EventArgs)">
      <summary>ValueChangedイベントを発生させます。</summary>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>KeyUpイベントを処理します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.ProcessMnemonic(System.Char)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.IsInputChar(System.Char)">
      <summary>入力が文字であるかどうかを判定します。</summary>
      <param name="charCode">文字コード</param>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.ProcessDialogKey(System.Windows.Forms.Keys)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.OnGotFocus(System.EventArgs)">
      <summary>System.Windows.Forms.Control.GotFocusイベントを発生させます。</summary>
      <param name="e">イベントデータを含むSystem.EventArgs。</param>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseDownイベントを処理します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseMoveイベントを処理します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.OnMouseLeave(System.EventArgs)">
      <summary>MouseLeaveイベントを処理します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseUpイベントを処理します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.DoLayout(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.ButtonTextAlign,FarPoint.Win.RadioOrientation,FarPoint.Win.RadioPicture,System.Collections.ArrayList,System.Drawing.Rectangle[]@,System.Drawing.Rectangle[]@,System.Drawing.Rectangle[]@,System.Int32,System.Int32,System.Boolean)">
      <summary>マルチオプションボタンのレイアウト矩形を計算します。</summary>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Font,FarPoint.Win.ButtonTextAlign,FarPoint.Win.RadioOrientation,FarPoint.Win.RadioPicture,System.Collections.ArrayList)">
      <summary>デフォルトの幅と高さを持つコントロールで（オプションボタンの）テキストと ピクチャを表示するために必要な高さと幅を計算します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="font">フォント</param>
      <param name="nAlign">テキスト配置</param>
      <param name="nOrientation">オプションボタンのリストの向き（垂直または水平方向）</param>
      <param name="radioPicture">オプションボタンのピクチャ（画像）</param>
      <param name="radioList">オプションリストの配列</param>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Font,FarPoint.Win.ButtonTextAlign,FarPoint.Win.RadioOrientation,FarPoint.Win.RadioPicture,System.Collections.ArrayList,System.Int32,System.Int32)">
      <summary>コントロールの（オプションボタンの）テキストとピクチャを表示するために必要な 高さと幅を計算します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="font">フォント</param>
      <param name="nAlign">テキスト配置</param>
      <param name="nOrientation">オプションボタンのリストの向き（垂直または水平方向）</param>
      <param name="radioPicture">オプションボタンのピクチャ（画像）</param>
      <param name="radioList">オプションリストの配列</param>
      <param name="pictWidth">オプションボタンのピクチャの幅</param>
      <param name="pictHeight">オプションボタンのピクチャの高さ</param>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>背景を描画します。</summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>描画イベントを処理します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.DoPaint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.ButtonTextAlign,FarPoint.Win.RadioOrientation,FarPoint.Win.RadioPicture,System.Collections.ArrayList,System.Int32,System.Int32,System.Boolean,System.Boolean,FarPoint.Win.Picture,System.Boolean)">
      <summary>デフォルトの幅と高さを持つマルチオプションボタンを描画します。</summary>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.DoPaint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.ButtonTextAlign,FarPoint.Win.RadioOrientation,FarPoint.Win.RadioPicture,System.Collections.ArrayList,System.Int32,System.Int32,System.Boolean,System.Boolean,FarPoint.Win.Picture,System.Boolean,System.Int32,System.Int32,System.Int32,FarPoint.Win.VisualStyles,System.Boolean)">
      <summary>マルチオプションボタンを描画します。</summary>
    </member>
    <member name="E:FarPoint.Win.FpMultiOption.ValueChanged">
      <summary>ユーザーが別のオプションを選択（値を変更）したときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.FpMultiOption.AfterFocus">
      <summary>コントロールがフォーカスを受け取った後に発生します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpMultiOption.BackgroundImage">
      <summary>オプションボタンコントロールに使用する背景画像を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpMultiOption.VisualStyles">
      <summary>表示スタイルを使用するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpMultiOption.ItemData">
      <summary>項目データリストを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpMultiOption.UseMnemonic">
      <summary>特殊キー（ショートカットキー）を項目の選択に使用できるかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpMultiOption.TextAlign">
      <summary>ピクチャを基準とするテキストの配置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpMultiOption.Orientation">
      <summary>マルチオプションボタンの向きを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpMultiOption.Picture">
      <summary>オプションボタンのそれぞれの状態に使用するピクチャを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpMultiOption.List">
      <summary>個々のオプションボタンのリストを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpMultiOption.Value">
      <summary>マルチオプションボタンから現在選択されているオプションを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpMultiOption.HorizontalAlignment">
      <summary>オプションを水平方向に配置する方法を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpMultiOption.VerticalAlignment">
      <summary>オプションを垂直方向に配置する方法を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpMultiOption.PictureWidth">
      <summary>コントロールのピクチャ（画像）の幅を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpMultiOption.PictureHeight">
      <summary>コントロールのピクチャ（画像）の高さを取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.SliderOrientation">
      <summary>スライダの向きを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.SliderOrientation.Horizontal">
      <summary>スライダを水平方向に表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.SliderOrientation.Vertical">
      <summary>スライダを垂直方向に表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.SliderOrientation.HorizontalRightToLeft">
      <summary>スライダを水平方向に右から左へ表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.SliderOrientation.VerticalBottomToTop">
      <summary>スライダを垂直方向に下から上へ表示します。</summary>
    </member>
    <member name="T:FarPoint.Win.FpSlider">
      <summary>FarPointのスライダ（トラックバー）コントロールを表します。</summary>
    </member>
    <member name="F:FarPoint.Win.FpSlider.theme">
      <summary>内部使用のみ。表示スタイルのテーマ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpSlider.#cctor">
      <summary></summary>
    </member>
    <member name="M:FarPoint.Win.FpSlider.Finalize">
      <summary></summary>
    </member>
    <member name="M:FarPoint.Win.FpSlider.Dispose(System.Boolean)">
      <summary></summary>
      <param name="disposing"></param>
    </member>
    <member name="M:FarPoint.Win.FpSlider.#ctor">
      <summary>新しいFarPointスライダ（トラックバー）コントロールを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.FpSlider.OnBackgroundImageChanged(System.Object,System.EventArgs)">
      <summary>背景ピクチャが変更されたときに発生します。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.FpSlider.OnThemeChanged(System.Object,System.EventArgs)">
      <summary>VisualStyleTheme の ThemeChanged イベントを処理します。</summary>
      <param name="sender">オブジェクト</param>
      <param name="e">EventArgs</param>
    </member>
    <member name="M:FarPoint.Win.FpSlider.OnAfterFocus(System.EventArgs)">
      <summary>AfterFocusイベントを発生させます。</summary>
      <param name="e">イベントデータを含むSystem.EventArgs</param>
    </member>
    <member name="M:FarPoint.Win.FpSlider.IsInputKey(System.Windows.Forms.Keys)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpSlider.OnValueChanged(System.EventArgs)">
      <summary>ValueChangedイベントを発生させます。</summary>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.FpSlider.OnError(System.EventArgs)">
      <summary>Error イベントを発生させます。</summary>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.FpSlider.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpSlider.OnMouseEnter(System.EventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpSlider.OnGotFocus(System.EventArgs)">
      <summary>System.Windows.Forms.Control.GotFocusイベントを発生させます。</summary>
      <param name="e">イベントデータを含むSystem.EventArgs。</param>
    </member>
    <member name="M:FarPoint.Win.FpSlider.OnMouseLeave(System.EventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpSlider.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpSlider.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpSlider.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpSlider.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>内部使用のみ。背景を描画します。</summary>
    </member>
    <member name="M:FarPoint.Win.FpSlider.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.FpSlider.DoPaint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Boolean,System.Drawing.Color,FarPoint.Win.SliderOrientation,System.Int32,System.Int32,System.Int32,FarPoint.Win.Picture,System.Int32,System.Int32,FarPoint.Win.Picture,System.Drawing.Color,FarPoint.Win.Picture,System.Boolean,System.Boolean,System.Boolean,FarPoint.Win.VisualStyles,System.Drawing.Color,System.Boolean,System.Int32)">
      <summary>スライダーコントロールを描画します。</summary>
      <param name="g">GDI+グラフィック描画面</param>
      <param name="r">画像矩形</param>
      <param name="backColor">背景色</param>
      <param name="foreColor">前景（テキスト）色</param>
      <param name="value">スライダーコントロールの値</param>
      <param name="focus">コントロールがフォーカスを持っているかどうか</param>
      <param name="knobColor">スライダーのつまみの色</param>
      <param name="orient">スライダの向き</param>
      <param name="minimum">スライダーの最小値</param>
      <param name="maximum">スライダーの最大値</param>
      <param name="tickSpacing">スライダーの目盛の間隔</param>
      <param name="backpict">スライダーの背景ピクチャ</param>
      <param name="knobWidth">スライダーのつまみの幅（ピクセル単位）</param>
      <param name="trackWidth">スライダー全体のトラック幅</param>
      <param name="knobPicture">スライダーのつまみのピクチャ（画像）</param>
      <param name="trackColor">スライダートラックの色</param>
      <param name="trackPicture">スライダートラックのピクチャ（画像）</param>
      <param name="bLocked">コントロールがロックされているかどうか</param>
      <param name="valueIsAdjusting">スライダーのつまみが移動中の場合はTrue</param>
      <param name="ptInKnob">マウスがつまみの上にある場合はTrue</param>
      <param name="tickColor">スライダーの目盛の色</param>
      <param name="rightToLeft">右から左へ描画する場合はTrue</param>
      <param name="tickLength">スライダーの目盛の幅</param>
      <param name="visualStyles">ビジュアルスタイルをコントロールに適用する方法を指定します。</param>
    </member>
    <member name="M:FarPoint.Win.FpSlider.GetPreferredSize(FarPoint.Win.SliderOrientation,System.Int32,System.Int32,System.Int32)">
      <summary>指定した向きと値を使用してスライダー全体を表示するのに必要なサイズを取得します。</summary>
      <param name="orientation">スライダの向き</param>
      <param name="minimum">スライダの最小値</param>
      <param name="maximum">スライダの最大値</param>
      <param name="tickSpacing">目盛の間隔</param>
    </member>
    <member name="M:FarPoint.Win.FpSlider.IsPointInKnob(System.Int32,System.Int32,System.Drawing.Rectangle,System.Int32,FarPoint.Win.SliderOrientation,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>ポイントがスライダーのノブの中にあるかどうかを判定します。</summary>
      <param name="x">ポイントのX座標</param>
      <param name="y">ポイントのＹ座標</param>
      <param name="r">画像矩形</param>
      <param name="value">値</param>
      <param name="orientation">スライダの向き</param>
      <param name="minimum">最小値</param>
      <param name="maximum">最大値</param>
      <param name="knobWidth">スライダのつまみの幅</param>
      <param name="trackWidth">スライダのトラックの幅</param>
      <param name="tickLength">スライダーの目盛の幅</param>
    </member>
    <member name="M:FarPoint.Win.FpSlider.WndProc(System.Windows.Forms.Message@)">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="E:FarPoint.Win.FpSlider.AfterFocus">
      <summary>コントロールがフォーカスを受け取った後に発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.FpSlider.ValueChanged">
      <summary>ユーザーがスライダを移動して値を変更したときに発生します。</summary>
    </member>
    <member name="E:FarPoint.Win.FpSlider.Error">
      <summary>エラーが発生したときに発生します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.BackgroundImage">
      <summary>スライダーの背景画像を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.VisualStyles">
      <summary>表示スタイルを使用するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.TrackPicture">
      <summary>スライダのトラック領域内に表示するピクチャを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.TrackColor">
      <summary>スライダーのトラックの色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.KnobPicture">
      <summary>スライダーのノブに表示するピクチャを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.TickLength">
      <summary>スライダーの目盛の幅を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.KnobWidth">
      <summary>スライダーのノブの幅を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.TrackWidth">
      <summary>スライダーのトラックの幅を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.KnobColor">
      <summary>スライダーのノブの色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.TickColor">
      <summary>スライダーの目盛の色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.Value">
      <summary>スライダーの値を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.Minimum">
      <summary>スライダの最小値を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.Text">
      <summary>値を文字列として取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.Maximum">
      <summary>スライダの最大値を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.Orientation">
      <summary>スライダの向きを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.TickSpacing">
      <summary>スライダーの目盛の間隔を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.ChangeOnFocus">
      <summary>トラックの初回のクリック時にスライダのつまみを移動するかどうかを取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.StringSearch">
      <summary>正規表現を使用した文字列検索機能を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.StringSearch.#ctor">
      <summary>新しい文字列検索を作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.StringSearch.#ctor(System.String)">
      <summary>指定した検索パターンを使用して、新しい文字列検索を作成します。</summary>
      <param name="pattern">検索パターン</param>
    </member>
    <member name="M:FarPoint.Win.StringSearch.BuildRegExprPattern(System.String)">
      <summary>"*" と "?" のワイルドカード文字を使用するパターン文字列から正規表現パターン文字列を構築します。</summary>
      <param name="pattern">パターン文字列</param>
    </member>
    <member name="M:FarPoint.Win.StringSearch.Find(System.String,System.Int32)">
      <summary>提供されたパターンに一致する連続文字を値文字列内の指定したインデックス以降で検索します。</summary>
      <param name="value"></param>
      <param name="startIndex"></param>
      <returns></returns>
    </member>
    <member name="P:FarPoint.Win.StringSearch.SearchPattern">
      <summary>検索パターンを設定します。注意：これは正規表現パターンではありません。</summary>
    </member>
    <member name="P:FarPoint.Win.StringSearch.Greedy">
      <summary>正規表現の指定時に最長一致検索を行うかどうかを取得または設定します。たとえば、"FarPoint Technologies" の文字列を "F*o" パターンで検索する場合、最長一致検索を行わなければ、検索結果は "FarPo" になります。最長一致検索を行うと、検索結果は "FarPoint Techno" になります。</summary>
    </member>
    <member name="P:FarPoint.Win.StringSearch.RegularExpressionPattern">
      <summary>検索に使用する正規表現パターンを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.StringSearch.MatchExact">
      <summary>完全に一致する必要があるかどうかを取得または設定します。完全一致は、最初と最後が空白または行末で区切られた文字列の一致です。注意：このプロパティは、RegularExpressionPattern プロパティを使用してパターンを設定した場合には検索パターンに影響しません。</summary>
    </member>
    <member name="P:FarPoint.Win.StringSearch.MatchIndex">
      <summary>一致したサブ文字列の最初の文字のインデックスを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.StringSearch.MatchLength">
      <summary>一致したサブ文字列の長さを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.StringSearch.MatchString">
      <summary>一致したサブ文字列を取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.ISelectSupport">
      <summary>選択をサポートするインタフェース。</summary>
    </member>
    <member name="M:FarPoint.Win.ISelectSupport.Select(System.Boolean,System.Boolean)">
      <summary>選択します。</summary>
      <param name="directed">方向が指定された選択かどうか</param>
      <param name="forward">次に進んで選択するかどうか</param>
    </member>
    <member name="T:FarPoint.Win.EditMessage">
      <summary>編集メッセージを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.GetSel">
      <summary>GetSelメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.SetSel">
      <summary>SetSelメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.GetRect">
      <summary>GetRectメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.SetRect">
      <summary>SetRectメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.SetRectNP">
      <summary>SetRectNPメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.Scroll">
      <summary>Scrollメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.LineScroll">
      <summary>LineScrollメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.ScrollCaret">
      <summary>ScrollCaretメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.GetModify">
      <summary>GetModifyメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.SetModify">
      <summary>SetModifyメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.GetLineCount">
      <summary>GetLineCountメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.LineIndex">
      <summary>LineIndexメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.SetHandle">
      <summary>SetHandleメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.GetHandle">
      <summary>GetHandleメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.GetThumb">
      <summary>GetThumbメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.LineLength">
      <summary>LineLengthメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.ReplaceSel">
      <summary>ReplaceSelメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.GetLine">
      <summary>GetLineメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.LimitText">
      <summary>LimitTextメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.CanUndo">
      <summary>CanUndoメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.Undo">
      <summary>Undoメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.FmtLines">
      <summary>FmtLinesメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.LineFromChar">
      <summary>LineFromCharメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.SetTabStops">
      <summary>SetTabStopsメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.SetPasswordChar">
      <summary>SetPasswordCharメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.EmptyUndoBuffer">
      <summary>EmptyUndoBufferメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.GetFirstVisibleLine">
      <summary>GetFirstVisibleLineメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.SetReadOnly">
      <summary>SetReadOnlyメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.SetWordBreakProc">
      <summary>SetWordBreakProcメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.GetWordBreakProc">
      <summary>GetWordBreakProcメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.GetPasswordChar">
      <summary>GetPasswordCharメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.SetMargins">
      <summary>SetMarginsメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.GetMargins">
      <summary>GetMarginsメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.GetLimitText">
      <summary>GetLimitTextメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.PosFromChar">
      <summary>PosFromCharメッセージ。</summary>
    </member>
    <member name="F:FarPoint.Win.EditMessage.CharFromPos">
      <summary>CharFromPosメッセージ。</summary>
    </member>
    <member name="T:FarPoint.Win.EditModeCursorPosition">
      <summary>編集コントロールがフォーカスを受け取るときのポインタの位置を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.EditModeCursorPosition.MouseLocation">
      <summary>テキストを選択せずにポインタをポインタデバイスの位置に 配置します。</summary>
    </member>
    <member name="F:FarPoint.Win.EditModeCursorPosition.FirstInputPosition">
      <summary>テキストを選択せずに、ポインタをコントロール内の 最初の入力位置に配置します。</summary>
    </member>
    <member name="F:FarPoint.Win.EditModeCursorPosition.End">
      <summary>テキストを選択せずに、ポインタをコントロールの テキストの最後に配置します。</summary>
    </member>
    <member name="F:FarPoint.Win.EditModeCursorPosition.LastKnownPosition">
      <summary>テキストを選択せずに、コントロールがフォーカスを失う直前の位置に ポインタを配置します。</summary>
    </member>
    <member name="F:FarPoint.Win.EditModeCursorPosition.SelectAll">
      <summary>すべてのテキストを選択し、ポインタをコントロールの テキストの最後に配置します。</summary>
    </member>
    <member name="T:FarPoint.Win.NumberNegativeFormat">
      <summary>数値編集コントロールの負の値の書式を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.NumberNegativeFormat.UseRegional">
      <summary>Windowsの地域設定を使用して負号と値を表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.NumberNegativeFormat.Parentheses">
      <summary>コントロールの負号と値をカッコ内に表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.NumberNegativeFormat.NegativeSignBefore">
      <summary>コントロールの値の前に負号を表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.NumberNegativeFormat.NegativeSignBeforeWithSpace">
      <summary>コントロールの値の前に半角スペースを１つ入れて負号を表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.NumberNegativeFormat.NegativeSignAfter">
      <summary>コントロールの値の後ろに負号を表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.NumberNegativeFormat.NegativeSignAfterWithSpace">
      <summary>コントロールの値の後ろに半角スペースを１つ入れて負号を表示します。</summary>
    </member>
    <member name="T:FarPoint.Win.UserEntry">
      <summary>データが編集コントロールに提供されたときに検証するかどうかを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.UserEntry.Formatted">
      <summary>データがコントロールに提供されたときに確認します。</summary>
    </member>
    <member name="F:FarPoint.Win.UserEntry.FreeFormat">
      <summary>データがコントロールに提供されたときに確認しません。</summary>
    </member>
    <member name="T:FarPoint.Win.ControlType">
      <summary>コントロールの内容の処理に関する許可設定を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.ControlType.Normal">
      <summary>デフォルト設定に基づいて内容の変更を許可します。</summary>
    </member>
    <member name="F:FarPoint.Win.ControlType.ReadOnly">
      <summary>内容の変更は許可しませんが、コピーなど一部の操作を許可します。</summary>
    </member>
    <member name="F:FarPoint.Win.ControlType.Static">
      <summary>ラベルのように内容の表示のみを許可し、フォーカスを許可しません。</summary>
    </member>
    <member name="F:FarPoint.Win.ControlType.ButtonEdit">
      <summary>ボタンを使用した内容の変更のみを許可します。</summary>
    </member>
    <member name="T:FarPoint.Win.ButtonAlign">
      <summary>編集コントロールのボタンの配置を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.ButtonAlign.Right">
      <summary>ボタンをコントロールの右辺に配置します。</summary>
    </member>
    <member name="F:FarPoint.Win.ButtonAlign.Left">
      <summary>ボタンをコントロールの左辺に配置します。</summary>
    </member>
    <member name="T:FarPoint.Win.ButtonStyle">
      <summary>編集コントロールで表示するボタンのスタイルを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.ButtonStyle.None">
      <summary>ボタンを表示しません。</summary>
    </member>
    <member name="F:FarPoint.Win.ButtonStyle.Spin">
      <summary>値のインクリメントとデクリメントを行う２つのスピンボタンを表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.ButtonStyle.PopUp">
      <summary>ダイアログ、ポップアップカレンダー、または時計を開く、省略記号（...）ボタンを表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.ButtonStyle.DropDown">
      <summary>ドロップダウンリスト、ドロップダウンカレンダ、または時計のドロップダウンの矢印のボタンを表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.ButtonStyle.Slide">
      <summary>縦長のデータを上下にスクロールするための２つのボタンを表示します。</summary>
    </member>
    <member name="T:FarPoint.Win.InvalidOption">
      <summary>編集コントロールがフォーカスを失ったときに無効なデータを処理する方法を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.InvalidOption.ShowData">
      <summary>常にコントロールの無効なデータを表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.InvalidOption.HideData">
      <summary>コントロールがフォーカスを失ったときに無効なデータを非表示にします（フォーカスが戻ると無効なデータは再表示されます）。</summary>
    </member>
    <member name="F:FarPoint.Win.InvalidOption.ClearData">
      <summary>コントロールがフォーカスを失ったときにコントロールから無効なデータをクリアします。</summary>
    </member>
    <member name="T:FarPoint.Win.SpinUpEventArgs">
            Derives from System.EventArgs.
            <summary>SpinUpイベントのイベントデータを表します。</summary></member>
    <member name="M:FarPoint.Win.SpinUpEventArgs.#ctor">
      <summary>新しいSpinUpEventArgsオブジェクトを構築します。</summary>
    </member>
    <member name="P:FarPoint.Win.SpinUpEventArgs.Cancel">
      <summary>デフォルトの処理をキャンセルするかどうかを指定する値を取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.SpinUpEventHandler">
            Delegate declaration.
            <summary>SpinUpイベントを処理する定義済みメソッドを表します。</summary></member>
    <member name="T:FarPoint.Win.SpinDownEventArgs">
            Derives from System.EventArgs.
            <summary>SpinDownイベントのイベントデータを表します。</summary></member>
    <member name="M:FarPoint.Win.SpinDownEventArgs.#ctor">
      <summary>新しいSpinDownEventArgsオブジェクトを構築します。</summary>
    </member>
    <member name="P:FarPoint.Win.SpinDownEventArgs.Cancel">
      <summary>デフォルトの処理をキャンセルするかどうかを指定する値を取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.SpinDownEventHandler">
            Delegate declaration.
            <summary>SpinDownイベントを処理する定義済みメソッドを表します。</summary></member>
    <member name="T:FarPoint.Win.PopUpEventArgs">
            Derives from System.EventArgs.
            <summary>PopUpイベントのイベントデータを表します。</summary></member>
    <member name="M:FarPoint.Win.PopUpEventArgs.#ctor">
      <summary>新しいPopUpEventArgsオブジェクトを構築します。</summary>
    </member>
    <member name="P:FarPoint.Win.PopUpEventArgs.Cancel">
      <summary>デフォルトの処理をキャンセルするかどうかを指定する値を取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.PopUpEventHandler">
            Delegate declaration.
            <summary>PopUpイベントを処理する定義済みメソッドを表します。</summary></member>
    <member name="T:FarPoint.Win.DropDownEventArgs">
            Derives from System.EventArgs.
            <summary>DropDownイベントのイベントデータを表します。</summary></member>
    <member name="M:FarPoint.Win.DropDownEventArgs.#ctor">
      <summary>新しいDropDownEventArgsオブジェクトを構築します。</summary>
    </member>
    <member name="P:FarPoint.Win.DropDownEventArgs.Cancel">
      <summary>デフォルトの処理をキャンセルするかどうかを指定する値を取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.DropDownEventHandler">
            Delegate declaration.
            <summary>DropDownイベントを処理する定義済みメソッドを表します。</summary></member>
    <member name="T:FarPoint.Win.SlideLeftEventArgs">
      <summary>SlideLeftイベントのイベントデータを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.SlideLeftEventArgs.#ctor">
      <summary>新しいSlideLeftEventArgsオブジェクトを構築します。</summary>
    </member>
    <member name="P:FarPoint.Win.SlideLeftEventArgs.Cancel">
      <summary>デフォルトの処理をキャンセルするかどうかを指定する値を取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.SlideLeftEventHandler">
            Delegate declaration.
            <summary>SlideLeftイベントを処理する定義済みメソッドを表します。</summary></member>
    <member name="T:FarPoint.Win.SlideRightEventArgs">
            SlideRight event
            Derives from System.EventArgs.
            <summary>SlideRightイベントのイベントデータを表します。</summary></member>
    <member name="M:FarPoint.Win.SlideRightEventArgs.#ctor">
      <summary>新しいSlideRightEventArgsオブジェクトを構築します。</summary>
    </member>
    <member name="P:FarPoint.Win.SlideRightEventArgs.Cancel">
      <summary>デフォルトの処理をキャンセルするかどうかを指定する値を取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.SlideRightEventHandler">
            Delegate declaration.
            <summary>SlideRightイベントを処理する定義済みメソッドを表します。</summary></member>
    <member name="T:FarPoint.Win.InvalidDataEventHandler">
            Delegate declaration.
            <summary>InvalidDataイベントを処理する定義済みメソッドを表します。</summary></member>
    <member name="T:FarPoint.Win.SuperEditPreview">
      <summary>編集コントロールのプレビューを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditPreview.#ctor">
      <summary>新しいスーパー編集プレビューを作成します。</summary>
    </member>
    <member name="T:FarPoint.Win.InputTextBox">
      <summary>編集コントロールのテキストエディタを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.InputTextBox.ProcessAlphaNumericSysKey(System.Windows.Forms.Message@)">
      <summary>内部使用のみ。英数字システムキーを処理します。</summary>
      <param name="msg">メッセージ</param>
    </member>
    <member name="M:FarPoint.Win.InputTextBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
      <summary>内部使用のみ。基本的な境界を設定します。</summary>
      <param name="x">境界の開始X座標</param>
      <param name="y">境界の開始Y座標</param>
      <param name="width">境界の幅</param>
      <param name="height">境界の高さ</param>
      <param name="specified">指定された境界</param>
    </member>
    <member name="M:FarPoint.Win.InputTextBox.IsInputKey(System.Windows.Forms.Keys)">
      <summary>内部使用のみ。入力キーかどうかを判定します。</summary>
      <param name="keyData">キーデータ</param>
    </member>
    <member name="M:FarPoint.Win.InputTextBox.IsInputChar(System.Char)">
      <summary>文字がコントロールによって認識可能な入力文字かどうかを判定します。</summary>
      <param name="charCode">チェックする文字</param>
      <returns>事前処理なしでコントロールによる処理が可能な文字の場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.InputTextBox.WndProc(System.Windows.Forms.Message@)">
      <summary>内部使用のみ。ウィンドウを処理します。</summary>
      <param name="m">メッセージ</param>
    </member>
    <member name="M:FarPoint.Win.InputTextBox.#ctor">
      <summary>コントロールのテキストエディタ（入力テキストボックス）を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.InputTextBox.OnUserError(FarPoint.Win.SuperEdit.UserErrorEventArgs)">
      <summary>ユーザーエラーが発生したときに発生します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.InputTextBox.OnAdvance(System.EventArgs)">
      <summary>フォーカスが移動したときに発生します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.InputTextBox.ProcessKeyMessage(System.Windows.Forms.Message@)">
      <summary>キーメッセージを処理します。</summary>
      <param name="msg">メッセージ</param>
    </member>
    <member name="M:FarPoint.Win.InputTextBox.SEditProcessWmCharMsg(System.Windows.Forms.Message@)">
      <summary>内部使用のみ。WmCharメッセージを処理します。</summary>
      <param name="msg">メッセージ</param>
    </member>
    <member name="M:FarPoint.Win.InputTextBox.SEditProcessWmKeyUpMsg(System.Windows.Forms.Message@)">
      <summary>内部使用のみ。Advance（ArrowKeys）についてのみ、WmKeyUpメッセージを自動的に処理します。</summary>
      <param name="msg">メッセージ</param>
    </member>
    <member name="M:FarPoint.Win.InputTextBox.SEditProcessWmKeyDownMsg(System.Windows.Forms.Message@)">
      <summary>内部使用のみ。WmKeyDownメッセージを処理します。</summary>
      <param name="msg">メッセージ</param>
    </member>
    <member name="M:FarPoint.Win.InputTextBox.SetTextNoUndo(System.String)">
      <summary>テキストエディタをUndoなしに設定します。</summary>
      <param name="stringIn">文字列</param>
    </member>
    <member name="M:FarPoint.Win.InputTextBox.OnLostFocus(System.EventArgs)">
      <summary>フォーカスが失われたときに発生します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.InputTextBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>描画されたときに発生します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.InputTextBox.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>背景が描画されたときに発生します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.InputTextBox.OnGotFocus(System.EventArgs)">
      <summary>フォーカスを受け取ったときに発生します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="P:FarPoint.Win.InputTextBox.AllowClipboardKeys">
      <summary>内部使用のみ。ユーザーにクリップボードショートカットキーの使用を許可するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.InputTextBox.EditModeCursorPosition">
      <summary>フォーカスを受け取ったときのコントロールのポインタの位置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.InputTextBox.LastCaretPos">
      <summary>最後のカレット（^）位置を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.InputTextBox.Value">
      <summary>コントロールの値を取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.SEditButtonElement">
      <summary>編集コントロールのボタン要素を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.SEditButtonElement.ToggleState">
      <summary>ボタンの状態を切り替えます。</summary>
    </member>
    <member name="T:FarPoint.Win.SEditButton">
      <summary>編集コントロールのボタンを表します。</summary>
    </member>
    <member name="F:FarPoint.Win.SEditButton.dropDown">
      <summary>内部使用のみ。ドロップダウンボタン。</summary>
    </member>
    <member name="M:FarPoint.Win.SEditButton.#ctor">
      <summary>編集コントロールの新しいボタンを構築します。</summary>
    </member>
    <member name="M:FarPoint.Win.SEditButton.InitializeButtons">
      <summary>コントロール要素を初期化します。</summary>
    </member>
    <member name="M:FarPoint.Win.SEditButton.PaintBackColor(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>背景色を描画します。</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.SEditButton.UpdateClientArea">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.SEditButton.AdjustClientArea">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.SEditButton.ToggleState">
      <summary>コントロールの状態を切り替えます。</summary>
    </member>
    <member name="M:FarPoint.Win.SEditButton.SpecialResetState">
      <summary>コントロールを特定の状態にリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.SEditButton.DoMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>マウスアップ処理を処理します。</summary>
    </member>
    <member name="M:FarPoint.Win.SEditButton.SpinUpProc">
      <summary>内部使用のみ。SpinUpスレッドプロシージャ。</summary>
    </member>
    <member name="M:FarPoint.Win.SEditButton.SpinDownProc">
      <summary>内部使用のみ。SpinDownスレッドプロシージャ。</summary>
    </member>
    <member name="M:FarPoint.Win.SEditButton.OnSpinUpMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>スピンダウン時にマウスボタンが押されたときに発生します。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.SEditButton.OnSpinDownMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>スピンダウン時にマウスボタンが押されたときに発生します。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.SEditButton.OnSpinUpMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>スピンアップ時にマウスボタンが押されたときに発生します。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.SEditButton.OnSpinDownMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>スピンダウン時にマウスボタンが離されたときに発生します。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.SEditButton.OnDropDownMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>ドロップダウン時にマウスボタンが押されたときに発生します。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.SEditButton.OnPopUpMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>ポップアップ時にマウスボタンが押されたときに発生します。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.SEditButton.SlideLeftProc">
      <summary>内部使用のみ。SlideLeftスレッドプロシージャ。</summary>
    </member>
    <member name="M:FarPoint.Win.SEditButton.SlideRightProc">
      <summary>内部使用のみ。SlideRightスレッドプロシージャ。</summary>
    </member>
    <member name="M:FarPoint.Win.SEditButton.OnSlideLeftMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>左へのスライド時にマウスボタンが押されたときに発生します。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.SEditButton.OnSlideRightMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>右へのスライド時にマウスボタンが押されたときに発生します。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.SEditButton.OnSlideLeftMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>左へのスライド時にマウスボタンが離されたときに発生します。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.SEditButton.OnSlideRightMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>右へのスライド時にマウスボタンが離されたときに発生します。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.SEditButton.OnPopUpMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>ポップアップ時にマウスボタンが離されたときに発生します。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.SEditButton.OnDropDownMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>ドロップダウン時にマウスボタンが離されたときに発生します。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.SEditButton.Dispose">
      <summary>リソースを破棄して解放します。</summary>
    </member>
    <member name="M:FarPoint.Win.SEditButton.Dispose(System.Boolean)">
      <summary>リソースを破棄して解放します。</summary>
      <param name="disposing">破棄するかどうか</param>
    </member>
    <member name="P:FarPoint.Win.SEditButton.BackColor">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.SEditButton.SpinVisible">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.SEditButton.PopupVisible">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.SEditButton.VisualStyles">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.SEditButton.DropdownVisible">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.SEditButton.SlideVisible">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="P:FarPoint.Win.SEditButton.IsDisposed">
      <summary>内部使用のみ。破棄されたかどうかを取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.SEditButton.spinUpDelegate">
      <summary>内部使用のみ。スピンアップを処理します。</summary>
      <param name="spinButton">スピンボタン</param>
    </member>
    <member name="T:FarPoint.Win.SEditButton.spinDownDelegate">
      <summary>内部使用のみ。スピンダウンを処理します。</summary>
      <param name="spinButton">スピンボタン</param>
    </member>
    <member name="T:FarPoint.Win.SEditButton.slideLeftDelegate">
      <summary>内部使用のみ。右へのスライドを処理します。</summary>
      <param name="slideButton">スライドボタン</param>
    </member>
    <member name="T:FarPoint.Win.SEditButton.slideRightDelegate">
      <summary>内部使用のみ。右へのスライドを処理します。</summary>
      <param name="slideButton">スライドボタン</param>
    </member>
    <member name="T:FarPoint.Win.NavButton">
      <summary>ナビゲーションボタンを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.NavButton.Home">
      <summary>最初のタブに移動します。</summary>
    </member>
    <member name="F:FarPoint.Win.NavButton.Previous">
      <summary>前のタブに移動します。</summary>
    </member>
    <member name="F:FarPoint.Win.NavButton.Next">
      <summary>次のタブに移動します。</summary>
    </member>
    <member name="F:FarPoint.Win.NavButton.End">
      <summary>最後のタブに移動します。</summary>
    </member>
    <member name="T:FarPoint.Win.TabManagerChangeAction">
      <summary>タブの変更アクションを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.TabManagerChangeAction.RefreshAll">
      <summary>すべてを更新します。</summary>
    </member>
    <member name="F:FarPoint.Win.TabManagerChangeAction.RefreshAllTabs">
      <summary>すべてのタブを更新します。</summary>
    </member>
    <member name="F:FarPoint.Win.TabManagerChangeAction.RefreshTabs">
      <summary>タブを更新します。</summary>
    </member>
    <member name="F:FarPoint.Win.TabManagerChangeAction.RefreshTab">
      <summary>タブを更新します。</summary>
    </member>
    <member name="F:FarPoint.Win.TabManagerChangeAction.SelectTab">
      <summary>タブを選択します。</summary>
    </member>
    <member name="T:FarPoint.Win.TabStripSelectEventArgs">
      <summary>TabStripSelectイベントのイベントデータを表します。</summary>
    </member>
    <member name="P:FarPoint.Win.TabStripSelectEventArgs.SelectedTab">
      <summary>選択されたタブのインデックスを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.TabStripSelectEventArgs.Cancel">
      <summary>キャンセルするかどうかを取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.TabStripSelectEventHandler">
      <summary>TabStripSelectイベントを処理するデリゲート。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータ</param>
    </member>
    <member name="T:FarPoint.Win.TabStripNavigateEventArgs">
      <summary>TabStripNavigateイベントのイベントデータを表します。</summary>
    </member>
    <member name="P:FarPoint.Win.TabStripNavigateEventArgs.PreviousLeftTab">
      <summary>前の左タブを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.TabStripNavigateEventArgs.NewLeftTab">
      <summary>次の左タブを取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.TabStripNavigateEventHandler">
      <summary>TabStripNavigateイベントを処理するデリゲート。</summary>
      <param name="sender"></param>
      <param name="e"></param>
    </member>
    <member name="T:FarPoint.Win.TabOrientation">
      <summary>タブを表示する場所を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.TabOrientation.Top">
      <summary>タブを上部に表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.TabOrientation.Bottom">
      <summary>タブを下部に表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.TabOrientation.Left">
      <summary>タブを左側に表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.TabOrientation.Right">
      <summary>タブを右側に表示します。</summary>
    </member>
    <member name="T:FarPoint.Win.DefaultTabShape">
      <summary>デフォルトのタブの形状を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.DefaultTabShape.Square">
      <summary>正方形のタブを表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.DefaultTabShape.Rounded">
      <summary>角丸のタブを表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.DefaultTabShape.Angled">
      <summary>傾斜したタブを表示します。</summary>
    </member>
    <member name="T:FarPoint.Win.TabStrip">
      <summary>タブストリップを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.#ctor">
      <summary>新しいTabStripオブジェクトを初期化します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.#ctor(FarPoint.Win.ITabManager)">
      <summary>新しいTabStripオブジェクトを初期化します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.Init">
      <summary>初期化します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.InitializeComponent">
      <summary>デザイナサポートの必須メソッド。このメソッドの内容は コードエディタで変更しないでください。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.GetTabPicture(System.Int32)">
      <summary>指定したタブに表示するピクチャを取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.SetTabPicture(System.Int32,FarPoint.Win.Picture)">
      <summary>指定したタブに表示するピクチャを設定します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.GetTabShape(System.Int32)">
      <summary>指定したタブの形状を取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.SetTabShape(System.Int32,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>指定したタブの形状を設定します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.GetTabFont(System.Int32)">
      <summary>指定したタブのフォントを取得します。</summary>
      <param name="index">タブインデックス</param>
      <returns></returns>
    </member>
    <member name="M:FarPoint.Win.TabStrip.GetTabBackColor(System.Int32)">
      <summary>指定したタブの背景色を取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.GetTabForeColor(System.Int32)">
      <summary>指定したタブのテキスト色を取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.SetTabFont(System.Int32,System.Drawing.Font)">
      <summary>指定したタブのフォント設定を設定します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.SetTabBackColor(System.Int32,System.Drawing.Color)">
      <summary>指定したタブの背景色を設定します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.SetTabForeColor(System.Int32,System.Drawing.Color)">
      <summary>指定したタブのテキスト色を設定します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.SetTabText(System.Int32,System.String)">
      <summary>指定したタブに表示するテキストを設定します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.RefreshAllTabs">
      <summary>タブストリップのすべてのタブを再描画します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.RefreshTabs(System.Int32,System.Int32)">
      <summary>指定した２つのタブ間のタブ範囲を再描画します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.RefreshTab(System.Int32)">
      <summary>指定したタブを再描画します。</summary>
      <param name="index">タブインデックス</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.SelectTab(System.Int32,System.Int32)">
      <summary>指定した２つのタブ間のタブ範囲を選択します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>背景を描画します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>OnPaint - TabStripコントロールを描画します。</summary>
      <param name="e">イベントデータを含むPaintEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.GetTabText(System.Int32)">
      <summary>指定したタブに表示するテキストを取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.GetTabRectangle(System.Int32)">
      <summary>指定したタブの矩形を取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.OnSizeChanged(System.EventArgs)">
      <summary>サイズが変更されたときに発生します。</summary>
      <param name="e">イベントデータ</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.CalculateTabLayout(System.Drawing.Graphics,System.Boolean)">
      <summary>CalculateTabLayout</summary>
      <param name="g">グラフィックデバイス</param>
      <param name="adjustLayout">レイアウトを調整するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.DrawTabs(System.Windows.Forms.PaintEventArgs)">
            DrawTabs - Compute the tab layout and paint the tabs
            The tab layout is computed going left-to-right and then the tabs are
            painted right-to-left to take care of painting issues with the overlapped tabs.
            <summary>タブのレイアウトを計算した後でタブを描画します。</summary><param name="e">イベントデータを含むPaintEventArgsオブジェクト</param></member>
    <member name="M:FarPoint.Win.TabStrip.DrawNavArrow(FarPoint.Win.NavButton,System.Windows.Forms.PaintEventArgs,System.Int32,System.Int32)">
      <summary>移動ボタンの矢印を描画します。</summary>
      <param name="navbutton">移動ボタン</param>
      <param name="e">イベントデータを含むPaintEventArgsオブジェクト</param>
      <param name="x">x座標</param>
      <param name="y">y座標</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.DrawNavButtons(System.Windows.Forms.PaintEventArgs)">
      <summary>移動ボタンを描画します。</summary>
      <param name="e">イベントデータを含むPaintEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.SetTabInsertionBar(System.Int32,System.Boolean,System.Boolean)">
      <summary>タブ挿入バーを設定します。</summary>
      <param name="hitTestTab">タブインデックスを表す整数</param>
      <param name="rightOfTabs">タブの右側に設定するかどうか</param>
      <param name="setBar">バーを設定するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.HitTestNavButton(System.Drawing.Point)">
      <summary>マウスがどちらの移動ボタンの上にあるかを判定します。</summary>
      <param name="pt">ポイント</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.HitTestNavButton(System.Int32)">
      <summary>どちらの移動ボタンが押されたかを判定します。</summary>
      <param name="x">タブのインデックス</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.HitTestTab(System.Drawing.Point,System.Boolean@)">
      <summary>選択されたタブインデックスを判定します。</summary>
      <param name="pt">ポイント</param>
      <param name="rightOfTabs">タブの右側かどうか</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.MouseOverNavButton(System.Drawing.Point)">
      <summary>ポインタの座標を取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.MouseOverTab(System.Drawing.Point)">
      <summary>ポインタの座標を取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.HitTestTab(System.Drawing.Point)">
      <summary>選択されたタブインデックスを判定します。</summary>
      <param name="pt">ポイント</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.MovePreviousEvent(System.Object,System.EventArgs)">
      <summary>MovePreviousEvent</summary>
      <param name="o">イベントのオブジェクトソース</param>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.MoveNextEvent(System.Object,System.EventArgs)">
      <summary>MoveNextEvent</summary>
      <param name="o">イベントのオブジェクトソース</param>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.MoveFirst">
      <summary>MoveFirst - 最初のタブに移動します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.MovePrevious">
      <summary>MovePrevious - 前のタブに移動します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.MoveNext">
      <summary>MoveNext - 次のタブに移動します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.MoveLast">
      <summary>MoveLast - 最後のタブに移動します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>OnKeyDown</summary>
      <param name="e"></param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>OnMouseDown</summary>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>OnMouseMove</summary>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>OnMouseUp</summary>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.OnResize(System.EventArgs)">
      <summary>OnResize - Resizeイベントを上書きします。</summary>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.MoveTab(System.Int32,System.Int32)">
      <summary>指定したタブをタブストリップ内の新しい位置に移動します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.Finalize">
      <summary>ファイナライズします。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.FireTabStripSelect(System.Int32,System.Boolean,System.Boolean,System.Boolean@)">
      <summary>内部使用のみ。</summary>
      <param name="selectedTab"></param>
      <param name="scrollLeft"></param>
      <param name="scrollRight"></param>
      <param name="cancel"></param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.FireTabStripNavigate">
      <summary>内部使用のみ。</summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.WndProc(System.Windows.Forms.Message@)">
      <summary>内部使用のみ。</summary>
      <param name="m"></param>
    </member>
    <member name="P:FarPoint.Win.TabStrip.ShowNavButtons">
      <summary>タブストリップがボタンを表示するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.TabStrip.SelectedTabOutlineColor">
      <summary>選択されたタブの輪郭の色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.TabStrip.DefaultTabShape">
      <summary>デフォルトのタブ形状を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.TabStrip.ActiveTabInflate">
      <summary>アクティブタブを他のタブより大きく表示するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.TabStrip.Orientation">
      <summary>タブストリップの向きを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.TabStrip.SelectedTabBackColor">
      <summary>選択されたタブの背景色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.TabStrip.SelectedTabForeColor">
      <summary>選択されたタブのテキスト色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.TabStrip.ButtonBackColor">
      <summary>タブストリップボタンの背景色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.TabStrip.ButtonForeColor">
      <summary>タブストリップボタンの前景色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.TabStrip.DrawControlBorder">
      <summary>コントロールの周囲に境界線を描画するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.TabStrip.BackColor">
      <summary>タブストリップの背景色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.TabStrip.ForeColor">
      <summary>タブのテキスト色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.TabStrip.Font">
      <summary>タブのテキストのフォントプロパティを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.TabStrip.Count">
      <summary>タブ数を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.TabStrip.SelectedTab">
      <summary>アクティブタブを取得または設定します。</summary>
    </member>
    <member name="E:FarPoint.Win.TabStrip.TabStripSelect">
      <summary>TabStripSelectイベントを処理するメソッドを表します。</summary>
    </member>
    <member name="E:FarPoint.Win.TabStrip.TabStripNavigate">
      <summary>TabStripNavigateイベントを処理するメソッドを表します。</summary>
    </member>
    <member name="T:FarPoint.Win.TabManagerChangeEventArgs">
      <summary>TabManagerChangeイベントのイベントデータを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabManagerChangeEventArgs.#ctor(FarPoint.Win.TabManagerChangeAction,System.Int32)">
      <summary></summary>
    </member>
    <member name="M:FarPoint.Win.TabManagerChangeEventArgs.#ctor(FarPoint.Win.TabManagerChangeAction,System.Int32,System.Int32)">
      <summary></summary>
    </member>
    <member name="P:FarPoint.Win.TabManagerChangeEventArgs.TabIndex">
      <summary></summary>
    </member>
    <member name="P:FarPoint.Win.TabManagerChangeEventArgs.TabIndex1">
      <summary></summary>
    </member>
    <member name="P:FarPoint.Win.TabManagerChangeEventArgs.TabIndex2">
      <summary></summary>
    </member>
    <member name="P:FarPoint.Win.TabManagerChangeEventArgs.TabAction">
      <summary></summary>
    </member>
    <member name="T:FarPoint.Win.TabManagerChangeEventHandler">
      <summary>TabManagerChangeイベントを処理するデリゲート。</summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータ</param>
    </member>
    <member name="T:FarPoint.Win.ITabManager">
      <summary>シートタブを描画するための情報を提供するインタフェース。</summary>
    </member>
    <member name="M:FarPoint.Win.ITabManager.GetTabFont(System.Int32)">
      <summary>タブのフォントを取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.ITabManager.SetTabFont(System.Int32,System.Drawing.Font)">
      <summary>タブのフォントを設定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ITabManager.GetTabText(System.Int32)">
      <summary>タブのテキストを取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.ITabManager.SetTabText(System.Int32,System.String)">
      <summary>タブのテキストを設定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ITabManager.GetTabBackColor(System.Int32)">
      <summary>タブの背景色を取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.ITabManager.SetTabBackColor(System.Int32,System.Drawing.Color)">
      <summary>タブの背景色を設定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ITabManager.GetTabForeColor(System.Int32)">
      <summary>タブのテキストの色を取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.ITabManager.SetTabForeColor(System.Int32,System.Drawing.Color)">
      <summary>タブのテキストの色を設定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ITabManager.GetTabShape(System.Int32)">
      <summary>タブの形状を取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.ITabManager.SetTabShape(System.Int32,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>タブの形状を設定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ITabManager.GetTabPicture(System.Int32)">
      <summary>タブのピクチャを取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.ITabManager.SetTabPicture(System.Int32,FarPoint.Win.Picture)">
      <summary>タブのピクチャを設定します。</summary>
    </member>
    <member name="M:FarPoint.Win.ITabManager.TabMove(System.Int32,System.Int32)">
      <summary>新しいタブに移動します。</summary>
    </member>
    <member name="P:FarPoint.Win.ITabManager.TabBackColor">
      <summary>タブの背景色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ITabManager.TabForeColor">
      <summary>タブのテキストの色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ITabManager.TabFont">
      <summary>タブのフォントを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ITabManager.TabCount">
      <summary>タブ数を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ITabManager.SelectedTab">
      <summary>アクティブタブのインデックスを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.ITabManager.TabStrip">
      <summary>タブストリップを取得または設定します。</summary>
    </member>
    <member name="E:FarPoint.Win.ITabManager.TabManagerChange">
      <summary>タブマネージャを変更します。</summary>
    </member>
    <member name="T:FarPoint.Win.TabManager">
      <summary>タブマネージャを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabManager.#ctor">
      <summary>デフォルト値を使用して、新しいタブマネージャを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.TabManager.#ctor(FarPoint.Win.TabStrip)">
      <summary>指定したタブストリップを使用して、新しいタブマネージャを作成します。</summary>
      <param name="tabs">タブストリップ</param>
    </member>
    <member name="M:FarPoint.Win.TabManager.GetTextDirect(System.Int32)">
      <summary>テキストを取得します。</summary>
      <param name="index">タブインデックス</param>
    </member>
    <member name="M:FarPoint.Win.TabManager.GetTabPicture(System.Int32)">
      <summary>ピクチャを取得します。</summary>
      <param name="index">タブインデックス</param>
    </member>
    <member name="M:FarPoint.Win.TabManager.SetTabPicture(System.Int32,FarPoint.Win.Picture)">
      <summary>ピクチャを設定します。</summary>
      <param name="index">タブインデックス</param>
      <param name="newPicture"></param>
    </member>
    <member name="M:FarPoint.Win.TabManager.GetTabText(System.Int32)">
      <summary>テキストを取得します。</summary>
      <param name="index">タブインデックス</param>
    </member>
    <member name="M:FarPoint.Win.TabManager.SetTabText(System.Int32,System.String)">
      <summary>テキストを設定します。</summary>
      <param name="index">タブインデックス</param>
      <param name="newText"></param>
    </member>
    <member name="M:FarPoint.Win.TabManager.SetTabFont(System.Int32,System.Drawing.Font)">
      <summary>フォントを設定します。</summary>
      <param name="index">タブインデックス</param>
      <param name="newFont"></param>
    </member>
    <member name="M:FarPoint.Win.TabManager.GetTabFont(System.Int32)">
      <summary>フォントを取得します。</summary>
      <param name="index">タブインデックス</param>
    </member>
    <member name="M:FarPoint.Win.TabManager.GetTabBackColor(System.Int32)">
      <summary>タブの背景色を取得します。</summary>
      <param name="index">タブインデックス</param>
    </member>
    <member name="M:FarPoint.Win.TabManager.GetTabForeColor(System.Int32)">
      <summary>タブのテキストの色を取得します。</summary>
      <param name="index">タブインデックス</param>
    </member>
    <member name="M:FarPoint.Win.TabManager.SetTabBackColor(System.Int32,System.Drawing.Color)">
      <summary>タブの背景色を設定します。</summary>
      <param name="index">タブインデックス</param>
      <param name="newColor"></param>
    </member>
    <member name="M:FarPoint.Win.TabManager.SetTabForeColor(System.Int32,System.Drawing.Color)">
      <summary>タブのテキストの色を設定します。</summary>
      <param name="index">タブインデックス</param>
      <param name="newColor"></param>
    </member>
    <member name="M:FarPoint.Win.TabManager.GetTabShape(System.Int32)">
      <summary>タブの形状を取得します。</summary>
      <param name="index">タブインデックス</param>
    </member>
    <member name="M:FarPoint.Win.TabManager.SetTabShape(System.Int32,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>タブの形状を設定します。</summary>
      <param name="index">タブインデックス</param>
      <param name="newShape"></param>
    </member>
    <member name="M:FarPoint.Win.TabManager.DeleteTab(System.Int32)">
      <summary>タブを削除します。</summary>
      <param name="index">タブインデックス</param>
    </member>
    <member name="M:FarPoint.Win.TabManager.InsertTab(System.Int32,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Drawing.Drawing2D.GraphicsPath,FarPoint.Win.Picture)">
      <summary>タブを挿入します。</summary>
      <param name="index">タブインデックス</param>
      <param name="text"></param>
      <param name="bColor"></param>
      <param name="fColor"></param>
      <param name="tFont"></param>
      <param name="shape"></param>
      <param name="picture"></param>
    </member>
    <member name="M:FarPoint.Win.TabManager.TabMove(System.Int32,System.Int32)">
      <summary>タブを移動します。</summary>
      <param name="index">タブインデックス</param>
      <param name="newIndex"></param>
    </member>
    <member name="M:FarPoint.Win.TabManager.OnTabManagerChange(System.Object,FarPoint.Win.TabManagerChangeEventArgs)">
      <summary>タブマネージャが変更されたときに発生します。</summary>
      <param name="sender"></param>
      <param name="e"></param>
    </member>
    <member name="M:FarPoint.Win.TabManager.FireTabManagerChange(FarPoint.Win.TabManagerChangeAction,System.Int32)">
      <summary>内部使用のみ。</summary>
      <param name="action"></param>
      <param name="index">タブインデックス</param>
    </member>
    <member name="P:FarPoint.Win.TabManager.TabStrip">
      <summary>タブストリップを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.TabManager.TabCount">
      <summary>タブ数を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.TabManager.SelectedTab">
      <summary>アクティブタブのインデックスを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.TabManager.TabBackColor">
      <summary>タブの背景色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.TabManager.TabForeColor">
      <summary>タブのテキストの色を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.TabManager.TabFont">
      <summary>タブテキストのフォントを取得または設定します。</summary>
    </member>
    <member name="E:FarPoint.Win.TabManager.TabManagerChange">
      <summary>タブマネージャが変更されたときに発生します。</summary>
    </member>
    <member name="T:FarPoint.Win.CaptionsArrayList">
      <summary>テキストの表題の配列を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.CaptionsArrayList.#ctor">
      <summary>ユーザーが使用可能な表題を表す配列を 作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.CaptionsArrayList.#ctor(System.Collections.ArrayList,System.String)">
      <summary>ユーザーが使用可能な表題を表す配列を 作成します。</summary>
      <param name="captions">キャプションの配列リスト</param>
      <param name="listName">リスト名</param>
    </member>
    <member name="M:FarPoint.Win.CaptionsArrayList.#ctor(System.String)">
      <summary>ユーザーが使用可能な表題を表す配列を 作成します。</summary>
      <param name="listName">リスト名</param>
    </member>
    <member name="M:FarPoint.Win.CaptionsArrayList.#ctor(System.Collections.ArrayList)">
      <summary>ユーザーが使用可能な表題を表す配列を 作成します。</summary>
      <param name="captions">キャプションの配列リスト</param>
    </member>
    <member name="M:FarPoint.Win.CaptionsArrayList.Find(System.String)">
      <summary>指定した名前に一致する配列内の表題を検索します。</summary>
    </member>
    <member name="M:FarPoint.Win.CaptionsArrayList.Add(System.String)">
      <summary>表題を配列に追加してそのインデックスを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.CaptionsArrayList.Clear">
      <summary>すべてのキャプションをクリアします。</summary>
    </member>
    <member name="M:FarPoint.Win.CaptionsArrayList.Remove(System.String)">
      <summary>キャプションを削除します。</summary>
      <param name="caption">キャプション</param>
    </member>
    <member name="M:FarPoint.Win.CaptionsArrayList.RemoveAt(System.Int32)">
      <summary>指定した位置にあるキャプションを削除します。</summary>
      <param name="index">インデックス</param>
    </member>
    <member name="M:FarPoint.Win.CaptionsArrayList.GetEnumerator(System.Int32,System.Int32)">
      <summary>指定した位置にある列挙子を取得します。</summary>
      <param name="index">インデックス</param>
      <param name="count">数値</param>
    </member>
    <member name="M:FarPoint.Win.CaptionsArrayList.GetEnumerator">
      <summary>列挙子を取得します。</summary>
      <returns></returns>
    </member>
    <member name="M:FarPoint.Win.CaptionsArrayList.Clone">
      <summary>リストのコピーを作成します。</summary>
    </member>
    <member name="P:FarPoint.Win.CaptionsArrayList.Count">
      <summary>配列内の表題の数を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.CaptionsArrayList.Item(System.Int32)">
      <summary>配列内の指定したインデックスの表題を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.CaptionsArrayList.List">
      <summary>キャプションのリストを取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.IPersist">
      <summary>永続化を実行するインタフェース。</summary>
    </member>
    <member name="M:FarPoint.Win.IPersist.Save">
      <summary>保存します。</summary>
    </member>
    <member name="M:FarPoint.Win.IPersist.Load">
      <summary>ロードします。</summary>
    </member>
    <member name="T:FarPoint.Win.EnumeratedType">
      <summary>セル型を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.General">
      <summary>標準型セル</summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.DateTime">
      <summary>日付／時刻型セル</summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.Number">
      <summary>数値型セル</summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.PicMask">
      <summary>マスク型セル</summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.Button">
      <summary>ボタン型セル</summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.CheckBox">
      <summary>チェックボックス型セル</summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.Slider">
      <summary>スライダ（タスクバー）型セル</summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.Combo">
      <summary>コンボボックス型セル</summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.Hyperlink">
      <summary>ハイパーリンク型セル</summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.Progress">
      <summary>進行状況インジケータ型セル</summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.MultiOption">
      <summary>マルチオプションボタン型セル</summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.Percent">
      <summary>パーセント型セル</summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.Currency">
      <summary>通貨型セル</summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.Text">
      <summary>テキスト型セル</summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.ColumnHeader">
      <summary>列ヘッダ型セル</summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.RowHeader">
      <summary>行ヘッダ型セル</summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.RichText">
      <summary>リッチテキスト型セル</summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.CustomBase">
      <summary>カスタム型セル</summary>
    </member>
    <member name="T:FarPoint.Win.CustomTypes">
      <summary>カスタムセル型のコレクションを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.CustomTypes.#ctor">
      <summary>ユーザーが使用可能なカスタムエディタを表す コレクションを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.CustomTypes.Clear">
      <summary>カスタムセル型をコレクションに追加し、そのインデックスを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.CustomTypes.RemoveAt(System.Int32)">
      <summary>コレクションの指定したインデックスからカスタムセル型を削除します。</summary>
      <param name="index">インデックス</param>
    </member>
    <member name="M:FarPoint.Win.CustomTypes.GetEnumerator(System.Int32,System.Int32)">
      <summary>指定した位置にある列挙子を取得します。</summary>
      <param name="index">インデックス</param>
      <param name="count">数値</param>
    </member>
    <member name="M:FarPoint.Win.CustomTypes.GetEnumerator">
      <summary>列挙子を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.CustomTypes.Count">
      <summary>コレクションのカスタムセル型の数を取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.LicenseDialog">
      <summary>製品ライセンスダイアログを表します。</summary>
    </member>
    <member name="F:FarPoint.Win.LicenseDialog.components">
      <summary>必須デザイナ変数。</summary>
    </member>
    <member name="M:FarPoint.Win.LicenseDialog.#ctor(System.Object)">
      <summary>製品ライセンスダイアログを作成します。</summary>
      <param name="instance"></param>
    </member>
    <member name="M:FarPoint.Win.LicenseDialog.#ctor">
      <summary>製品ライセンスダイアログを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.LicenseDialog.AllowPurchase">
      <summary>製品の購入を許可します。</summary>
    </member>
    <member name="M:FarPoint.Win.LicenseDialog.Agreed(System.Boolean)">
      <summary>ユーザーがライセンスに同意したかどうかを判定します。</summary>
      <param name="agreedToLicense">ユーザーがライセンスに同意したかどうか</param>
    </member>
    <member name="M:FarPoint.Win.LicenseDialog.SetProductText(System.String)">
      <summary>製品テキスト文字列を設定します。</summary>
      <param name="prodText">製品テキスト文字列</param>
    </member>
    <member name="M:FarPoint.Win.LicenseDialog.IsBeta(System.Boolean,System.String)">
      <summary>ライセンスがベータ製品用であるかどうかを判定します。</summary>
      <param name="beta">ベータかどうか</param>
      <param name="licenseText">ライセンステキスト文字列</param>
    </member>
    <member name="M:FarPoint.Win.LicenseDialog.Dispose(System.Boolean)">
      <summary>使用されたリソースをすべてクリーンアップします。</summary>
    </member>
    <member name="M:FarPoint.Win.LicenseDialog.InitializeComponent">
      <summary>デザイナサポートの必須メソッド。このメソッドの内容は コードエディタで変更しないでください。</summary>
    </member>
    <member name="T:FarPoint.Win.LicenseDialogGC">
      <summary>製品ライセンスダイアログを表します。</summary>
    </member>
    <member name="F:FarPoint.Win.LicenseDialogGC.components">
      <summary>必須デザイナ変数。</summary>
    </member>
    <member name="M:FarPoint.Win.LicenseDialogGC.#ctor(System.Object)">
      <summary>製品ライセンスダイアログを作成します。</summary>
      <param name="instance"></param>
    </member>
    <member name="M:FarPoint.Win.LicenseDialogGC.#ctor">
      <summary>製品ライセンスダイアログを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.LicenseDialogGC.AllowPurchase">
      <summary>製品の購入を許可します。</summary>
    </member>
    <member name="M:FarPoint.Win.LicenseDialogGC.Agreed(System.Boolean)">
      <summary>ユーザーがライセンスに同意したかどうかを判定します。</summary>
      <param name="agreedToLicense">ユーザーがライセンスに同意したかどうか</param>
    </member>
    <member name="M:FarPoint.Win.LicenseDialogGC.SetProductText(System.String)">
      <summary>製品テキスト文字列を設定します。</summary>
      <param name="prodText">製品テキスト文字列</param>
    </member>
    <member name="M:FarPoint.Win.LicenseDialogGC.IsBeta(System.Boolean,System.String)">
      <summary>ライセンスがベータ製品用であるかどうかを判定します。</summary>
      <param name="beta">ベータかどうか</param>
      <param name="licenseText">ライセンステキスト文字列</param>
    </member>
    <member name="M:FarPoint.Win.LicenseDialogGC.Dispose(System.Boolean)">
      <summary>使用されたリソースをすべてクリーンアップします。</summary>
    </member>
    <member name="M:FarPoint.Win.LicenseDialogGC.InitializeComponent">
      <summary>デザイナサポートの必須メソッド。このメソッドの内容は コードエディタで変更しないでください。</summary>
    </member>
    <member name="T:FarPoint.Win.ICanSerializeXml">
            Interface supplied by objects that support serialization to XML,
            but might not be able to save the entire object to XML.
            <summary>オブジェクトのXMLへのシリアル化をサポートするインタフェース。モデルのオブジェクト全体を保存できない場合があります。</summary></member>
    <member name="P:FarPoint.Win.ICanSerializeXml.CanSerializeXml">
      <summary>オブジェクト全体をXMLに保存し、 再び正常にロードできるかどうかを表すブール値を取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.ISerializeSettings">
      <summary>モデルの設定のXMLへのシリアル化をサポートするインタフェース。</summary>
    </member>
    <member name="M:FarPoint.Win.ISerializeSettings.Serialize(System.Xml.XmlTextWriter)">
      <summary>設定をXMLに保存します。</summary>
      <param name="w">オブジェクトの保存に使用するXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.ISerializeSettings.Deserialize(System.Xml.XmlNodeReader)">
      <summary>設定をXMLからロードします。</summary>
      <param name="r">設定のロード元のXmlNodeReader</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="T:FarPoint.Win.ISerializeStyles">
      <summary>モデルのスタイルのXMLへのシリアル化をサポートするインタフェース。</summary>
    </member>
    <member name="M:FarPoint.Win.ISerializeStyles.Serialize(System.Xml.XmlTextWriter)">
      <summary>スタイルをXMLに保存します。</summary>
      <param name="w">スタイルの保存に使用するXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.ISerializeStyles.Deserialize(System.Xml.XmlNodeReader)">
      <summary>スタイルをXMLからロードします。</summary>
      <param name="r">スタイルのロード元のXmlNodeReader</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="T:FarPoint.Win.ISerializeData">
      <summary>モデルのデータのXMLへのシリアル化をサポートするインタフェース。</summary>
    </member>
    <member name="M:FarPoint.Win.ISerializeData.Serialize(System.Xml.XmlTextWriter)">
      <summary>データをXMLに保存します。</summary>
      <param name="w">データの保存に使用するXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.ISerializeData.Serialize(System.Xml.XmlTextWriter,System.Boolean)">
      <summary>データをXMLに保存します。オプションでデータソースと連結データを保存することもできます。</summary>
      <param name="w">データの保存に使用するXmlTextWriterオブジェクト</param>
      <param name="saveDataSource">データソースと連結データを保存するかどうか</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.ISerializeData.Deserialize(System.Xml.XmlNodeReader)">
      <summary>データをXMLからロードします。</summary>
      <param name="r">データのロード元のXmlNodeReader</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="T:FarPoint.Win.ISerializePresentation">
      <summary>モデルのプレゼンテーションのXMLへのシリアル化をサポートするインタフェース。</summary>
    </member>
    <member name="M:FarPoint.Win.ISerializePresentation.Serialize(System.Xml.XmlTextWriter)">
      <summary>プレゼンテーションをXMLに保存します。</summary>
      <param name="w">プレゼンテーションの保存に使用するXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.ISerializePresentation.Deserialize(System.Xml.XmlNodeReader)">
      <summary>プレゼンテーションをXMLからロードします。</summary>
      <param name="r">プレゼンテーションのロード元のXmlNodeReader</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="T:FarPoint.Win.ISerializeDrawing">
            Interface supplied by objects that support Drawing objects serialization.
            <summary>モデルの描画オブジェクト（シェイプ）のXMLへのシリアル化をサポートするインタフェース。</summary></member>
    <member name="M:FarPoint.Win.ISerializeDrawing.Serialize(System.Xml.XmlTextWriter)">
      <summary>描画オブジェクトをXMLに保存します。</summary>
      <param name="w">Drawingオブジェクトの保存に使用するXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.ISerializeDrawing.Deserialize(System.Xml.XmlNodeReader)">
      <summary>描画オブジェクトをXMLからロードします。</summary>
      <param name="r">Drawingオブジェクトのロード元のXmlNodeReader</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="T:FarPoint.Win.Serializer">
      <summary>ファイルへの保存とファイルからのロードを行うシリアライザオブジェクトを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.Serializer.ExtractNode(System.Xml.XmlNodeReader)">
      <summary>指定したノードリーダーの現在のノードを新しいノードリーダーに抽出し、そのリーダーを次のノードに進めます。</summary>
      <param name="r">データへのアクセスに使用するXmlNodeReader</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.CloneNodeReader(System.Xml.XmlNodeReader)">
      <summary>コピー元を先に進めずに、XmlNodeReader のコピーを作成します。</summary>
      <param name="r">XmlNodeReader</param>
      <returns>XmlNodeReader</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.IsDefaultValue(System.Object,System.String,System.Object)">
      <summary>オブジェクトの指定したプロパティの値がデフォルト値であるかどうかを判定します。</summary>
      <param name="o">オブジェクト</param>
      <param name="propName">プロパティの名前</param>
      <param name="propVal">比較する値を含むオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.CreateObjectInstanceAndDeserialize(System.Xml.XmlNodeReader,System.Type)">
      <summary>指定したXMLノードリーダーに、指定した型のシリアル化されたオブジェクトを作成します。</summary>
      <param name="r">XMLのロード元のXmlNodeReader</param>
      <param name="type">シリアル化サポートの型</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.CreateObjectInstanceAndDeserialize(System.Xml.XmlNodeReader,System.Type,System.Type)">
      <summary>指定したXMLノードリーダーに、指定した型とインタフェースのシリアル化されたオブジェクトを作成します。</summary>
      <param name="r">XMLのロード元のXmlNodeReader</param>
      <param name="type">シリアル化サポートの型</param>
      <param name="saveInterface">使用するシリアル化インタフェース</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.CreateObjectInstanceAndDeserialize(System.Xml.XmlNodeReader,System.Type,System.Type,System.Reflection.Assembly)">
      <summary>指定したXMLノードリーダーに、指定した型、インタフェース、および呼び出し元アセンブリのシリアル化されたオブジェクトを作成します。</summary>
      <param name="r">XMLのロード元のXmlNodeReader</param>
      <param name="type">型</param>
      <param name="saveInterface">使用するシリアル化インタフェース</param>
      <param name="callingAssembly">呼び出すアセンブリオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeImage(System.Drawing.Image,System.String,System.Xml.XmlTextWriter)">
      <summary>指定したライターを使用して、画像をXMLの指定した要素にbase64エンコード文字列としてシリアル化します。</summary>
      <param name="image">シリアル化するImageオブジェクト</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">XmlTextWriter</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.DeserializeImage(System.String)">
      <summary>シリアル化されている指定のbase64エンコード文字列から画像を作成します。</summary>
      <param name="base64">base64文字列</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeEnum(System.Enum,System.String,System.Xml.XmlTextWriter)">
      <summary>指定したライターを使用して、列挙値をXMLにシリアル化します。</summary>
      <param name="value">シリアル化する列挙体設定</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">XmlTextWriter</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.DeserializeEnumValue(System.String,System.Type)">
      <summary>指定した型の列挙値を逆シリアル化します。</summary>
      <param name="value">列挙値を表す文字列</param>
      <param name="enumType">列挙値の型</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeColor(System.Drawing.Color,System.String,System.Xml.XmlTextWriter)">
      <summary>指定したライターを使用して、色をXMLにシリアル化します。</summary>
      <param name="c">色を含むColorオブジェクト</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">XmlTextWriter</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeColorValue(System.Drawing.Color)">
      <summary>Colorオブジェクトを色名（例：Blue）または色を表す６桁の16進数値（例：#FFFFFF）に変換します。</summary>
      <param name="c">色を含むColorオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.DeserializeColorValue(System.String)">
      <summary>色を表す６桁の16進数値をColorオブジェクトに変換します。</summary>
      <param name="s">色の値を含む文字列</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeFont(System.Drawing.Font,System.String,System.Xml.XmlTextWriter)">
      <summary>指定したライターを使用して、フォントをXMLにシリアル化します。</summary>
      <param name="font">フォントを含むFontオブジェクト</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">XmlTextWriter</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeFontValue(System.Object,System.Xml.XmlTextWriter)">
      <summary>指定したライターを使用して、要素タグを書き込まずにフォントをXMLにシリアル化します。</summary>
      <param name="o">フォントを含むFontオブジェクト</param>
      <param name="w">XmlTextWriter</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeFontValue(System.Object,System.Xml.XmlTextWriter,System.Boolean)">
      <summary>指定したライターと短いXML名オプションを使用して、要素タグを書き込まずにフォント情報をXMLにシリアル化します。</summary>
      <param name="o">フォント情報を含むFontInfoオブジェクト</param>
      <param name="w">XmlTextWriter</param>
      <param name="shortXmlName">短いXML名を使用するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.DeserializeFont(System.Xml.XmlNodeReader)">
      <summary>SerializeFontまたはSerializeFontValueを使用してシリアル化されたフォントを作成して逆シリアル化します。</summary>
      <param name="r">XmlNodeReaderオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeDateValue(System.DateTime)">
      <summary>DataTimeオブジェクトを日付書式文字列に変換します。</summary>
      <param name="d">変換するDateTimeオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.DeserializeDateValue(System.String)">
      <summary>日付書式文字列をDataTime値に変換します。</summary>
      <param name="s">変換する日付書式の文字列</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.DefaultSerializeProp(System.Object)">
      <summary>指定した基本オブジェクトをシリアル化して文字列表記を返します。</summary>
      <param name="o">シリアル化するオブジェクト</param>
      <returns>オブジェクトの文字列表記</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.DefaultDeserializeProp(System.Object,System.Object)">
      <summary>DefaultSerializePropを使用して保存された指定の基本オブジェクトを逆シリアル化し、値を返します。</summary>
      <param name="prop">プロパティの現在の値</param>
      <param name="o">逆シリアル化するオブジェクトの名前を表す文字列</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.GetObjectXml(FarPoint.Win.ISerializeSupport,System.String)">
      <summary>オブジェクトをXML文字列にシリアル化します。</summary>
      <param name="o">シリアル化するオブジェクト</param>
      <param name="elementName">XML要素の名前</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.GetObjectXml(FarPoint.Win.ISerializeSupport,System.String,System.Reflection.Assembly)">
      <summary>オブジェクトをXML文字列にシリアル化します。</summary>
      <param name="o">シリアル化するオブジェクト</param>
      <param name="elementName">XML要素の名前</param>
      <param name="callingAssembly">呼び出すアセンブリ</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SetObjectXml(FarPoint.Win.ISerializeSupport,System.String,System.String)">
      <summary>GetObjectXmlで保存されたオブジェクトを、指定したXML文字列を使用して逆シリアル化します。</summary>
      <param name="o">逆シリアル化するオブジェクト</param>
      <param name="xml">GetObjectXmlから返されたXML文字列</param>
      <param name="elementName">XML要素の名前</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.LoadObject(System.Type,System.String,System.String)">
      <summary>以前にSerializer.SaveObjectを使用して保存されたオブジェクトをファイルからロードします。</summary>
      <param name="type">オブジェクトの型</param>
      <param name="fileName">ロード元のファイルのパスとファイル名</param>
      <param name="elementName">オブジェクトのルート要素ノードの名前</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.LoadObject(System.Type,System.String,System.String,System.Reflection.Assembly)">
      <summary>以前にSerializer.SaveObjectを使用して保存されたオブジェクトをファイルからロードします。</summary>
      <param name="type">オブジェクトの型</param>
      <param name="fileName">ロード元のファイルのパスとファイル名</param>
      <param name="elementName">オブジェクトのルート要素ノードの名前</param>
      <param name="callingAssembly">呼び出すアセンブリ</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.LoadObject(System.Type,System.IO.Stream,System.String)">
      <summary>以前にSerializer.SaveObjectを使用して保存されたオブジェクトをストリームからロードします。</summary>
      <param name="type">オブジェクトの型</param>
      <param name="stream">オブジェクトのロード元のストリーム</param>
      <param name="elementName">オブジェクトのルート要素ノードの名前</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.LoadObject(System.Type,System.IO.Stream,System.String,System.Reflection.Assembly)">
      <summary>以前にSerializer.SaveObjectを使用して保存されたオブジェクトをストリームからロードします。</summary>
      <param name="type">型</param>
      <param name="stream">オブジェクトのロード元のストリーム</param>
      <param name="elementName">オブジェクトのルート要素ノードの名前</param>
      <param name="callingAssembly">呼び出すアセンブリ</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.LoadObjectXml(System.Type,System.String,System.String)">
      <summary>GetObjectXmlで保存されたオブジェクトから新しいインスタンスを作成して逆シリアル化します。</summary>
      <param name="type">オブジェクトの型</param>
      <param name="xml">XML文字列</param>
      <param name="elementName">XML要素の名前</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.LoadObjectXml(System.Type,System.String,System.String,System.Reflection.Assembly)">
      <summary>GetObjectXmlで保存されたオブジェクトから新しいインスタンスを作成して逆シリアル化します。</summary>
      <param name="type">オブジェクトの型</param>
      <param name="xml">XML文字列</param>
      <param name="elementName">XML要素の名前</param>
      <param name="callingAssembly">呼び出すアセンブリ</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SaveObject(System.Object,System.String,System.String)">
      <summary>オブジェクトをXMLとしてファイルに保存します。</summary>
      <param name="o">保存するオブジェクト（ISerializeSupportを実装している必要があります）</param>
      <param name="fileName">オブジェクトの保存先のファイル名</param>
      <param name="rootElement">ルートXML要素の名前</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SaveObject(System.Object,System.IO.Stream,System.String)">
      <summary>オブジェクトをXMLとしてストリームに保存します。</summary>
      <param name="o">保存するオブジェクト（ISerializeSupportを実装している必要があります）</param>
      <param name="stream">オブジェクトの保存先のストリーム</param>
      <param name="rootElement">ルートXML要素の名前</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SaveObject(System.Object,System.Type,System.String,System.String)">
      <summary>指定したシリアル化インタフェースを使用して、オブジェクトをXMLとしてファイルに保存します。</summary>
      <param name="o">保存するオブジェクト（指定したシリアル化インタフェースを実装している必要があります）</param>
      <param name="saveInterface">使用するシリアル化インタフェース（ISerializeSupport、ISerializeSettings、ISerializeData、ISerializeStyles、ISerializeDrawing、ISerializePresentationのいずれかである必要があります）</param>
      <param name="fileName">オブジェクトの保存先のファイル名</param>
      <param name="rootElement">ルートXML要素の名前</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SaveObject(System.Object,System.Type,System.String,System.String,System.Reflection.Assembly)">
      <summary>指定したシリアル化インタフェースを使用して、オブジェクトをXMLとしてファイルに保存します。</summary>
      <param name="o">保存するオブジェクト（指定したシリアル化インタフェースを実装している必要があります）</param>
      <param name="saveInterface">使用するシリアル化インタフェース（ISerializeSupport、ISerializeSettings、ISerializeData、ISerializeStyles、ISerializeDrawing、ISerializePresentationのいずれかである必要があります）</param>
      <param name="fileName">オブジェクトの保存先のファイル名</param>
      <param name="rootElement">ルートXML要素の名前</param>
      <param name="callingAssembly">呼び出すアセンブリ</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SaveObject(System.Object,System.Type,System.IO.Stream,System.String)">
      <summary>指定したシリアル化インタフェースを使用して、オブジェクトをXMLとしてストリームに保存します。</summary>
      <param name="o">保存するオブジェクト（指定したシリアル化インタフェースを実装している必要があります）</param>
      <param name="saveInterface">使用するシリアル化インタフェース（ISerializeSupport、ISerializeSettings、ISerializeData、ISerializeStyles、ISerializeDrawing、ISerializePresentationのいずれかである必要があります）</param>
      <param name="stream">オブジェクトの保存先のストリーム</param>
      <param name="rootElement">ルートXML要素の名前</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SaveObject(System.Object,System.Type,System.IO.Stream,System.String,System.Reflection.Assembly)">
      <summary>指定したシリアル化インタフェースを使用して、オブジェクトをXMLとしてストリームに保存します。</summary>
      <param name="o">保存するオブジェクト（指定したシリアル化インタフェースを実装している必要があります）</param>
      <param name="saveInterface">使用するシリアル化インタフェース（ISerializeSupport、ISerializeSettings、ISerializeData、ISerializeStyles、ISerializeDrawing、ISerializePresentationのいずれかである必要があります）</param>
      <param name="stream">オブジェクトの保存先のストリーム</param>
      <param name="rootElement">ルートXML要素の名前</param>
      <param name="callingAssembly">呼び出すアセンブリ</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.CanSerializeObject(System.Object)">
      <summary>指定したオブジェクトがXMLにシリアル化できるかどうかを判定します。</summary>
      <param name="o">オブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeSettings(System.Object,System.String,System.Xml.XmlTextWriter)">
      <summary>ISerializeSettingsインタフェースを使用してオブジェクトをシリアル化します。</summary>
      <param name="o">シリアル化するオブジェクト</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">オブジェクトの保存先のXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeStyles(System.Object,System.String,System.Xml.XmlTextWriter)">
      <summary>ISerializeStylesインタフェースを使用してオブジェクトをシリアル化します。</summary>
      <param name="o">シリアル化するオブジェクト</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeData(System.Object,System.String,System.Xml.XmlTextWriter)">
      <summary>ISerializeDataインタフェースを使用してオブジェクトをシリアル化します。</summary>
      <param name="o">シリアル化するオブジェクト</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeData(System.Object,System.String,System.Xml.XmlTextWriter,System.Boolean)">
      <summary>ISerializeDataインタフェースを使用してオブジェクトをシリアル化します。</summary>
      <param name="o">シリアル化するオブジェクト</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
      <param name="saveDataSource">データソースを保存する場合はTrue、それ以外の場合はFalse</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializePresentation(System.Object,System.String,System.Xml.XmlTextWriter)">
      <summary>ISerializePresentationインタフェースを使用してオブジェクトをシリアル化します。</summary>
      <param name="o">シリアル化するオブジェクト</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeDrawing(System.Object,System.String,System.Xml.XmlTextWriter)">
      <summary>ISerializeDrawingインタフェースを使用してオブジェクトをシリアル化します。</summary>
      <param name="o">シリアル化するオブジェクト</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeObject(System.Object,System.String,System.Xml.XmlTextWriter)">
      <summary>ISerializeSupportインタフェースを使用して、オブジェクトをXMLにシリアル化します。</summary>
      <param name="o">シリアル化するオブジェクト</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeObject(System.Object,System.String,System.Xml.XmlTextWriter,System.Reflection.Assembly)">
      <summary>ISerializeSupportインタフェースを使用して、オブジェクトをXMLにシリアル化します。</summary>
      <param name="o">シリアル化するオブジェクト</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
      <param name="callingAssembly">オブジェクトの実装を含むアセンブリを指定します。</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeObject(System.Object,System.Type,System.String,System.Xml.XmlTextWriter)">
      <summary>ISerializeSupportインタフェースを使用して、オブジェクトをXMLにシリアル化します。</summary>
      <param name="o">シリアル化するオブジェクト</param>
      <param name="saveInterface">使用するシリアル化インタフェース</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeObject(System.Object,System.Type,System.String,System.Xml.XmlTextWriter,System.Reflection.Assembly)">
      <summary>ISerializeSupportインタフェースを使用して、オブジェクトをXMLにシリアル化します。</summary>
      <param name="o">シリアル化するオブジェクト</param>
      <param name="saveInterface">使用するシリアル化インタフェース</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
      <param name="callingAssembly">オブジェクトの実装を含むアセンブリを指定します。</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeObject(System.Object,System.Type,System.String,System.Xml.XmlTextWriter,System.Reflection.Assembly,System.Object[])">
      <summary>ISerializeSupportインタフェースを使用して、オブジェクトをXMLにシリアル化します。</summary>
      <param name="o">シリアル化するオブジェクト</param>
      <param name="saveInterface">使用するシリアル化インタフェース</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
      <param name="callingAssembly">オブジェクトの実装を含むアセンブリを指定します。</param>
      <param name="args">saveInterface.Serializeメソッド（最初の引数としてwを含む）に渡す引数</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeObject(System.Object,System.Type,System.String,System.Xml.XmlTextWriter,System.Reflection.Assembly,System.Object[],System.Boolean)">
      <summary>ISerializeSupportインタフェースを使用して、オブジェクトをXMLにシリアル化します。</summary>
      <param name="o">シリアル化するオブジェクト</param>
      <param name="saveInterface">使用するシリアル化インタフェース</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
      <param name="callingAssembly">オブジェクトの実装を含むアセンブリを指定します。</param>
      <param name="args">saveInterface.Serializeメソッド（最初の引数としてwを含む）に渡す引数</param>
      <param name="saveType">保存するかどうか</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.EncodeObject(System.Object)">
      <summary>オブジェクトをbase64文字列にエンコードします（シリアル化が可能な場合）。</summary>
      <param name="o">エンコードするオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.DecodeObject(System.String)">
      <summary>base64文字列からオブジェクトをデコードします（EncodeObjectの逆）。</summary>
      <param name="s">base64でエンコードされた文字列</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeString(System.String,System.String,System.Xml.XmlTextWriter)">
      <summary>文字列をXMLにシリアル化します。</summary>
      <param name="value">文字列</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeStringArray(System.String[],System.String,System.Xml.XmlTextWriter)">
      <summary>文字列の配列をXMLにシリアル化します。</summary>
      <param name="array">文字列の配列</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.DeserializeString(System.Xml.XmlNodeReader)">
      <summary>文字列をXMLから逆シリアル化します。</summary>
      <param name="r">XMLのロード元のXmlNodeReader</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.DeserializeStringArray(System.Xml.XmlNodeReader)">
      <summary>文字列の配列をXMLから逆シリアル化します。</summary>
      <param name="r">XMLのロード元のXmlNodeReader</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeDateTimeFormatInfo(System.Globalization.DateTimeFormatInfo,System.String,System.Xml.XmlTextWriter)">
      <summary>DateTimeFormatInfoオブジェクトをXMLにシリアル化します。</summary>
      <param name="info">DateTimeFormatInfo</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.DeserializeDateTimeFormatInfo(System.Xml.XmlNodeReader)">
      <summary>DateTimeFormatInfoオブジェクトをXMLから逆シリアル化します。</summary>
      <param name="r">XMLのロード元のXmlNodeReader</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeIntArray(System.Int32[],System.String,System.Xml.XmlTextWriter)">
      <summary>整数の配列をXMLにシリアル化します。</summary>
      <param name="array">整数の配列</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeByteArray(System.Byte[],System.String,System.Xml.XmlTextWriter)">
      <summary>バイトの配列をXMLにシリアル化します。</summary>
      <param name="array">バイトの配列</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializePointFArray(System.Drawing.PointF[],System.String,System.Xml.XmlTextWriter)">
      <summary>PointFポイントの配列をXMLにシリアル化します。</summary>
      <param name="array">座標（PointF点）を含む浮動小数点数の配列</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.DeserializeIntArray(System.Xml.XmlNodeReader)">
      <summary>整数の配列をXMLから逆シリアル化します。</summary>
      <param name="r">XMLのロード元のXmlNodeReader</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.DeserializeByteArray(System.Xml.XmlNodeReader)">
      <summary>バイトの配列をXMLから逆シリアル化します。</summary>
      <param name="r">XMLのロード元のXmlNodeReader</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.DeserializePointFArray(System.Xml.XmlNodeReader)">
      <summary>PointFオブジェクトの配列をXMLから逆シリアル化します。</summary>
      <param name="r">XMLのロード元のXmlNodeReader</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeNumberFormatInfo(System.Globalization.NumberFormatInfo,System.String,System.Xml.XmlTextWriter)">
      <summary>NumberFormatInfoオブジェクトをXMLにシリアル化します。</summary>
      <param name="info">NumberFormatInfo</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.DeserializeNumberFormatInfo(System.Xml.XmlNodeReader)">
      <summary>NumberFormatInfoオブジェクトをXMLから逆シリアル化します。</summary>
      <param name="r">XMLのロード元のXmlNodeReader</param>
    </member>
    <member name="M:FarPoint.Win.Text.GlobalizedString.#ctor(System.String)">
      <summary>新しいグローバル化文字列を作成します。</summary>
      <param name="text">テキスト文字列</param>
    </member>
    <member name="M:FarPoint.Win.Text.GlobalizedString.Clone">
      <summary>現在のインスタンスのコピーである新しいオブジェクトを作成します。</summary>
      <returns>このインスタンスのコピーである新しいオブジェクト</returns>
    </member>
    <member name="M:FarPoint.Win.Text.GlobalizedString.Substring(System.Int32,System.Int32)">
      <summary>指定した開始インデックスからサブ文字列を作成します。</summary>
      <param name="startIndex">開始インデックス</param>
      <param name="length">長さ</param>
    </member>
    <member name="M:FarPoint.Win.Text.GlobalizedString.IndexOfAny(System.Char[],System.Int32)">
      <summary>文字列内の任意の文字のインデックスを返します。</summary>
      <param name="anyOf">文字配列</param>
      <param name="startIndex">開始インデックス</param>
      <returns>インデックス</returns>
    </member>
    <member name="M:FarPoint.Win.Text.GlobalizedString.LastIndexOfAny(System.Char[],System.Int32)">
      <summary>文字列内の最後の文字のインデックスを返します。</summary>
      <param name="anyOf">文字配列</param>
      <param name="startIndex">開始インデックス</param>
      <returns>最後のインデックス</returns>
    </member>
    <member name="M:FarPoint.Win.Text.GlobalizedString.Reverse">
      <summary>テキストを逆にします。</summary>
    </member>
    <member name="P:FarPoint.Win.Text.GlobalizedString.Empty">
      <summary>文字列を空にします。</summary>
      <value>空</value>
    </member>
    <member name="P:FarPoint.Win.Text.GlobalizedString.Item(System.Int32)">
      <summary>指定したインデックスにある<see cref="T:String" />を取得します。</summary>
      <param name="index">インデックス</param>
      <returns>文字列</returns>
    </member>
    <member name="P:FarPoint.Win.Text.GlobalizedString.Length">
      <summary>長さを取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender">
      <summary>リッチテキストのレンダリングに使用されるクラスを定義します。</summary>
      <remarks>私は多くの時間を費やして、リッチテキストをレンダリングするための基本的な概念を見つけ出しました。これらの概念の定義にはインタフェースを使用しています。インタフェースのうちの概念を定義する部分以外は、サブプロセスの接続に使用しました。つまり、これらの部分は一部のサブプロセスにとっては入力となり、別のサブプロセスにとっては出力になります。レンダリングプロセス全体は次のとおりです。------------------------------------------------------------------------------------------------------------------------------------------- + : データ ----------&gt; # : ツール --&gt;&gt;&gt;&gt; &gt;&gt;-- : データフロー * : サブプロセス ==========&gt; @ : ユーザー ==&gt;======== : 関連 ------------------------------------------------------------------------------------------------------------------------------------------- ++++++++++++++++++++++ |-----&gt; + 純粋なテキストセグメント + -------| | ++++++++++++++++++++++ | | ++++++++++++++++++++++ | +++++++++++++++ *************** |-----&gt; + グリフ + -------| + リッチテキスト + ----&gt; * テキストパーサー * -----| ++++++++++++++++++++++ | ************** +++++++++++ +++++++++++++++ *************** | ++++++++++++++++++++++ |----&gt; * ビルダー * ------&gt; + DOM + ----- |-----&gt; + スタイルと効果 + -------| ************** +++++++++++ | ++++++++++++++++++++++ | | | | | | @@@@@@@@@@@@@ +++++++++++++++++++++++++++ | | | @ ユーザー @ ----------------------------------&gt; + 挿入と関連付け ---| | | @@@@@@@@@@@@@ +++++++++++++++++++++++++++ | | |-------------------&gt;&gt;&gt;&gt; &gt;&gt;--------------------------------------------------------------------------------------- | | ------------------------------------------------------------------------------------------------------------------------------| | |-----------------------&gt;&gt;&gt;&gt; &gt;&gt;------------------------------------------------------| | | | +++++++++++++++ ****************** | | + テンプレート + --&gt;&gt;&gt;&gt; &gt;&gt;------- ====&gt;=== * テキストブレーカー * | | +++++++++++++++ | = ****************** |-------&gt;&gt;&gt;&gt;&gt; &gt;&gt;-------| | | = | | | | = | | | ************** ++++++++++++++++++ | | |-------------------------------&gt; * コンポジッター * ------&gt; + レイアウト情報 + ---------| | ************** ++++++++++++++++++ | = | | | = | | | = *************** | | = * アライメンター *--&gt;&gt;---- | = *************** | = = | = = | = = | = = ############### | = = ==&gt;== # メジャラー # | = ################# = ############### | ===================&gt;===== # ツールマネージャ # ==== | = ################# = ############### | ############# = ==&gt;== # ペインター # | # コンテキスト # ========================== ############### | ############# ================ | = = | = ---------------------------------------------------| = | = = | = = | ************ ++++++++++++++++ = |---------&gt; * レンダリング * ---------&gt; + 出力 + = ************ ++++++++++++++++ = | = | = +++++++++++++++++ | = + 装飾 + --| = +++++++++++++++++ | = | = +++++++++++++++++++++++++ | = + レイアウト調整情報 + --| = +++++++++++++++++++++++++ = | =========== | ++++++++++++++++++ = | + 整列と + ************* | + 回転情報 + -------&gt; * 回転 * ----&gt;&gt;&gt; &gt;&gt;--- ++++++++++++++++++ ************* -------------------------------------------------------------------------------------------------------------------------------------------</remarks>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.ChainOrder">
      <summary>チェイン内のオブジェクトの順序を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.ChainOrder.High">
      <summary>高い順序を示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.ChainOrder.Normal">
      <summary>通常の順序を示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.ChainOrder.Low">
      <summary>低い順序を示します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.WordAttribute">
      <summary>共通言語の単語属性を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.WordAttribute.Suspensive">
      <summary>解析されていません。さらに他の単語が存在する可能性があります。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.WordAttribute.WhiteSpace">
      <summary>空白</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.WordAttribute.Tab">
      <summary>タブ</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.WordAttribute.SoftNewLine">
      <summary>挿入されたソフト改行</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.WordAttribute.NewLine">
      <summary>ハード改行</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.WordAttribute.ReferencedObject">
      <summary>参照されているオブジェクト</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.WordAttribute.Invalid">
      <summary>無効な単語</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.WordAttribute.HalfWidth">
      <summary>半角文字</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.WordAttribute.FullWidth">
      <summary>全角文字</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.TextRange">
      <summary>テキストの範囲を示します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.TextRange.#ctor(System.Int32,System.Int32)">
      <summary>新しいテキスト範囲を作成します。</summary>
      <param name="start">範囲の開始位置</param>
      <param name="length">範囲の長さ</param>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.TextRange.Start">
      <summary>範囲の開始位置を決定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.TextRange.Length">
      <summary>範囲の長さを決定します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.TextRange.Contains(System.Int32)">
      <summary>指定した位置が範囲に含まれているかどうかを判定します。</summary>
      <param name="position">位置</param>
      <returns>位置が範囲に含まれている場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.TextRange.Empty">
      <summary>空の範囲を定義します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.IMeasurer">
      <summary>特定のコンテキストでの指定したオブジェクトの測定に使用できるツールを定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.IMeasurer.Measure(System.Object,System.Object)">
      <summary>指定したコンテキストで、指定したオブジェクトのサイズを測定します。</summary>
      <param name="context">コンテキスト</param>
      <param name="obj">測定するオブジェクト</param>
      <returns>オブジェクトの<see cref="T:System.Drawing.Size" /></returns>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.IPainter">
      <summary>特定のコンテキストでの指定したオブジェクトの描画に使用できるツールを定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.IPainter.Draw(System.Object,System.Drawing.Rectangle,System.Object,System.Int32)">
      <summary>指定したコンテキストを使用するか、境界に基づいて、オブジェクトを描画します。</summary>
      <param name="context">コンテキスト</param>
      <param name="bounds">境界矩形</param>
      <param name="obj">描画するオブジェクト</param>
      <param name="embeddingLevel">埋め込みレベルを表す数値</param>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.IRestorable">
      <summary>特定のオブジェクトの状態の値を保持し、値への状態の復元に使用できるインタフェースを定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.IRestorable.Restore">
      <summary>状態の値を復元します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.IMeasurerChain">
      <summary>直列メジャラーを変更できるチェインを定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.IMeasurerChain.PreviousMeasurer(System.Int32)">
      <summary>一意の位置識別子に従って、チェイン内の前のメジャラーを取得します。</summary>
      <param name="id">一意の位置識別子</param>
      <value>メジャラーを返します。存在しない場合はNullを返します。</value>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.IMeasurerChain.Add(FarPoint.Win.Text.TextRender.ChainOrder,FarPoint.Win.Text.TextRender.IMeasurer)">
      <summary>チェインにメジャラーを追加します。</summary>
      <param name="order">順序を示す<see cref="T:FarPoint.Win.Text.TextRender.ChainOrder" /></param>
      <param name="measurer">メジャラーを示すITextMeasurer</param>
      <returns>このチェイン内での一意の位置識別子</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.IMeasurerChain.Remove(System.Int32)">
      <summary>チェインからメジャラーを削除します。</summary>
      <param name="id">一意の位置識別子</param>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.IMeasurerChain.Count">
      <summary>チェイン内のメジャラーの数を取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.IPainterChain">
      <summary>ペインターの変更に使用できるチェインを定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.IPainterChain.PreviousPainter(System.Int32)">
      <summary>一意の位置識別子に従って、チェイン内の前のペインターを取得します。</summary>
      <param name="id">一意の位置識別子</param>
      <value>ペインターを返します。存在しない場合はNullを返します。</value>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.IPainterChain.Add(FarPoint.Win.Text.TextRender.ChainOrder,FarPoint.Win.Text.TextRender.IPainter)">
      <summary>別のレイヤ上のチェインにペインターを追加します。</summary>
      <param name="order">チェイン順序</param>
      <param name="painter">ペインター</param>
      <returns>このチェイン内での一意の位置識別子</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.IPainterChain.Remove(System.Int32)">
      <summary>チェインからペインターを削除します。</summary>
      <param name="id">一意の位置識別子</param>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.IPainterChain.Count">
      <summary>このチェイン内のペインターの数を取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.IExtendedTreeEnumerator">
      <summary>拡張されたツリー列挙子を定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.IExtendedTreeEnumerator.MoveTo(System.Int32)">
      <summary>オブジェクトを移動する列挙子を、指定したインデックスに移動します。</summary>
      <param name="index">インデックス</param>
      <returns>指定したインデックスに移動できる場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.IExtendedTreeEnumerator.Expand">
      <summary>サブツリー列挙子を取得します。</summary>
      <value>サブツリーの移動に使用される<see cref="T:FarPoint.Win.Text.TextRender.IExtendedTreeEnumerator" />を返します。</value>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.IExtendedTreeEnumerator.CurrentIndex">
      <summary>現在のオブジェクトのインデックスを取得します。</summary>
      <value>現在のオブジェクトのインデックス</value>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.IDeviceContext">
      <summary>デバイスコンテキストを提供するインタフェース。</summary>
      <remarks>このハンドルはアンマネージハンドルではありません。概念と値もそれと同じです。アンマネージAPIが直接呼び出されないように、<see cref="T:FarPoint.Win.Text.Graphics32" />クラスの使用を検討してください。</remarks>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.IDeviceContext.Handle">
      <summary>デバイスコンテキストのハンドルを取得します。</summary>
      <value>デバイスコンテキスト</value>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.IDeviceContext.Font">
      <summary>選択されているフォントのハンドルを取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.IDeviceContext.TextColor">
      <summary>テキストの色を取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.TextSegment">
      <summary>純粋なテキストセグメントを示すクラスを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.TextSegment._range">
      <summary>テキストセグメントの範囲を示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.TextSegment._attribute">
      <summary>テキストセグメントの属性を示します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.TextSegment.#ctor(FarPoint.Win.Text.TextRender.TextRange,FarPoint.Win.Text.TextRender.WordAttribute)">
      <summary>テキストセグメントを作成します。</summary>
      <param name="range">スクリプト内の単語の範囲を示します。</param>
      <param name="attribute">テキストセグメントの属性を示します。</param>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.TextSegment.BidirectionalCharacteristic">
      <summary>左から右に記述する文字:0、中立文字（スペース、記号、句読点など）:-1、左から右に記述する弱文字（欧数字）:2、置換が必要な欧数字:3、右から左に記述する文字:1、制御文字、RLO（RightToLeft override）:11、制御文字、LRO（LeftToRight override）:10、制御文字、PDF（Pop Directional Format）:20、制御文字、RLE（RightToLeft embedding）:13、制御文字、LRE（LeftToRight embedding）:12。</summary>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.TextSegment.Range">
      <summary>テキストセグメントの範囲を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.TextSegment.Attribute">
      <summary>セグメントの属性を取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.MeasurerChain">
      <summary>IMeasurerChainインタフェースの実装を表します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.MeasurerChain._idCount">
      <summary>識別子の数を保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.MeasurerChain._rootNode">
      <summary>ルートノードを指し示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.MeasurerChain._count">
      <summary>メジャラーの数をカウントします。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.MeasurerChain.GetId">
      <summary>新しい位置識別子を取得します。</summary>
      <returns>新しい位置識別子</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.MeasurerChain.PreviousMeasurer(System.Int32)">
      <summary>一意の位置識別子に従って、チェイン内の前のメジャラーを取得します。</summary>
      <param name="id">一意の位置識別子</param>
      <value>メジャラーを返します。存在しない場合はNullを返します。</value>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.MeasurerChain.Add(FarPoint.Win.Text.TextRender.ChainOrder,FarPoint.Win.Text.TextRender.IMeasurer)">
      <summary>チェインにメジャラーを追加します。</summary>
      <param name="order">チェイン順序</param>
      <param name="measurer">メジャラー</param>
      <returns>このチェイン内での一意の位置識別子</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.MeasurerChain.Remove(System.Int32)">
      <summary>チェインからメジャラーを削除します。</summary>
      <param name="id">一意の位置識別子</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.MeasurerChain.Measure(System.Object,System.Object)">
      <summary>指定したコンテキストで、指定したオブジェクトのサイズを測定します。</summary>
      <param name="context">コンテキスト</param>
      <param name="obj">測定するオブジェクト</param>
      <returns>オブジェクトの<see cref="T:System.Drawing.Size" /></returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.MeasurerChain.Clone">
      <summary>現在のインスタンスのコピーである新しいオブジェクトを作成します。</summary>
      <returns>このインスタンスのコピーである新しいオブジェクト</returns>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.MeasurerChain.Count">
      <summary>チェイン内のメジャラーの数を取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.MeasurerChain.ChainNode">
      <summary>メジャラーの保存に使用されるノードを定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.MeasurerChain.ChainNode.#ctor(System.Int32,FarPoint.Win.Text.TextRender.ChainOrder,FarPoint.Win.Text.TextRender.IMeasurer)">
      <summary>新しい<see cref="T:FarPoint.Win.Text.TextRender.MeasurerChain.ChainNode" />クラスを作成します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.MeasurerChain.ChainNode.Id">
      <summary>位置識別子を保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.MeasurerChain.ChainNode.Order">
      <summary>チェイン順序を保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.MeasurerChain.ChainNode.Measurer">
      <summary>メジャラーを保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.MeasurerChain.ChainNode.Next">
      <summary>次のノードを指し示します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.PainterChain">
      <summary>ペインターのチェインを表します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.PainterChain._idCount">
      <summary>識別子の数を保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.PainterChain._chainNode">
      <summary>描画ノードを保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.PainterChain._count">
      <summary>ペインターの数をカウントします。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.PainterChain.GetId">
      <summary>新しい位置識別子を取得します。</summary>
      <returns>新しい位置識別子</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.PainterChain.SaveLayerIndex(System.Int32,System.Int32)">
      <summary>レイヤインデックスを位置識別子に保存します。</summary>
      <param name="id">一意の位置識別子</param>
      <param name="index">_layer配列内のレイヤインデックス</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.PainterChain.RetrieveLayerIndex(System.Int32)">
      <summary>位置識別子からレイヤインデックスを取得します。</summary>
      <param name="id">一意の位置識別子</param>
      <returns>_layer配列のインデックス</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.PainterChain.PreviousPainter(System.Int32)">
      <summary>指定した位置識別子に従って、チェイン内の前のペインターを取得します。</summary>
      <param name="id">一意の位置識別子</param>
      <value>ペインター。存在しない場合はNullを返します。</value>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.PainterChain.Add(FarPoint.Win.Text.TextRender.ChainOrder,FarPoint.Win.Text.TextRender.IPainter)">
      <summary>別のレイヤ上のチェインにペインターを追加します。</summary>
      <param name="order">チェイン順序</param>
      <param name="painter">ペインター</param>
      <returns>このチェイン内での一意の位置識別子</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.PainterChain.Remove(System.Int32)">
      <summary>チェインからペインターを削除します。</summary>
      <param name="id">一意の位置識別子</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.PainterChain.Draw(System.Object,System.Drawing.Rectangle,System.Object,System.Int32)">
      <summary>指定したコンテキストを使用するか、境界に基づいて、オブジェクトを描画します。</summary>
      <param name="context">コンテキスト</param>
      <param name="bounds">境界矩形</param>
      <param name="obj">描画するオブジェクト</param>
      <param name="embeddingLevel">埋め込みレベルを表す数値</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.PainterChain.Clone">
      <summary>現在のインスタンスのコピーである新しいオブジェクトを作成します。</summary>
      <returns>このインスタンスのコピーである新しいオブジェクト</returns>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.PainterChain.Count">
      <summary>このチェイン内のペインターの数を取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.PainterChain.ChainNode">
      <summary>ペインターの保存に使用されるノードを定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.PainterChain.ChainNode.#ctor(System.Int32,FarPoint.Win.Text.TextRender.ChainOrder,FarPoint.Win.Text.TextRender.IPainter)">
      <summary>新しいチェインノードを作成します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.PainterChain.ChainNode.Id">
      <summary>位置識別子を保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.PainterChain.ChainNode.Order">
      <summary>チェイン順序を保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.PainterChain.ChainNode.Painter">
      <summary>ペインターを保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.PainterChain.ChainNode.Next">
      <summary>次のノードを指し示します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.MeasurerSit">
      <summary>メジャラーチェインにメジャラーを追加するための場所を提供します。</summary>
      <remarks>メジャラーチェインにメジャラーを追加し、メジャラーチェインからメジャラーを削除する機会を提供します。</remarks>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.MeasurerSit._attachedContext">
      <summary>このテキストメジャラーがコンテキストに関連付けられているかどうかを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.MeasurerSit._attachedId">
      <summary>関連付けられた識別子を示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.MeasurerSit._measurer">
      <summary>メジャラーを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.MeasurerSit._defaultMeasurer">
      <summary>デフォルトのメジャラーを示します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.MeasurerSit.#ctor(System.Object,FarPoint.Win.Text.TextRender.ChainOrder)">
      <summary>このメジャラー接続場所をコンテキストに追加します。</summary>
      <param name="context">コンテキスト</param>
      <param name="order">チェイン順序</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.MeasurerSit.IsAttachedContext(System.Object)">
      <summary>コンテキストが関連付けられているかどうかを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.MeasurerSit.Dispose">
      <summary>関連付けられたコンテキストからこの場所を削除します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.MeasurerSit.DefaultMeasure(System.Object,System.Object)">
      <summary>前のメジャラーを使用して、指定したコンテキストでの指定したオブジェクトのサイズを測定します。</summary>
      <param name="context">コンテキスト</param>
      <param name="obj">測定するオブジェクト</param>
      <returns>オブジェクトの<see cref="T:System.Drawing.Size" /></returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.MeasurerSit.Measure(System.Object,System.Object)">
      <summary>指定したコンテキストで、指定したオブジェクトのサイズを測定します。</summary>
      <param name="context">コンテキスト</param>
      <param name="obj">測定するオブジェクト</param>
      <returns>オブジェクトの<see cref="T:System.Drawing.Size" /></returns>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.MeasurerSit.Measurer">
      <summary>この場所に接続されているメジャラーを取得または設定します。</summary>
      <value>接続されているメジャラー</value>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.MeasurerSit.DefaultMeasurer">
      <summary>前のメジャラーを取得します。</summary>
      <value>前のメジャラー</value>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.MeasurerSit.InnerPreviousMeasurer">
      <summary>メジャラーチェイン内での前のメジャラーへのアクセスに使用されるクラスを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.MeasurerSit.InnerPreviousMeasurer._sit">
      <summary>オーナー接続場所を保持します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.MeasurerSit.InnerPreviousMeasurer.#ctor(FarPoint.Win.Text.TextRender.MeasurerSit)">
      <summary>内部の前のメジャラーを新規作成します。</summary>
      <param name="sit">オーナー接続場所を示す<see cref="T:FarPoint.Win.Text.TextRender.MeasurerSit" /></param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.MeasurerSit.InnerPreviousMeasurer.Measure(System.Object,System.Object)">
      <summary>指定したコンテキストで、指定したオブジェクトのサイズを測定します。</summary>
      <param name="context">コンテキスト</param>
      <param name="obj">オブジェクト</param>
      <returns>オブジェクトの<see cref="T:System.Drawing.Size" /></returns>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.PainterSit">
      <summary>ペインターチェインにペインターを追加するための場所を提供します。</summary>
      <remarks>ペインターチェインにペインターを追加し、ペインターチェインからペインターを削除する機会を提供します。</remarks>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.PainterSit._attachedContext">
      <summary>このテキストメジャラーがコンテキストに関連付けられているかどうかを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.PainterSit._attachedId">
      <summary>関連付けられた識別子を示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.PainterSit._painter">
      <summary>ペインターを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.PainterSit._defaultPainter">
      <summary>デフォルトのペインターを示します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.PainterSit.#ctor(System.Object,FarPoint.Win.Text.TextRender.ChainOrder)">
      <summary>このペインター接続場所をコンテキストに追加します。</summary>
      <param name="context">コンテキスト</param>
      <param name="order">チェイン順序</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.PainterSit.IsAttachedContext(System.Object)">
      <summary>コンテキストが関連付けられているかどうかを返します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.PainterSit.Dispose">
      <summary>関連付けられたコンテキストからこの場所を削除します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.PainterSit.DefaultDraw(System.Object,System.Drawing.Rectangle,System.Object,System.Int32)">
      <summary>描画チェイン内の前のペインターを使用して、オブジェクトを描画します。</summary>
      <param name="context">コンテキスト</param>
      <param name="bounds">境界矩形</param>
      <param name="obj">描画するオブジェクト</param>
      <param name="embeddingLevel">埋め込みレベルを表す数値</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.PainterSit.Draw(System.Object,System.Drawing.Rectangle,System.Object,System.Int32)">
      <summary>指定したコンテキストを使用するか、境界に基づいて、オブジェクトを描画します。</summary>
      <param name="context">コンテキスト</param>
      <param name="bounds">境界矩形</param>
      <param name="obj">描画するオブジェクト</param>
      <param name="embeddingLevel">埋め込みレベルを表す数値</param>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.PainterSit.Painter">
      <summary>この場所に接続されているテキストペインターを取得または設定します。</summary>
      <value>接続されているペインター</value>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.PainterSit.DefaultPainter">
      <summary>前のペインターを取得します。</summary>
      <value>前のペインターを示す<see cref="T:FarPoint.Win.Text.TextRender.IMeasurer" />。</value>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.PainterSit.InnerPreviousPainter">
      <summary>ペインターチェイン内での前のペインターへのアクセスに使用されるクラスを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.PainterSit.InnerPreviousPainter._sit">
      <summary>オーナー接続場所を保持します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.PainterSit.InnerPreviousPainter.#ctor(FarPoint.Win.Text.TextRender.PainterSit)">
      <summary>内部の前のペインターを新規作成します。</summary>
      <param name="sit">オーナー接続場所を示す<see cref="T:FarPoint.Win.Text.TextRender.PainterSit" /></param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.PainterSit.InnerPreviousPainter.Draw(System.Object,System.Drawing.Rectangle,System.Object,System.Int32)">
      <summary>指定したコンテキストを使用するか、境界に基づいて、オブジェクトを描画します。</summary>
      <param name="context">コンテキスト</param>
      <param name="bounds">境界矩形</param>
      <param name="obj">描画するオブジェクト</param>
      <param name="embeddingLevel">埋め込みレベルを表す数値</param>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.NormalTextMeasurer">
      <summary>通常のテキスト（タブ、改行、および無効な文字は含まれません）の測定に使用されるメジャラーを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.NormalTextMeasurer.Measure(System.Object,System.Object)">
      <summary>指定したコンテキストで、指定したオブジェクトのサイズを測定します。</summary>
      <param name="context">コンテキスト</param>
      <param name="obj">測定するオブジェクトを示す<b>object</b>。</param>
      <returns>オブジェクトの<see cref="T:System.Drawing.Size" />を返します。</returns>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.NormalTextPainter">
      <summary>通常のテキスト（タブ、改行、および無効な文字は含まれません）の描画に使用されるペインターを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.NormalTextPainter.Draw(System.Object,System.Drawing.Rectangle,System.Object,System.Int32)">
      <summary>指定したコンテキストを使用するか、境界に基づいて、オブジェクトを描画します。</summary>
      <param name="context">コンテキスト</param>
      <param name="bounds">境界矩形</param>
      <param name="obj">描画するオブジェクト</param>
      <param name="embeddingLevel">埋め込みレベルを表す数値</param>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.EmptyPainter">
      <summary>何も描画しないペインターを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.EmptyPainter.Draw(System.Object,System.Drawing.Rectangle,System.Object,System.Int32)">
      <summary>指定したコンテキストを使用するか、境界に基づいて、オブジェクトを描画します。</summary>
      <param name="context">コンテキスト</param>
      <param name="bounds">境界矩形</param>
      <param name="obj">描画するオブジェクト</param>
      <param name="embeddingLevel">埋め込みレベルを表す数値</param>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.TabMeasurer">
      <summary>タブ文字の測定に使用されるメジャラー。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.TabMeasurer._currentWidth">
      <summary>現在のテキストの幅を保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.TabMeasurer._tabSize">
      <summary>タブのサイズを保存します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.TabMeasurer.#ctor(System.Int32,System.Int32[])">
      <summary>新しい<see cref="T:FarPoint.Win.Text.TextRender.TabMeasurer" />クラスを作成します。</summary>
      <param name="currentWidth">現在のテキストの幅</param>
      <param name="tabSize">タブサイズの配列</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.TabMeasurer.Measure(System.Object,System.Object)">
      <summary>指定したコンテキストで、指定したオブジェクトのサイズを測定します。</summary>
      <param name="context">コンテキスト</param>
      <param name="obj">測定するオブジェクト</param>
      <returns>オブジェクトの<see cref="T:System.Drawing.Size" /></returns>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.TabMeasurer.CurrentWidth">
      <summary>現在のテキストの幅を取得または設定します。</summary>
      <value>現在のテキストの幅</value>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.HotkeyEffect">
      <summary>ホットキー効果を定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.HotkeyEffect.Apply(System.Object)">
      <summary>指定したコンテキストに効果を適用します。</summary>
      <param name="context">コンテキスト</param>
      <returns>この適用アクションをキャンセルするための<see cref="T:FarPoint.Win.Text.TextRender.IRestorable" /></returns>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.HotkeyEffect.HotkeyEffectPainter">
      <summary>ホットキー効果の描画に使用されるペインターを表します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.HotkeyEffect.HotkeyEffectPainter._sit">
      <summary>ペインターチェインのペインター接続場所を保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.HotkeyEffect.HotkeyEffectPainter._effect">
      <summary>オーナーのポインタを保持します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.HotkeyEffect.HotkeyEffectPainter.#ctor(FarPoint.Win.Text.TextRender.HotkeyEffect,System.Object)">
      <summary>新しいホットキー効果ペインターを作成します。</summary>
      <param name="effect">オーナーとなるホットキー効果</param>
      <param name="context">コンテキスト</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.HotkeyEffect.HotkeyEffectPainter.Draw(System.Object,System.Drawing.Rectangle,System.Object,System.Int32)">
      <summary>指定したコンテキストを使用するか、境界に基づいて、オブジェクトを描画します。</summary>
      <param name="context">コンテキスト</param>
      <param name="bounds">境界矩形</param>
      <param name="obj">描画するオブジェクト</param>
      <param name="embeddingLevel">埋め込みレベルを表す数値</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.HotkeyEffect.HotkeyEffectPainter.Restore">
      <summary>特定の状態の値を復元します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.TextBindingCollection">
      <summary>テキストへの連結オブジェクトの保存に使用されるコレクションを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.TextBindingCollection._bindings">
      <summary>連結オブジェクトを保存します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.TextBindingCollection.GetEnumerator">
      <summary>項目を移動するための列挙子を取得します。</summary>
      <returns>コレクションの項目を移動するための<see cref="T:System.Collections.IEnumerator" /></returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.TextBindingCollection.PositionOf(System.Object)">
      <summary>連結オブジェクトから、挿入位置または関連付けられた位置を取得します。</summary>
      <param name="value">連結オブジェクト</param>
      <returns>位置</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.TextBindingCollection.InternalAdd(System.Object)">
      <summary>連結オブジェクトをコレクションに追加します。</summary>
      <param name="value">連結オブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.TextBindingCollection.Add(FarPoint.Win.Text.TextRender.HotkeyEffectStyle)">
      <summary>関連付けられたオブジェクトをコレクションに追加して、ホットキーを処理します。</summary>
      <param name="value">関連付けられたテキスト</param>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.HotkeyEffectStyle">
      <summary>テキスト範囲に対してオブジェクトを関連付けます。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.HotkeyEffectStyle._range">
      <summary>関連付けられた範囲を保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.HotkeyEffectStyle._hotkeyEffect">
      <summary>関連付けられたオブジェクトを保存します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.HotkeyEffectStyle.#ctor(FarPoint.Win.Text.TextRender.TextRange)">
      <summary>新しいテキスト関連付けを作成します。</summary>
      <param name="range">関連付ける範囲</param>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.HotkeyEffectStyle.Range">
      <summary>オブジェクトの関連付けられた範囲を取得します。</summary>
      <value>関連付けられた範囲を表す<see cref="T:FarPoint.Win.Text.TextRender.TextRange" /></value>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.HotkeyEffectStyle.HotkeyEffect">
      <summary>関連付けられたオブジェクトを取得します。</summary>
      <value>関連付けられたオブジェクト</value>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools">
      <summary>ユーザーが単純なリッチテキストをレンダリングするために実装できるツールのコレクションを定義します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools.SimpleContext">
      <summary>ツールの単純なコンテキストを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.SimpleContext._graphics">
      <summary>Graphics32を保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.SimpleContext._measurerChain">
      <summary>メジャラーチェインを保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.SimpleContext._painterChain">
      <summary>ペインターチェインを保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.SimpleContext._font">
      <summary>フォントのハンドル</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.SimpleContext._textColor">
      <summary>テキストの色</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.SimpleContext.IsRightToLeft">
      <summary>レイアウトが右から左かどうか</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.SimpleContext.HotkeyPrefix">
      <summary>HotkeyPrefix</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimpleContext.#ctor(FarPoint.Win.Text.Graphics32)">
      <summary>新しい<see cref="T:FarPoint.Win.Text.TextRender.SimpleTools.SimpleContext" />クラスを作成します。</summary>
      <param name="graphics">
        <see cref="T:FarPoint.Win.Text.Graphics32" />
      </param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimpleContext.#ctor(FarPoint.Win.Text.Graphics32,FarPoint.Win.Text.TextRender.IMeasurer,FarPoint.Win.Text.TextRender.IPainter)">
      <summary>新しい<see cref="T:FarPoint.Win.Text.TextRender.SimpleTools.SimpleContext" />クラスを作成します。</summary>
      <param name="graphics">グラフィックデバイス</param>
      <param name="defaultMeasurer">デフォルトのメジャラー</param>
      <param name="defaultPainter">デフォルトのペインター</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimpleContext.FarPoint#Win#Text#TextRender#IPainterChain#PreviousPainter(System.Int32)">
      <summary>指定した位置識別子に従って、チェイン内の前のペインターを取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimpleContext.FarPoint#Win#Text#TextRender#IPainterChain#Add(FarPoint.Win.Text.TextRender.ChainOrder,FarPoint.Win.Text.TextRender.IPainter)">
      <summary>別のレイヤ上のチェインにペインターを追加します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimpleContext.FarPoint#Win#Text#TextRender#IPainterChain#Remove(System.Int32)">
      <summary>チェインからペインターを削除します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimpleContext.FarPoint#Win#Text#TextRender#IMeasurerChain#PreviousMeasurer(System.Int32)">
      <summary>一意の位置識別子に従って、チェイン内の前のメジャラーを取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimpleContext.FarPoint#Win#Text#TextRender#IMeasurerChain#Add(FarPoint.Win.Text.TextRender.ChainOrder,FarPoint.Win.Text.TextRender.IMeasurer)">
      <summary>チェインにメジャラーを追加します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimpleContext.FarPoint#Win#Text#TextRender#IMeasurerChain#Remove(System.Int32)">
      <summary>チェインからメジャラーを削除します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimpleContext.FarPoint#Win#Text#TextRender#IPainter#Draw(System.Object,System.Drawing.Rectangle,System.Object,System.Int32)">
      <summary>指定したコンテキストを使用するか、境界に基づいて、オブジェクトを描画します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimpleContext.FarPoint#Win#Text#TextRender#IMeasurer#Measure(System.Object,System.Object)">
      <summary>指定したコンテキストで、指定したオブジェクトのサイズを測定します。</summary>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.SimpleTools.SimpleContext.Graphics">
      <summary>
        <see cref="T:FarPoint.Win.Text.Graphics32" />オブジェクトを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.SimpleTools.SimpleContext.FarPoint#Win#Text#TextRender#IPainterChain#Count">
      <summary>このチェインに含まれるペインターの数を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.SimpleTools.SimpleContext.FarPoint#Win#Text#TextRender#IMeasurerChain#Count">
      <summary>チェイン内のメジャラーの数を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.SimpleTools.SimpleContext.FarPoint#Win#Text#TextRender#IDeviceContext#Handle">
      <summary>デバイスコンテキストのハンドルを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.SimpleTools.SimpleContext.Font">
      <summary>選択されているフォントのハンドルを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.SimpleTools.SimpleContext.TextColor">
      <summary>テキストの色を取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools.PureTextWordParser">
      <summary>純粋なテキストを単語に解析するために使用されるテキストパーサーを定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.PureTextWordParser.Parse(FarPoint.Win.Text.GlobalizedString)">
      <summary>指定したテキストを解析し、テキストセグメントのコレクションを取得します。</summary>
      <param name="text">テキスト文字列</param>
      <returns>解析されたテキストセグメントのコレクション</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.PureTextWordParser.Parse(FarPoint.Win.Text.GlobalizedString,System.Int32)">
      <summary>オーバーライドされます。指定した位置に最も近い解析結果を検索します。</summary>
      <param name="text">テキスト文字列</param>
      <param name="position">位置</param>
      <returns>解析結果</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.PureTextWordParser.Parse(FarPoint.Win.Text.GlobalizedString,System.Int32,System.Int32@)">
      <summary>オーバーライドされます。指定したテキストを解析し、解析結果を返します。</summary>
      <param name="text">テキスト文字列</param>
      <param name="start">開始位置</param>
      <param name="convertedLength">変換されたテキストの長さ</param>
      <returns>解析結果</returns>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools.PureTextWordParser.ParsedResultEnumerator">
      <summary>解析結果コレクションの移動に使用される列挙子を定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.PureTextWordParser.ParsedResultEnumerator._parser">
      <summary>パーサーを保持します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.PureTextWordParser.ParsedResultEnumerator._text">
      <summary>解析するテキストを保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.PureTextWordParser.ParsedResultEnumerator._current">
      <summary>現在の結果を保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.PureTextWordParser.ParsedResultEnumerator._parsedPosition">
      <summary>現在の解析位置を保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.PureTextWordParser.ParsedResultEnumerator._parsedIndex">
      <summary>現在のインデックスを保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.PureTextWordParser.ParsedResultEnumerator._resultCache">
      <summary>解析結果を保存します。このフィールドがNullの場合、列挙子は結果をキャッシュしません。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.PureTextWordParser.ParsedResultEnumerator._parsedTextLength">
      <summary>解析されたテキストの長さを示します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.PureTextWordParser.ParsedResultEnumerator.#ctor(FarPoint.Win.Text.TextRender.SimpleTools.PureTextWordParser,FarPoint.Win.Text.GlobalizedString,System.Boolean)">
      <summary>新しい<seealso cref="T:FarPoint.Win.Text.TextRender.SimpleTools.PureTextWordParser.ParsedResultEnumerator" />クラスを作成します。</summary>
      <param name="parser">パーサーを示すTextParserBase。</param>
      <param name="text">列挙する必要があるテキスト。</param>
      <param name="cacheParsedResult">解析結果をキャッシュするかどうかを示します。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.PureTextWordParser.ParsedResultEnumerator.Reset">
      <summary>列挙子をリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.PureTextWordParser.ParsedResultEnumerator.MoveNext">
      <summary>列挙子を次の解析結果に移動します。</summary>
      <returns>次の解析結果がある場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.PureTextWordParser.ParsedResultEnumerator.Dispose">
      <summary>キャッシュされている結果を破棄します。</summary>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.SimpleTools.PureTextWordParser.ParsedResultEnumerator.Current">
      <summary>現在の解析結果を取得します。</summary>
      <value>解析結果</value>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools.Breaker">
      <summary>デフォルトのテキストブレーカー（テキストを複数のセグメントに分断できる）を定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.Breaker.CanBreak(FarPoint.Win.Text.TextRender.TextSegment,System.Boolean)">
      <summary>指定したテキストセグメントが複数のセグメントに分断できるかどうかを返します。</summary>
      <param name="segment">分断するテキストセグメント</param>
      <param name="forced">分断アクションを強制するかどうか</param>
      <returns>テキストをセグメントに分断できる場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools.TextReader">
      <summary>テキストのスタイルを処理する方法を表します。テキストコンポジッターに適合するコンテキストとセグメントを提供します。</summary>
      <remarks>1. このツリーの深さは2です。2. 順次読み取りのみをサポートします。たとえば、[0,2][3,4][5,6][7,8][9,10]や[0,2][5,6][9,10]はサポートされますが、[3,4][0,2][7,8][5,6]はサポートされません。</remarks>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextReader._context">
      <summary>出力デバイスを表すコンテキストを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextReader._segments">
      <summary>純粋なテキストまたはスクリプトから解析されたセグメントを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextReader._attachments">
      <summary>セグメントに連結された関連付けを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextReader._version">
      <summary>ブラウザーのバージョンを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextReader._hasAttachments">
      <summary>関連付けがあるかどうかを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextReader._segment">
      <summary>現在参照中のセグメントを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextReader._subSegments">
      <summary>サブセグメントを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextReader._repealingActions">
      <summary>取り消しアクションの保存に使用されるリストを表します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextReader._processedSegmentLength">
      <summary>処理されたセグメントの長さを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextReader._currentIndex">
      <summary>セグメントの現在のインデックスを保存します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.#ctor(System.Object,System.Collections.IEnumerator,System.Collections.IEnumerator)">
      <summary>新しいテキストリーダーを作成します。</summary>
      <param name="context">出力デバイスを表すコンテキスト</param>
      <param name="segments">純粋なテキストまたはスクリプトから解析されたセグメント</param>
      <param name="attachments">セグメントに連結された関連付け</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.Reset">
      <summary>列挙子をリセットします。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.Expand">
      <summary>サブセグメントを取得します。</summary>
      <returns>サブセグメントを表す<b>IExtendedTreeEnumerator</b></returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.AddRepealingAction(System.Int32,FarPoint.Win.Text.TextRender.IRestorable)">
      <summary>アクションリストに取り消しアクションを追加します。</summary>
      <param name="position">実行位置</param>
      <param name="doing">アクションを実行するための<b>IRestorable</b></param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.Repeal(System.Int32)">
      <summary>取り消しアクションを実行します。</summary>
      <param name="position">現在の位置</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.UpdateContext(System.Int32)">
      <summary>関連付けでコンテキストを更新します。</summary>
      <param name="position">更新位置。</param>
      <returns>グリフを検索するかどうか</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.MoveNext">
      <summary>列挙子を次のセグメントに移動します。それまで展開されていた結果は無効になります。</summary>
      <value>次のセグメントがある場合はTrue、それ以外の場合はFalse</value>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.MoveTo(System.Int32)">
      <summary>指定したインデックスに移動します。</summary>
      <param name="index">インデックス</param>
      <returns>指定したインデックスに移動できる場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.Context">
      <summary>コンテキストを取得します。</summary>
      <value>コンテキスト</value>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.Current">
      <summary>現在のセグメントを取得します。</summary>
      <value>現在のセグメント</value>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.Segments">
      <summary>セグメントを取得または設定します。</summary>
      <value>セグメント</value>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.FirstRepealingPosition">
      <summary>最初の取り消し位置を取得します。</summary>
      <value>取り消しを実行する最初の位置</value>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.CurrentIndex">
      <summary>現在のインデックスを取得します。</summary>
      <value>現在のインデックス</value>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.SubSegements">
      <summary>サブセグメントの移動に使用されるクラスを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.SubSegements._owner">
      <summary>オーナーTextReaderを保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.SubSegements._version">
      <summary>TextRenderの現在のバージョンを保存します。バージョンが変更された場合、この列挙子は無効です。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.SubSegements._offset">
      <summary>現在のセグメントの先頭からの、現在のサブセグメントのオフセットを保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.SubSegements._length">
      <summary>現在のサブセグメントの長さを保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.SubSegements._insertedObject">
      <summary>現在の位置に挿入されたオブジェクトを保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.SubSegements._currentIndex">
      <summary>セグメントの現在のインデックスを保存します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.SubSegements.#ctor(FarPoint.Win.Text.TextRender.SimpleTools.TextReader)">
      <summary>新しい<see cref="T:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.SubSegements" />クラスを作成します。</summary>
      <param name="owner">オーナーを示す<see cref="T:FarPoint.Win.Text.TextRender.SimpleTools.TextReader" />。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.SubSegements.CheckVersion">
      <summary>現在のバージョンが適切かどうかをチェックします。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.SubSegements.Expand">
      <summary>次のレベルは必要ありません。ユーザーはこのクラスの外部で他のリーダーを自由に作成できます。</summary>
      <returns>常に<b>Null</b>を返します。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.SubSegements.Reset">
      <summary>申し訳ありませんが、このメソッドを実装する方法がわかりません。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.SubSegements.MoveNext">
      <summary>次のサブセグメントに移動します。</summary>
      <returns>次のサブセグメントに移動できる場合はTrue、それ以外の場合はFalseを返します。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.SubSegements.MoveTo(System.Int32)">
      <summary>オブジェクトを移動する列挙子を、指定したインデックスに移動します。</summary>
      <param name="index">インデックス</param>
      <returns>指定したインデックスに移動できる場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.SubSegements.Current">
      <summary>現在のサブセグメントを取得します。</summary>
      <value>現在のサブセグメントを示す<b>object</b>。</value>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.SubSegements.CurrentIndex">
      <summary>現在のインデックスを取得します。</summary>
      <value>現在のインデックス</value>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.RepealingAction">
      <summary>取り消しアクションを保存する方法を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.RepealingAction.#ctor(System.Int32,FarPoint.Win.Text.TextRender.IRestorable)">
      <summary>新しい取り消しアクションを作成します。</summary>
      <param name="position">取り消し位置</param>
      <param name="doing">取り消しアクションを実行するための<see cref="T:FarPoint.Win.Text.TextRender.IRestorable" /></param>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.RepealingAction.Position">
      <summary>取り消し位置を決定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextReader.RepealingAction.Doing">
      <summary>取り消しアクションを実行するための<see cref="T:FarPoint.Win.Text.TextRender.IRestorable" />を決定します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools.DefaultTextSegmentMeasurer">
      <summary>テキストセグメントのサイズの測定に使用されるメジャラーを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.DefaultTextSegmentMeasurer._text">
      <summary>テキストを保存します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.DefaultTextSegmentMeasurer.#ctor(FarPoint.Win.Text.GlobalizedString)">
      <summary>新しい<see cref="T:FarPoint.Win.Text.TextRender.SimpleTools.DefaultTextSegmentMeasurer" />を作成します。</summary>
      <param name="text">テキスト文字列全体</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.DefaultTextSegmentMeasurer.Measure(System.Object,System.Object)">
      <summary>指定したコンテキストで、指定したオブジェクトのサイズを測定します。</summary>
      <param name="context">コンテキスト</param>
      <param name="obj">測定するオブジェクトを示す<b>object</b>。</param>
      <returns>オブジェクトの<see cref="T:System.Drawing.Size" />を返します。</returns>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools.DefaultTextSegementPainter">
      <summary>テキストセグメントの描画に使用されるペインターを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.DefaultTextSegementPainter._text">
      <summary>テキストを保存します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.DefaultTextSegementPainter.#ctor(FarPoint.Win.Text.GlobalizedString,System.Boolean)">
      <summary>テキストセグメントの新しいデフォルトのペインターを作成します。</summary>
      <param name="text">グローバル化テキスト文字列全体</param>
      <param name="inTopDown">縦書きかどうか</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.DefaultTextSegementPainter.Draw(System.Object,System.Drawing.Rectangle,System.Object,System.Int32)">
      <summary>指定したコンテキストを使用するか、境界に基づいて、オブジェクトを描画します。</summary>
      <param name="context">コンテキスト</param>
      <param name="bounds">境界矩形</param>
      <param name="obj">描画するオブジェクト</param>
      <param name="embeddingLevel">埋め込みレベルを表す数値</param>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools.VerticalTextMeasurer">
      <summary>縦書きテキストの測定に使用されるメジャラー。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.VerticalTextMeasurer.Measure(System.Object,System.Object)">
      <summary>指定したコンテキストで、指定したオブジェクトのサイズを測定します。</summary>
      <param name="context">コンテキスト</param>
      <param name="obj">測定するオブジェクトを示す<b>object</b>。</param>
      <returns>オブジェクトの<see cref="T:System.Drawing.Size" />を返します。</returns>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools.VerticalTextPainter">
      <summary>縦書きテキストの描画に使用されるペインター。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.VerticalTextPainter.Draw(System.Object,System.Drawing.Rectangle,System.Object,System.Int32)">
      <summary>指定したコンテキストを使用するか、境界に基づいて、オブジェクトを描画します。</summary>
      <param name="context">コンテキスト</param>
      <param name="bounds">境界矩形</param>
      <param name="obj">描画するオブジェクト</param>
      <param name="embeddingLevel">埋め込みレベルを表す数値</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.VerticalTextPainter.IsSpecialJapaneseChar(System.Char)">
      <summary>日本語文字を特別に処理する必要があるかどうかを判定します。</summary>
      <param name="c">入力文字</param>
      <returns>文字を特別に処理する必要があるかどうか</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.VerticalTextPainter.DrawVerticalSpecialJapaneseChar(System.IntPtr,System.Char,System.Int32,System.Int32,System.Int32)">
      <summary>Draw a vertical Japanese 'c`' in current context.</summary>
      <param name="hDC">表示デバイスのデバイスコンテキストを示します。</param>
      <param name="c">文字を示します。</param>
      <param name="x">左座標を示します。</param>
      <param name="y">上座標を示します。</param>
      <param name="charHeight">文字の高さを示します。</param>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools.PageInfo">
      <summary>ページ情報を保存するクラスを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.PageInfo.Size">
      <summary>ページのサイズを示す<b>Size</b>。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.PageInfo.Margins">
      <summary>ページの周囲の余白を示す<b>Margins</b>。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.PageInfo.WordInfos">
      <summary>単語情報を保存する配列。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.PageInfo.ParagraphInfos">
      <summary>段落情報を保存する配列。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.PageInfo.Reverse">
      <summary>行の位置を変更します。</summary>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.SimpleTools.PageInfo.ClientBounds">
      <summary>クライアント境界を取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools.ParagraphInfo">
      <summary>段落情報を保存するクラスを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.ParagraphInfo.Location">
      <summary>ページの位置を示す<b>Point</b>。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.ParagraphInfo.Size">
      <summary>ページのサイズを示す<b>Size</b>。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.ParagraphInfo.Margins">
      <summary>段落の周囲の余白を示す<b>Margins</b>。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.ParagraphInfo.WordRange">
      <summary>この段落情報に含まれている単語範囲を示す<b>TextRange</b>。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.ParagraphInfo.LineInfos">
      <summary>行情報を保存する配列。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.ParagraphInfo.Reverse">
      <summary>行の位置を変更します。</summary>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.SimpleTools.ParagraphInfo.ClientBounds">
      <summary>クライアント境界を取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools.LineInfo">
      <summary>行情報を保存するクラスを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.LineInfo.Location">
      <summary>ページの位置を示す<b>Point</b>。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.LineInfo.Size">
      <summary>ページのサイズを示す<b>Size</b>。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.LineInfo.Margins">
      <summary>行の周囲の余白を示す<b>Margins</b>。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.LineInfo.BeforeWrap">
      <summary>折り返し前を保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.LineInfo.AfterWrap">
      <summary>折り返し後を保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.LineInfo.WordRange">
      <summary>この段落情報に含まれている単語範囲を示す<b>TextRange</b>。</summary>
      <remarks>折り返された単語は含まれません。</remarks>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.SimpleTools.LineInfo.ClientBounds">
      <summary>クライアント境界を取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools.WrapInfo">
      <summary>折り返し情報を保存するクラスを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.WrapInfo.BreakedOffset">
      <summary>分断されたセグメント内での分断位置のオフセットを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.WrapInfo.BreakedSegmentIndex">
      <summary>分断されたセグメントのインデックスを示す<b>int</b>。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.WrapInfo.Location">
      <summary>ページの位置を示す<b>Point</b>。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.WrapInfo.Size">
      <summary>ページのサイズを示す<b>Size</b>。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.WrapInfo.BreakedWordIndex">
      <summary>分断された単語のインデックスを示す<b>int</b>。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.WrapInfo.TotalJustify">
      <summary>両端揃えしたときの各グリフ間の幅の合計を定義します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools.WordInfo">
      <summary>行情報を保存するクラスを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.WordInfo.Location">
      <summary>単語の位置を示す<b>Point</b>。</summary>
      <remarks>この位置は、行情報の左上隅からのオフセットです。</remarks>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.WordInfo.Size">
      <summary>単語のサイズを示す<b>Size</b>。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.WordInfo.Attribute">
      <summary>単語の属性を示す<b>WordAttribute</b>。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.WordInfo.SegmentInfos">
      <summary>セグメント情報を保存する配列。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.WordInfo.EmbeddingLevel">
      <summary>右から左に記述するブロック:0～10,000の奇数、左から右に記述するブロック:0～10,000の偶数、LRO（Left-to-right override）効果の適用範囲内の、右から左に記述するブロック:10,000～20,000の奇数、LRO（Left-to-right override）効果の適用範囲内の、左から右に記述するブロック:10,000～20,000の奇数、RLO（Right-to-left override）効果の適用範囲内の、左から右に記述するブロック:20,000を超える偶数、RLO（Right-to-left override）効果の適用範囲内の、右から左に記述するブロック:20,000を超える偶数。オーバーライド効果が適用されていない場合には、文字列の長さが10,000を超えないかぎり、EmbeddingLevelが10,000に達することはほとんどありません。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.WordInfo.BidirectionalCharacteristic">
      <summary>左から右に記述する文字:0、中立文字（スペース、記号、句読点など）:-1、左から右に記述する弱文字（欧数字）:2、右から左に記述する文字:1、制御文字、RLO（RightToLeft override）:11、制御文字、LRO（LeftToRight override）:10、制御文字、PDF（Pop Directional Format）:20、制御文字、RLE（RightToLeft embedding）:13、制御文字、LRE（LeftToRight embedding）:12。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools.SegmentInfo">
      <summary>行情報を保存するクラスを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.SegmentInfo.Location">
      <summary>単語の位置を示す<b>Point</b>。</summary>
      <remarks>この位置は、行情報の左上隅からのオフセットです。</remarks>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.SegmentInfo.Size">
      <summary>単語のサイズを示す<b>Size</b>。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.SegmentInfo.GlyphCount">
      <summary>セグメント内のグリフの数を定義する<b>int</b>。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.SegmentInfo.TotalJustify">
      <summary>両端揃えしたときの各グリフ間の幅の合計を定義します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools.ITextInfoProvider">
      <summary>テキストフォントの作成に使用されるITextInfoProviderインタフェースを定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.ITextInfoProvider.CreatePageInfo">
      <summary>PageInfoクラスの新しいインスタンスを作成します。</summary>
      <returns>PageInfoクラスの新しいインスタンスを返します。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.ITextInfoProvider.CreateParagraphInfo(System.Int32)">
      <summary>ParagraphInfoクラスの新しいインスタンスを作成します。</summary>
      <param name="paragraphIndex">段落のインデックスを示す<b>int</b>。</param>
      <returns>ParagraphInfoクラスの新しいインスタンスを返します。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.ITextInfoProvider.CreateLineInfo(System.Int32,System.Int32)">
      <summary>LineInfoクラスの新しいインスタンスを作成します。</summary>
      <param name="paragraphIndex">段落のインデックスを示す<b>int</b>。</param>
      <param name="lineIndex">行のインデックスを示す<b>int</b>。</param>
      <returns>LineInfoクラスの新しいインスタンスを返します。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.ITextInfoProvider.CreateWordInfo">
      <summary>WordInfoクラスの新しいインスタンスを作成します。</summary>
      <returns>WordInfoクラスの新しいインスタンスを返します。</returns>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageRuler">
      <summary>ページの単純なルーラーを示します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageRuler.#ctor(System.Int32)">
      <summary>新しい<see cref="T:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageRuler" />クラスを作成します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageRuler.Width">
      <summary>ページの幅を示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageRuler.TabSize">
      <summary>タブマークを示します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageTemplate">
      <summary>ページ内のテキストの単純なテンプレートを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageTemplate._pageRuler">
      <summary>ページルーラーを保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageTemplate._paragraphTemplates">
      <summary>段落テンプレートを保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageTemplate._defaultParagraphTemplate">
      <summary>すべての段落のテンプレートを示す<see cref="T:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageTemplate.ParagraphTemplate" />。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageTemplate.Margins">
      <summary>ページの余白を示す<see cref="F:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageTemplate.Margins" />。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageTemplate.#ctor(FarPoint.Win.Text.TextRender.SimpleTools.SimplePageRuler)">
      <summary>新しいページテンプレートを作成します。</summary>
      <param name="pageRuler">ページルーラーを示す<see cref="T:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageRuler" />。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageTemplate.SetSpecialParagraphTemplate(System.Int32,FarPoint.Win.Text.TextRender.SimpleTools.SimplePageTemplate.ParagraphTemplate)">
      <summary>特殊な段落テンプレートを段落インデックスによって設定します。</summary>
      <param name="index">段落インデックスを示す<b>int</b>。</param>
      <param name="template">テンプレートを示す<see cref="T:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageTemplate.ParagraphTemplate" />。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageTemplate.QueryParagraphTemplate(System.Int32)">
      <summary>段落テンプレートをインデックスによって問い合わせます。</summary>
      <param name="index">段落インデックスを示す<b>int</b>。</param>
      <returns>段落テンプレートを示す<see cref="T:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageTemplate.ParagraphTemplate" />。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageTemplate.CreatePageInfo">
      <summary>PageInfoクラスの新しいインスタンスを作成します。</summary>
      <returns>PageInfoクラスの新しいインスタンスを返します。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageTemplate.CreateParagraphInfo(System.Int32)">
      <summary>ParagraphInfoクラスの新しいインスタンスを作成します。</summary>
      <param name="paragraphIndex">段落のインデックスを示す<b>int</b>。</param>
      <returns>ParagraphInfoクラスの新しいインスタンスを返します。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageTemplate.CreateLineInfo(System.Int32,System.Int32)">
      <summary>LineInfoクラスの新しいインスタンスを作成します。</summary>
      <param name="paragraphIndex">段落のインデックスを示す<b>int</b>。</param>
      <param name="lineIndex">行のインデックスを示す<b>int</b>。</param>
      <returns>LineInfoクラスの新しいインスタンスを返します。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageTemplate.CreateWordInfo">
      <summary>WordInfoクラスの新しいインスタンスを作成します。</summary>
      <returns>WordInfoクラスの新しいインスタンスを返します。</returns>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageTemplate.Ruler">
      <summary>ページルーラーを取得します。</summary>
      <remarks>ページルーラーを示す<see cref="T:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageRuler" />。</remarks>
    </member>
    <member name="P:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageTemplate.DefaultParagraphTemplate">
      <summary>デフォルトの段落テンプレートを取得します。</summary>
      <value>すべての段落のテンプレートを示す<see cref="T:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageTemplate.ParagraphTemplate" />。</value>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageTemplate.ParagraphTemplate">
      <summary>段落テンプレートを表すクラスを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageTemplate.ParagraphTemplate.LineLeftIndent">
      <summary>各行の左のインデントを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageTemplate.ParagraphTemplate.LineRightIndent">
      <summary>各行の右のインデントを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.SimplePageTemplate.ParagraphTemplate.Margins">
      <summary>段落の余白を定義します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor">
      <summary>ページ情報の構築に使用されるクラスを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor._measurer">
      <summary>セグメントの測定に使用されるメジャラーを保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor._provider">
      <summary>テンプレートを提供します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor._breaker">
      <summary>セグメントの分断に使用されるブレーカーを保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.MultiLine">
      <summary>複数行をサポートするかどうかを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.DoWrap">
      <summary>折り返すかどうかを示す<b>bool</b>値。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.WrapGreedily">
      <summary>行により多くのテキストを詰め込むかどうかを示す<b>bool</b>値。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.#ctor(FarPoint.Win.Text.TextRender.SimpleTools.ITextInfoProvider,FarPoint.Win.Text.TextRender.IMeasurer,FarPoint.Win.Text.TextRender.SimpleTools.Breaker)">
      <summary>新しいTextCompositorクラスを作成します。</summary>
      <param name="measurer">セグメントの測定に使用されるIMeasure。</param>
      <param name="provider">ページ情報を提供するITextInfoProvider。</param>
      <param name="breaker"></param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.BuildInternal(System.Object,FarPoint.Win.Text.TextRender.SimpleTools.TextReader)">
      <summary>リーダーとコンテキストからテキスト情報を構築します。</summary>
      <param name="context">コンテキスト</param>
      <param name="reader">
        <b>TextReader</b>
      </param>
      <returns>構築結果を表す<b>PageInfo</b>オブジェクト</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.NeedWrap(System.Boolean,System.Int32,System.Int32,System.Int32)">
      <summary>テキストを複数行に分断するかどうかを返します。</summary>
      <param name="isEmptyLine">行が空かどうか</param>
      <param name="lineWidth">行の幅</param>
      <param name="wordOffset">単語のオフセット</param>
      <param name="wordWidth">単語の幅</param>
      <returns>複数行に折り返す必要がある場合はTrue</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.ParseWord(System.Object,FarPoint.Win.Text.TextRender.IExtendedTreeEnumerator,System.Drawing.Size@)">
      <summary>普通の単語を解析します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.ParseTabWord(System.Object,FarPoint.Win.Text.TextRender.IExtendedTreeEnumerator,System.Drawing.Size@,System.Int32)">
      <summary>タブワードを解析します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.BreakWord(System.Object,FarPoint.Win.Text.TextRender.IExtendedTreeEnumerator,FarPoint.Win.Text.TextRender.SimpleTools.WordInfo@,System.Int32@,System.Int32@,FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.PageInfoBuilder,System.Boolean)">
      <summary>普通の単語を分断します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.BreakFullWidthWord(System.Object,FarPoint.Win.Text.TextRender.IExtendedTreeEnumerator,FarPoint.Win.Text.TextRender.SimpleTools.WordInfo@,System.Int32@,FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.PageInfoBuilder,System.Boolean)">
      <summary>普通の全角単語を分断します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.BreakHalfWidthWord(System.Object,FarPoint.Win.Text.TextRender.IExtendedTreeEnumerator,FarPoint.Win.Text.TextRender.SimpleTools.WordInfo@,System.Int32@,System.Int32@,FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.PageInfoBuilder,System.Boolean)">
      <summary>普通の半角単語を分断します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.BreakSegment(System.Object,FarPoint.Win.Text.TextRender.TextSegment,System.Int32,System.Boolean,System.Int32,System.Int32@,System.Drawing.Size@)">
      <summary>単語のセグメントを分断します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.PageInfoBuilder">
      <summary>ページ情報の構築を補助するクラスを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.PageInfoBuilder._provider">
      <summary>テキスト情報のインスタンスを提供するプロバイダーを保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.PageInfoBuilder._measurer">
      <summary>セグメントの測定に使用されるメジャラーを保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.PageInfoBuilder._context">
      <summary>コンテキストを保存します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.PageInfoBuilder.#ctor(FarPoint.Win.Text.TextRender.SimpleTools.ITextInfoProvider,System.Object,FarPoint.Win.Text.TextRender.IMeasurer)">
      <summary>新しいページ情報ビルダーを作成します。</summary>
      <param name="provider">ページ情報を提供するITextInfoProvider</param>
      <param name="context">コンテキスト</param>
      <param name="measurer">メジャラー</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.PageInfoBuilder.BreakLine(FarPoint.Win.Text.TextRender.SimpleTools.WrapInfo[])">
      <summary>現在の行を分断します。</summary>
      <param name="wrapInfos">折り返し情報を含む <see cref="T:FarPoint.Win.Text.TextRender.SimpleTools.WrapInfo" />の配列</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.PageInfoBuilder.NewParagraph">
      <summary>新しい段落を作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.PageInfoBuilder.AddWord(FarPoint.Win.Text.TextRender.SimpleTools.WordInfo)">
      <summary>単語を追加します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.PageInfoBuilder.AddWhiteSpace(FarPoint.Win.Text.TextRender.SimpleTools.WordInfo)">
      <summary>空白を追加します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.PageInfoBuilder.Begin">
      <summary>構築を開始します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.PageInfoBuilder.End">
      <summary>構築を終了します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.PageInfoBuilder.PageInfo">
      <summary>現在のページ情報を示す<see cref="F:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.PageInfoBuilder.PageInfo" />。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.PageInfoBuilder.ParagraphInfo">
      <summary>現在の段落情報を示す<see cref="F:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.PageInfoBuilder.ParagraphInfo" />。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.PageInfoBuilder.LineInfo">
      <summary>現在の行情報を示す<see cref="F:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.PageInfoBuilder.LineInfo" />。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.PageInfoBuilder.IsEmptyLine">
      <summary>この行が空かどうかを示す<b>bool</b>。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.PageInfoBuilder._paragraphInfos">
      <summary>段落情報の保存に使用される配列。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.PageInfoBuilder._lineInfos">
      <summary>行情報の保存に使用される配列。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextCompositor.PageInfoBuilder._wordInfos">
      <summary>単語情報の保存に使用される配列。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools.TextAdjustmentMode">
      <summary>範囲を満たすためにテキストをどのように調整するかを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextAdjustmentMode.None">
      <summary>テキストを調整しません。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextAdjustmentMode.Justify">
      <summary>テキストがすべての範囲を満たさない場合、長さ全体を満たすようにテキストを調整します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextAdjustmentMode.Distribute">
      <summary>Justifyとほぼ同じですが、単語の分散具合が若干異なります。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextAdjustmentMode.DistributeWithSpace">
      <summary>Distributeとほぼ同じですが、先頭と末尾に空白が挿入されます。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools.TextAlignmentor">
      <summary>テキストレイアウトの整列に使用されるクラスを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextAlignmentor.WordAdjustment">
      <summary>単語の調整モードを示す<see cref="T:FarPoint.Win.Text.TextRender.SimpleTools.TextAdjustmentMode" />。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextAlignmentor.LineAdjustment">
      <summary>行の調整モードを示す<see cref="T:FarPoint.Win.Text.TextRender.SimpleTools.TextAdjustmentMode" />。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextAlignmentor.IsRightToLeft">
      <summary>右から左へのレイアウトを表します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextAlignmentor.HotKeyEffect">
      <summary>ホットキー効果を考慮します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextAlignmentor.IsTopToDown">
      <summary>縦書きを表します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextAlignmentor.LineAlginment">
      <summary>行の調整を示す<see cref="T:FarPoint.Win.Text.AlignHorizontal" />。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextAlignmentor.WordAlginment">
      <summary>単語の調整を示す<see cref="T:FarPoint.Win.Text.AlignVertical" />。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.TextAlignmentor.SegmentAlginment">
      <summary>単語の調整を示す<see cref="T:FarPoint.Win.Text.AlignVertical" />。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextAlignmentor.#ctor(FarPoint.Win.Text.AlignVertical,FarPoint.Win.Text.TextRender.SimpleTools.TextAdjustmentMode,FarPoint.Win.Text.AlignHorizontal,FarPoint.Win.Text.TextRender.SimpleTools.TextAdjustmentMode)">
      <summary>新しいTextAlignmentorクラスを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextAlignmentor.Layout(FarPoint.Win.Text.TextRender.SimpleTools.PageInfo,FarPoint.Win.Text.TextRender.SimpleTools.TextReader,FarPoint.Win.Text.GlobalizedString,FarPoint.Win.Text.Graphics32,System.Drawing.Text.HotkeyPrefix)">
      <summary>ページ情報に含まれるテキストの位置をレイアウトします。</summary>
      <param name="pageInfo">書式付きテキストのページ情報</param>
      <param name="reader">テキストリーダー</param>
      <param name="gString">グローバル化テキスト文字列全体</param>
      <param name="g">グラフィックデバイス</param>
      <param name="hotkey">ホットキー接頭辞</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextAlignmentor.LayoutHorizontal(FarPoint.Win.Text.TextRender.SimpleTools.PageInfo,FarPoint.Win.Text.TextRender.SimpleTools.TextReader,FarPoint.Win.Text.GlobalizedString,FarPoint.Win.Text.Graphics32,System.Drawing.Text.HotkeyPrefix)">
      <summary>テキストを水平方向にレイアウトします。</summary>
      <param name="pageInfo">書式付きテキストのページ情報</param>
      <param name="reader">テキストリーダー</param>
      <param name="gString">グローバル化テキスト文字列全体</param>
      <param name="g">グラフィックデバイス</param>
      <param name="hotkey">ホットキー接頭辞</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextAlignmentor.LayoutVertical(FarPoint.Win.Text.TextRender.SimpleTools.PageInfo)">
      <summary>テキストを垂直方向にレイアウトします。</summary>
      <param name="pageInfo">書式付きテキストを示す<b>PageInfo</b>。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.TextAlignmentor.CalculateLineContentWidth(FarPoint.Win.Text.TextRender.SimpleTools.PageInfo,System.Int32,System.Int32)">
      <summary>行の内容の幅を計算します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools.SimpleTextRender">
      <summary>ページ書式内でのテキストのレンダリングを表します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.SimpleTextRender._painter">
      <summary>デフォルトのペインターを表します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.SimpleTextRender.Filter">
      <summary>描画するページの部分をフィルタリングします。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimpleTextRender.#ctor(FarPoint.Win.Text.TextRender.IPainter)">
      <summary>新しい単純なテキストレンダラーを作成します。</summary>
      <param name="painter">デフォルトのペインターを示す<b>IPainter</b>。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimpleTextRender.Draw(System.Object,System.Drawing.Point,FarPoint.Win.Text.TextRender.SimpleTools.PageInfo,FarPoint.Win.Text.TextRender.SimpleTools.TextReader)">
      <summary>指定した位置に、指定したコンテキストで、書式付きテキストを描画します。</summary>
      <param name="context">コンテキスト</param>
      <param name="point">位置</param>
      <param name="pageInfo">ページ情報</param>
      <param name="reader">テキストセグメントのリーダー</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimpleTextRender.DrawWord(System.Object,System.Drawing.Rectangle,FarPoint.Win.Text.TextRender.SimpleTools.TextReader,FarPoint.Win.Text.TextRender.SimpleTools.WordInfo,System.Boolean)">
      <summary>リーダーの現在の単語を描画します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimpleTextRender.DrawSegement(System.Object,System.Drawing.Rectangle,System.Object,System.Int32,System.Int32)">
      <summary>セグメントを描画します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimpleTextRender.DrawBreakedWord(System.Object,System.Drawing.Rectangle,FarPoint.Win.Text.TextRender.SimpleTools.TextReader,FarPoint.Win.Text.TextRender.SimpleTools.WordInfo,FarPoint.Win.Text.TextRender.SimpleTools.WrapInfo,FarPoint.Win.Text.TextRender.SimpleTools.WrapInfo)">
      <summary>リーダーの現在の単語を描画します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimpleTextRender.FilterParagraph(System.Drawing.Rectangle@,FarPoint.Win.Text.TextRender.SimpleTools.PageInfo,System.Int32)">
      <summary>段落の範囲を調整します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimpleTextRender.FilterLine(System.Drawing.Rectangle@,FarPoint.Win.Text.TextRender.SimpleTools.PageInfo,System.Int32,System.Int32,System.Int32)">
      <summary>行の範囲を調整します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools.SimpleTextRender.ShearFilter">
      <summary>行を傾斜させるために使用できる、ISimpleTextRenderFilterを実装したクラスを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.SimpleTextRender.ShearFilter._sinA">
      <summary>傾斜角度のサイン値を保存します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.SimpleTextRender.ShearFilter._cosA">
      <summary>傾斜角度のコサイン値を保存します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimpleTextRender.ShearFilter.#ctor(System.Double)">
      <summary>新しい<see cref="T:FarPoint.Win.Text.TextRender.SimpleTools.SimpleTextRender.ShearFilter" />クラスを作成します。</summary>
      <param name="angle">傾斜角度のラジアン値を示す<b>double</b></param>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimpleTextRender.ShearFilter.FilterParagraph(System.Drawing.Rectangle@,FarPoint.Win.Text.TextRender.SimpleTools.PageInfo,System.Int32)">
      <summary>段落の範囲をフィルタリングします。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimpleTextRender.ShearFilter.FilterLine(System.Drawing.Rectangle@,FarPoint.Win.Text.TextRender.SimpleTools.PageInfo,System.Int32,System.Int32,System.Int32)">
      <summary>行の範囲をフィルタリングします。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextRender.SimpleTools.SimpleTextRotationRender">
      <summary>回転テキストのレンダリングに使用されるクラス。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextRender.SimpleTools.SimpleTextRotationRender._render">
      <summary>テキストレンダラーを保存します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimpleTextRotationRender.#ctor(FarPoint.Win.Text.TextRender.SimpleTools.SimpleTextRender)">
      <summary>新しい<see cref="T:FarPoint.Win.Text.TextRender.SimpleTools.SimpleTextRotationRender" />クラスを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimpleTextRotationRender.Draw(System.Object,System.Drawing.Rectangle,FarPoint.Win.Text.TextRender.SimpleTools.PageInfo,FarPoint.Win.Text.TextRender.SimpleTools.TextReader,FarPoint.Win.Text.TextRender.SimpleTools.SimplePageTemplate,FarPoint.Win.Text.AlignHorizontal,FarPoint.Win.Text.AlignVertical,FarPoint.Win.Text.AlignHorizontal,FarPoint.Win.Text.TextRender.SimpleTools.TextAdjustmentMode,System.Double)">
      <summary>指定した書式付きテキストを描画します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimpleTextRotationRender.Measure(System.Object,System.Drawing.Rectangle,FarPoint.Win.Text.TextRender.SimpleTools.PageInfo,FarPoint.Win.Text.TextRender.SimpleTools.TextReader,FarPoint.Win.Text.TextRender.SimpleTools.SimplePageTemplate,FarPoint.Win.Text.AlignHorizontal,FarPoint.Win.Text.AlignVertical,FarPoint.Win.Text.AlignHorizontal,FarPoint.Win.Text.TextRender.SimpleTools.TextAdjustmentMode,System.Double)">
      <summary>指定した書式付きテキストのサイズを測定します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimpleTextRotationRender.CalculateWidth(System.Drawing.Size,System.Double)">
      <summary>指定した角度に沿ってベース幅を計算します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimpleTextRotationRender.CalculateHeight(System.Drawing.Size,System.Double)">
      <summary>指定した角度に沿って高さを計算します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextRender.SimpleTools.SimpleTextRotationRender.CalculateShearedTextSize(FarPoint.Win.Text.TextRender.SimpleTools.PageInfo,System.Double,System.Int32@,System.Int32@)">
      <summary>ページ情報の傾斜したサイズを計算します。</summary>
      <returns>ページサイズを返します。</returns>
    </member>
    <member name="T:FarPoint.Win.Text.CharEx">
      <summary>標準の.NET Char型のUnicode文字とその拡張を表します。このデータ型の目的は、中国語、日本語、および韓国語の文字のサポートを向上させることです。</summary>
      <remarks>CharEx型は、'\u0000'～'\uffff'の値を持つUnicode文字（マルチバイト）を表します。</remarks>
    </member>
    <member name="F:FarPoint.Win.Text.CharEx._charstarts">
      <summary>Unicode 3.1に基づく文字グループ（文字コード）。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.CharEx._fullhalfblocks">
      <summary>多幅文字のブロックを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.CharEx._mwtable">
      <summary>多幅文字の種類を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.CharEx._halfkana">
      <summary>全角カタカナのマッピングテーブルを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.CharEx._fullkana">
      <summary>半角カタカナのマッピングテーブルを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.CharEx._accentkana">
      <summary>日本語の発音のマッピングテーブルを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.CharEx.MinValue">
      <summary>Charで表現できる最も小さい値を表します。このフィールドは定数です。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.CharEx.MaxValue">
      <summary>Charで表現できる最も大きい値を表します。このフィールドは定数です。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.CharEx.m_value">
      <summary>具体的なUnicode文字を格納します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.#ctor(System.Char)">
      <summary>指定したCharに対応する新しいCharExを作成します。</summary>
      <param name="c">Char構造体</param>
      <remarks>このコンストラクターは、指定された文字（Char構造体）をベースとして<b>CharEx</b>を作成します。</remarks>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.CompareTo(System.Object)">
      <summary>このインスタンスを指定したオブジェクトと比較し、両者の相対関係を示す値を返します。</summary>
      <param name="value">比較するオブジェクト、またはNull参照</param>
      <returns>このインスタンスとvalueの相対値を示す符号付きの数値。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.op_Implicit(System.Char)~FarPoint.Win.Text.CharEx">
      <summary>代入演算子を使用して、Char構造体をCharEx構造体に変換します。</summary>
      <param name="c">Char型の文字</param>
      <returns>cと同じ文字を表すCharExクラス</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.GetCharType(System.Char)">
      <summary>文字の種類を取得します。</summary>
      <param name="c">Unicode文字</param>
      <returns>cの文字の種類を表すCharType</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsCharOfType(System.Char,FarPoint.Win.Text.CharType)">
      <summary>指定した文字が指定した種類かどうかを判定します。</summary>
      <param name="c">Unicode文字</param>
      <param name="type">CharType型の種類</param>
      <returns>文字と種類が文字の種類と一致する場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsMultiWidth(System.Char)">
      <summary>指定したUnicode文字が多幅文字かどうかを判定します。</summary>
      <param name="c">Unicode文字</param>
      <returns>文字が多幅文字の場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsMultiWidth(System.String,System.Int32)">
      <summary>指定した文字列の指定した位置にある文字が多幅文字かどうかを判定します。</summary>
      <param name="s">テキスト文字列</param>
      <param name="index">文字列内の文字の位置</param>
      <returns>sのindex位置にある文字が多幅文字の場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsFullWidth(System.Char)">
      <summary>指定したUnicode文字が全角文字かどうかを判定します。通常、中国語、日本語、および韓国語の文字は全角文字とみなされます。</summary>
      <param name="c">Unicode文字</param>
      <returns>文字が全角文字の場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsFullWidth(System.String,System.Int32)">
      <summary>指定した文字列の指定した位置にある文字が全角文字かどうかを判定します。通常、中国語、日本語、および韓国語の文字は全角文字とみなされます。</summary>
      <param name="s">テキスト文字列</param>
      <param name="index">文字列内の文字の位置</param>
      <returns>sのindex位置にある文字が全角文字の場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsCJK(System.Char)">
      <summary>指定した文字が中国語、日本語、または韓国語の文字かどうかを判定します。</summary>
      <param name="c">文字</param>
      <returns>文字が中国語、日本語、または韓国語の文字の場合は<c>True</c>、それ以外の場合は<c>False</c></returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsCJK(System.String,System.Int32)">
      <summary>文字列の指定したインデックスにある文字が中国語、日本語、または韓国語の文字かどうかを判定します。</summary>
      <param name="s">テキスト文字列</param>
      <param name="index">文字インデックス</param>
      <returns>文字が中国語、日本語、または韓国語の文字の場合は<c>True</c>、それ以外の場合は<c>False</c></returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsOther(System.Char)">
      <summary>Unicode文字が特定の字体に属していないかどうかを判定します。</summary>
      <param name="c">Unicode文字</param>
      <returns>文字がカタカナでない場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsControl(System.Char)">
      <summary>指定したUnicode文字が制御コードかどうかを判定します。</summary>
      <param name="c">Unicode文字</param>
      <returns>文字が制御コードの場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsControl(System.String,System.Int32)">
      <summary>指定した文字列の指定した位置にある文字が制御コードかどうかを判定します。</summary>
      <param name="s">テキスト文字列</param>
      <param name="index">文字列内の文字の位置</param>
      <returns>sのindex位置にある文字が制御コードの場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsKatakana(System.Char)">
      <summary>指定したUnicode文字がカタカナかどうかを判定します。</summary>
      <param name="c">Unicode文字</param>
      <returns>文字がカタカナの場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsKatakana(System.String,System.Int32)">
      <summary>指定した文字列の指定した位置にある文字がカタカナかどうかを判定します。</summary>
      <param name="s">テキスト文字列</param>
      <param name="index">文字列内の文字の位置</param>
      <returns>sのindex位置にある文字がカタカナの場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsHiragana(System.Char)">
      <summary>指定したUnicode文字がひらがなかどうかを判定します。</summary>
      <param name="c">Unicode文字</param>
      <returns>文字がひらがなの場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsHiragana(System.String,System.Int32)">
      <summary>指定した文字列の指定した位置にある文字がひらがなかどうかを判定します。</summary>
      <param name="s">テキスト文字列</param>
      <param name="index">文字列内の文字の位置</param>
      <returns>sのindex位置にある文字がひらがなの場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsDigit(System.Char)">
      <summary>指定したUnicode文字が数字かどうかを判定します。</summary>
      <param name="c">Unicode文字</param>
      <returns>文字が数字の場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsDigit(System.String,System.Int32)">
      <summary>指定した文字列の指定した位置にある文字が数字かどうかを判定します。</summary>
      <param name="s">テキスト文字列</param>
      <param name="index">文字列内の文字の位置</param>
      <returns>sのindex位置にある文字が数字の場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsPunctuation(System.Char)">
      <summary>指定したUnicode文字が句読記号かどうかを判定します。</summary>
      <param name="c">Unicode文字</param>
      <returns>文字が句読記号の場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsPunctuation(System.String,System.Int32)">
      <summary>指定した文字列の指定した位置にある文字が句読記号かどうかを判定します。</summary>
      <param name="s">テキスト文字列</param>
      <param name="index">文字列内の文字の位置</param>
      <returns>sのindex位置にある文字が句読記号の場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsMathSymbol(System.Char)">
      <summary>指定したUnicode文字が数学記号かどうかを判定します。</summary>
      <param name="c">Unicode文字</param>
      <returns>文字が数学記号の場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsMathSymbol(System.String,System.Int32)">
      <summary>指定した文字列の指定した位置にある文字が数学記号かどうかを判定します。</summary>
      <param name="s">テキスト文字列</param>
      <param name="index">文字列内の文字の位置</param>
      <returns>sのindex位置にある文字が数学記号の場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsSymbol(System.Char)">
      <summary>指定したUnicode文字がシンボル文字かどうかを判定します。</summary>
      <param name="c">Unicode文字</param>
      <returns>文字がシンボル文字の場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsSymbol(System.String,System.Int32)">
      <summary>指定した文字列の指定した位置にある文字がシンボル文字かどうかを判定します。</summary>
      <param name="s">テキスト文字列</param>
      <param name="index">文字列内の文字の位置</param>
      <returns>sのindex位置にある文字がシンボル文字の場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsLower(System.Char)">
      <summary>指定したUnicode文字が小文字かどうかを判定します。</summary>
      <param name="c">Unicode文字</param>
      <returns>文字が小文字の場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsLower(System.String,System.Int32)">
      <summary>指定した文字列の指定した位置にある文字が小文字かどうかを判定します。</summary>
      <param name="s">テキスト文字列</param>
      <param name="index">文字列内の文字の位置</param>
      <returns>sのindex位置にある文字が小文字の場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsUpper(System.Char)">
      <summary>指定したUnicode文字が大文字かどうかを判定します。</summary>
      <param name="c">Unicode文字</param>
      <returns>文字が大文字の場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsUpper(System.String,System.Int32)">
      <summary>指定した文字列の指定した位置にある文字が大文字かどうかを判定します。</summary>
      <param name="s">テキスト文字列</param>
      <param name="index">文字列内の文字の位置</param>
      <returns>sのindex位置にある文字が大文字の場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsDigitOrSymbol(System.Char)">
      <summary>指定したUnicode文字が数字または数学記号かどうかを判定します。</summary>
      <param name="c">Unicode文字</param>
      <returns>文字が数字または数学記号の場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsDigitOrSymbol(System.String,System.Int32)">
      <summary>指定した文字列の指定した位置にある文字が数字または数学記号かどうかを判定します。</summary>
      <param name="s">テキスト文字列</param>
      <param name="index">文字列内の文字の位置</param>
      <returns>sのindex位置にある文字が数字または数学記号の場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsAlphabet(System.Char)">
      <summary>指定したUnicode文字がアルファベットかどうかを判定します。</summary>
      <param name="c">Unicode文字</param>
      <returns>文字がアルファベットの場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsAlphabet(System.String,System.Int32)">
      <summary>指定した文字列の指定した位置にある文字がアルファベットかどうかを判定します。</summary>
      <param name="s">テキスト文字列</param>
      <param name="index">文字列内の文字の位置</param>
      <returns>sのindex位置にある文字がアルファベットの場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsAlphaOrDigit(System.Char)">
      <summary>指定したUnicode文字がアルファベットまたは数字かどうかを判定します。</summary>
      <param name="c">Unicode文字</param>
      <returns>文字がアルファベットまたは数字の場合はTrue、それ以外の場合は<c>False</c></returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsArabic(System.Char)">
      <summary>指定した文字がアラビア文字かどうかを判定します。</summary>
      <param name="c">文字</param>
      <returns>文字がアラビア文字の場合は<c>True</c>、それ以外の場合は<c>False</c></returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsArabicOrHebrew(System.Char)">
      <summary>指定した文字がアラビア文字またはヘブライ文字かどうかを判定します。</summary>
      <param name="c">文字</param>
      <returns>文字がアラビア文字またはヘブライ文字の場合は<c>True</c>、それ以外の場合は<c>False</c></returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsArabicOrHebrew(System.String,System.Int32)">
      <summary>指定した文字列の指定した位置にある文字がアラビア文字またはヘブライ文字かどうかを判定します。</summary>
      <param name="s">テキスト文字列</param>
      <param name="index">文字インデックス</param>
      <returns>文字がアラビア文字またはヘブライ文字の場合は<c>True</c>、それ以外の場合は<c>False</c></returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsAlphaOrDigit(System.String,System.Int32)">
      <summary>指定した文字列の指定した位置にある文字がアルファベットまたは数字かどうかを判定します。</summary>
      <param name="s">テキスト文字列</param>
      <param name="index">文字列内の文字の位置</param>
      <returns>文字がアルファベットまたは数字の場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsUpperKana(System.Char)">
      <summary>指定したUnicode文字が大文字のかなかどうかを判定します。</summary>
      <param name="c">Unicode文字</param>
      <returns>文字が大文字のかなの場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsLowerKana(System.Char)">
      <summary>指定したUnicode文字が小文字のかなかどうかを判定します。</summary>
      <param name="c">Unicode文字</param>
      <returns>文字が小文字のかなの場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.HasLowerKana(System.Char)">
      <summary>関連するかなに小文字があるかどうかを判定します。</summary>
      <param name="c">Unicode文字</param>
      <returns>文字に関連する小文字のかながある場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.ToFullWidth(System.Char)">
      <summary>可能な場合、指定した文字を全角文字に変換します。範囲は、基本ラテン文字、カタカナ、およびハングル文字です。</summary>
      <param name="c">Unicode文字</param>
      <returns>変換できる場合はcの全角文字、変換できない場合は元の文字</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.ToFullWidth(System.Boolean@,System.Char[])">
      <summary>可能な場合、指定した文字を全角文字に変換します。このメソッドは、文字の配列を引数に取る点で、もう一方のメソッドとは異なります。極東の国では、複数の半角文字によって1つの全角文字が構成される場合があります。</summary>
      <param name="c">文字の配列。</param>
      <param name="processedAll">soundex文字が処理された場合は<b>True</b>、それ以外の場合は<b>False</b>が返されます。</param>
      <returns>変換できる場合はcの全角文字、変換できない場合は元の文字が返されます。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.ToHalfWidth(System.Char)">
      <summary>Unicode文字の値を、対応する半角表現に変換します。範囲は、基本ラテン文字、カタカナ、およびハングル文字です。</summary>
      <param name="c">Unicode文字</param>
      <returns>
        <para>cの半角表現。</para>
        <para>または</para>
        <para>cがすでに半角であるか、多幅文字でない場合は、cの値そのもの。 </para>
      </returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.ToHalfWidthEx(System.Char)">
      <summary>可能な場合、指定した文字を半角文字に変換します。このメソッドは、正確な半角文字を返そうとする点で（これは極東の国で最もよく見られます）、ToHalfWidthメソッドとは異なります。</summary>
      <param name="c">Unicode文字</param>
      <returns>cの半角表現を含む文字の配列。ほとんどの場合、この配列には1つの要素のみが格納されます。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.ToKatakana(System.Char)">
      <summary>Unicode文字の値を、対応するカタカナ表現に変換します。これは日本語向けの特殊な文字処理です。</summary>
      <param name="c">Unicode文字</param>
      <returns>
        <para>cのカタカナ表現。</para>
        <para>または</para>
        <para>cがすでにカタカナであるか、ひらがなでない場合は、cの値そのもの。 </para>
      </returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.ToKatakana(System.Char,System.Boolean)">
      <summary>Unicode文字の値を、対応するカタカナ表現に変換します。必要に応じて、全角または半角の設定を指定できます。これは日本語向けの特殊な文字処理です。</summary>
      <param name="c">Unicode文字</param>
      <param name="fullWidth">全角のカタカナを返す場合は<b>True</b>、半角のカタカナを返す場合は<b>False</b>。</param>
      <returns></returns>
      <returns>
        <para>cのカタカナ表現。</para>
        <para>または</para>
        <para>cがすでにカタカナであるか、ひらがなでない場合は、cの値そのもの。 </para>
      </returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.ToHiragana(System.Char)">
      <summary>Unicode文字の値を、対応するひらがな表現に変換します。これは日本語向けの特殊な文字処理です。</summary>
      <param name="c">Unicode文字</param>
      <returns>
        <para>cのひらがな表現。</para>
        <para>または</para>
        <para>cがすでにひらがなであるか、カタカナでない場合は、cの値そのもの。 </para>
      </returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.ToAnsi(System.Char)">
      <summary>Unicode文字の値を、対応するANSI表現に変換します。</summary>
      <param name="c">Unicode文字</param>
      <returns>現在のカルチャでの、cのANSI文字表現。</returns>
      <remarks>現在のカルチャを使用して、指定したUnicode文字をANSI文字にエンコードします。</remarks>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.ToAnsi(System.Char,System.Globalization.CultureInfo)">
      <summary>指定したカルチャ情報を使用して、Unicode文字の値を、対応するANSI表現に変換します。</summary>
      <param name="c">Unicode文字</param>
      <param name="culture">CultureInfoオブジェクト。Null参照が渡された場合は、現在のカルチャが使用されます。</param>
      <returns>指定したカルチャでの、cのANSI文字表現。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.ToSJIS(System.Char)">
      <summary>JIS文字の値を、対応するShift-JIS表現に変換します。</summary>
      <param name="c">JIS文字。</param>
      <returns>
        <para>cのShift-JIS表現。</para>
        <para>または</para>
        <para>cが全角文字でない場合は、cの値そのもの。 </para>
      </returns>
      <remarks>
        <newpara>JIS文字を、対応するShift-JIS文字に変換します（これらの文字は日本語で使用されます）。</newpara>
        <newpara>このメソッドは、Unicode文字を引数として取りません。ToJISメソッドによって返された文字値を使用してください。 </newpara>
      </remarks>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.ToJIS(System.Char)">
      <summary>Shift-JIS文字の値を、対応するJIS表現に変換します。</summary>
      <param name="c">Shift-JIS文字。</param>
      <returns>
        <para>cのJIS表現。</para>
        <para>または</para>
        <para>cが全角文字でない場合は、cの値そのもの。 </para>
      </returns>
      <remarks>
        <newpara>Shift-JIS文字を、対応するJIS文字に変換します（これらの文字は日本語で使用されます）。</newpara>
        <newpara>このメソッドは、Unicode文字を引数として取りません。ToSJISメソッドによって返された文字値を使用してください。 </newpara>
      </remarks>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.FromAnsi(System.Char)">
      <summary>ANSI文字の値を、対応するUnicode表現に変換します。</summary>
      <param name="c">ANSI文字。</param>
      <returns>cのUnicode文字表現。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.FromAnsi(System.Char,System.Globalization.CultureInfo)">
      <summary>指定したカルチャ情報を使用して、ANSI文字の値を、対応するUnicode表現に変換します。</summary>
      <param name="c">ANSI文字。</param>
      <param name="culture">CultureInfoオブジェクト。Null参照が渡された場合は、現在のカルチャが使用されます。</param>
      <returns>指定したカルチャでの、cのUnicode文字表現。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.ToUpperKana(System.Char)">
      <summary>小文字のかなを大文字のかなに変換します。</summary>
      <param name="c">Unicode文字</param>
      <returns>対応する大文字のかな。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.ToLowerKana(System.Char)">
      <summary>大文字のかなを小文字のかなに変換します。</summary>
      <param name="c">Unicode文字</param>
      <returns>対応する小文字のかな。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.GetHashCode">
      <summary>特定の型のハッシュ関数として機能します。このメソッドは、ハッシュアルゴリズムや、ハッシュテーブルのようなデータ構造での使用に適しています。</summary>
      <returns>現在のObjectのハッシュコード。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.Equals(System.Object)">
      <summary>2つのObjectインスタンスが等しいかどうかを判定します。</summary>
      <param name="value">現在のaqDateTimeと比較するObject。</param>
      <returns>valueがaqDateTimeのインスタンスであり、このインスタンスの値と等しい場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.BelongTo(System.Char)">
      <summary>指定した文字が属するUnicode文字ブロックを取得します。現在のバージョンでは、'\u000'～'\uffff'の範囲がサポートされています。</summary>
      <param name="c">Unicode文字</param>
      <returns>指定した文字が属するUnicodeブロック。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.MultiWidthDetails(System.Char)">
      <summary>文字が文字幅の異なるフィクスチャを保持する範囲にあるため、文字の詳細情報を返します。</summary>
      <param name="c">Unicode文字</param>
      <returns>文字の種類と文字幅が全角か半角かを表すCharType</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.IsFarEastBlock(FarPoint.Win.Text.CharEx.Blocks,System.Char)">
      <summary>指定したブロックが中国語、日本語、または韓国語を処理する必要があるかどうかを判定します（文字幅の概念があるのはこれらの言語のみです）。</summary>
      <param name="block">Unicode文字のブロック</param>
      <param name="c">処理する<see cref="T:System.Char" /></param>
      <returns>ブロックが中国語、日本語、または韓国語に関連している場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.innerToChar(System.Byte[])">
      <summary>バイト配列をChar型に変換します（内部使用）。</summary>
      <param name="value">バイト配列。</param>
      <returns>valueの文字表現</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.innerToByte(System.Char)">
      <summary>単一の文字をバイト配列に変換します（内部使用）。</summary>
      <param name="c">文字。</param>
      <returns>cのバイト配列表現</returns>
    </member>
    <member name="M:FarPoint.Win.Text.CharEx.GetFullHalfWidthSpecialChar(System.Char,System.Boolean)">
      <summary>日本語の特殊文字について、半角文字と全角文字の変換を行います。</summary>
      <param name="c">文字</param>
      <param name="toFull">全角に変換する場合は<b>True</b>、それ以外の場合は<b>False</b>。</param>
      <returns>変換後の文字。<see cref="F:System.Char.MinValue" />は、変換が行われなかったことを意味します。</returns>
    </member>
    <member name="T:FarPoint.Win.Text.CharEx.Blocks">
      <summary>Unicode規格に基づいて分類された文字ブロック。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.CharType">
      <summary>Unicode文字のカテゴリーを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.CharType.OtherChar">
      <summary>文字が特定のカテゴリーに属していないことを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.CharType.Control">
      <summary>文字が制御コードであることを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.CharType.Numeric">
      <summary>文字が数字であることを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.CharType.MathSymbol">
      <summary>文字が数学記号であることを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.CharType.Symbol">
      <summary>文字がシンボルであることを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.CharType.Punctuation">
      <summary>文字が句読記号（開き記号および閉じ記号）であることを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.CharType.Space">
      <summary>文字が空白文字であることを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.CharType.UpperCase">
      <summary>文字が大文字であることを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.CharType.LowerCase">
      <summary>文字が小文字であることを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.CharType.Katakana">
      <summary>文字がカタカナであることを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.CharType.Hiragana">
      <summary>文字がひらがなであることを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.CharType.FarEastPunctation">
      <summary>文字が中国語、日本語、または韓国語の句読記号であることを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.CharType.Hangul">
      <summary>文字がハングル文字であることを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.CharType.FullWidth">
      <summary>文字が全角であることを示します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.Margins">
      <summary>境界領域の余白を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.Margins._left">
      <summary>Leftプロパティのプレイスホルダー。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.Margins._top">
      <summary>Topプロパティのプレイスホルダー。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.Margins._right">
      <summary>Rightプロパティのプレイスホルダー。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.Margins._bottom">
      <summary>Bottomプロパティのプレイスホルダー。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.Margins.Empty">
      <summary>プロパティが初期化されていない<see cref="T:FarPoint.Win.Text.Margins" />構造体を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Margins.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>指定した左、右、上、下の余白を使用して、新しい<see cref="T:FarPoint.Win.Text.Margins" />クラスを作成します。</summary>
      <param name="left">左の余白（ピクセル単位）。</param>
      <param name="right">右の余白（ピクセル単位）。</param>
      <param name="top">上の余白（ピクセル単位）。</param>
      <param name="bottom">下の余白（ピクセル単位）。</param>
    </member>
    <member name="M:FarPoint.Win.Text.Margins.GetHashCode">
      <summary>特定の型のハッシュ関数として機能します。このメソッドは、ハッシュアルゴリズムや、ハッシュテーブルのようなデータ構造での使用に適しています。</summary>
      <returns>現在のObjectのハッシュコード。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.Margins.Equals(System.Object)">
      <summary>2つのObjectインスタンスが等しいかどうかを判定します。</summary>
      <param name="obj">現在の<see cref="T:FarPoint.Win.Text.Margins" />と比較するオブジェクト</param>
      <returns>
        <c>obj</c>が<b>Margins</b>であり、その<b>Left</b>、<b>Top</b>、<b>Right</b>、<b>Bottom</b>の各プロパティがこの<b>Margins</b>オブジェクトの対応するプロパティと等しい場合は<b>True</b>、それ以外の場合は<b>False</b></returns>
    </member>
    <member name="M:FarPoint.Win.Text.Margins.op_Equality(FarPoint.Win.Text.Margins,FarPoint.Win.Text.Margins)">
      <summary>2つの<see cref="T:FarPoint.Win.Text.Margins" />構造体の値が等しいかどうかをテストします。</summary>
      <param name="left">等価演算子の左辺の<see cref="T:FarPoint.Win.Text.Margins" /></param>
      <param name="right">等価演算子の右辺の<see cref="T:FarPoint.Win.Text.Margins" /></param>
      <returns>この演算子は、2つの<see cref="T:FarPoint.Win.Text.Margins" />構造体の<b>Left</b>、<b>Right</b>、<b>Top</b>、<b>Bottom</b>の各プロパティが等しい場合に<b>True</b>を返します。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.Margins.op_Inequality(FarPoint.Win.Text.Margins,FarPoint.Win.Text.Margins)">
      <summary>2つの<see cref="T:FarPoint.Win.Text.Margins" />構造体の値が異なるかどうかをテストします。</summary>
      <param name="left">等価演算子の左辺の<see cref="T:FarPoint.Win.Text.Margins" /></param>
      <param name="right">等価演算子の右辺の<see cref="T:FarPoint.Win.Text.Margins" /></param>
      <returns>この演算子は、2つの<see cref="T:FarPoint.Win.Text.Margins" />構造体の<b>Left</b>、<b>Right</b>、<b>Top</b>、<b>Bottom</b>のいずれかのプロパティが等しくない場合には<b>True</b>を、それ以外の場合には<b>False</b>を返します。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.Margins.ToString">
      <summary>このメンバは<see cref="M:System.Object.ToString" />をオーバーライドします。</summary>
      <returns>余白を表すStringオブジェクト</returns>
    </member>
    <member name="P:FarPoint.Win.Text.Margins.Left">
      <summary>左の余白（ピクセル単位）を取得または設定します。</summary>
      <value>余白のピクセル数</value>
    </member>
    <member name="P:FarPoint.Win.Text.Margins.Top">
      <summary>上の余白（ピクセル単位）を取得または設定します。</summary>
      <value>余白のピクセル数</value>
    </member>
    <member name="P:FarPoint.Win.Text.Margins.Right">
      <summary>右の余白（ピクセル単位）を取得または設定します。</summary>
      <value>余白のピクセル数</value>
    </member>
    <member name="P:FarPoint.Win.Text.Margins.Bottom">
      <summary>下の余白（ピクセル単位）を取得または設定します。</summary>
      <value>余白のピクセル数</value>
    </member>
    <member name="P:FarPoint.Win.Text.Margins.IsEmpty">
      <summary>この<see cref="T:FarPoint.Win.Text.Margins" />構造体の数値プロパティの値がすべて0かどうかをテストします。</summary>
      <value>このRectangleのWidth、Height、Left、Topの各プロパティの値がすべて0の場合はTrue、それ以外の場合はFalseを返します。</value>
    </member>
    <member name="T:FarPoint.Win.Text.AlignHorizontal">
      <summary>オブジェクトまたはテキストが特定の領域に対して水平方向にどのように配置されるかを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.AlignHorizontal.NotSet">
      <summary>オブジェクトまたはテキストのデフォルトの配置を使用します。どの値になるかは場合によって異なりますが、通常は<b>Left</b>の値が保持されます。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.AlignHorizontal.Left">
      <summary>オブジェクトまたはテキストを、指定した領域の左に揃えます。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.AlignHorizontal.Right">
      <summary>オブジェクトまたはテキストを、指定した領域の右に揃えます。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.AlignHorizontal.Center">
      <summary>オブジェクトまたはテキストを、指定した領域の中央に配置します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.AlignVertical">
      <summary>オブジェクトまたはテキストが特定の領域に対して垂直方向にどのように配置されるかを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.AlignVertical.NotSet">
      <summary>オブジェクトまたはテキストのデフォルトの配置を使用します。どの値になるかは場合によって異なりますが、通常は<b>Center</b>の値が保持されます。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.AlignVertical.Top">
      <summary>オブジェクトまたはテキストを、指定した領域の上に揃えることを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.AlignVertical.Bottom">
      <summary>オブジェクトまたはテキストを、指定した領域の下に揃えることを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.AlignVertical.Middle">
      <summary>オブジェクトまたはテキストを、指定した領域の（垂直方向の）中央に揃えることを示します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TransformOrder">
      <summary>行列変換操作の順序を指定します。</summary>
      <remarks>行列変換操作は必ずしも可換ではありません。操作を適用する順序は重要です。</remarks>
    </member>
    <member name="F:FarPoint.Win.Text.TransformOrder.Append">
      <summary>古い操作の後に新しい操作を適用します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TransformOrder.Prepend">
      <summary>古い操作の前に新しい操作を適用します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.GraphicsMode">
      <summary>グラフィックモードを示す列挙体を定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.GraphicsMode.Compatible">
      <summary>現在のグラフィックモードは、互換グラフィックモード（16ビットWindowsと互換性のあるモード）です。このグラフィックモードでは、指定したデバイスコンテキストのワールド変換をアプリケーションから設定または変更することはできません。互換グラフィックモードは、デフォルトのグラフィックモードです。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.GraphicsMode.Advance">
      <summary>Windows NT/2000/XP:現在のグラフィックモードは、拡張グラフィックモード（ワールド変換が可能なモード）です。このグラフィックモードでは、指定したデバイスコンテキストのワールド変換をアプリケーションから設定または変更できます。</summary>
      <remarks>Windows 95/98/Me:このモードはサポートされていません。</remarks>
    </member>
    <member name="T:FarPoint.Win.Text.Vector">
      <summary>数学的ベクトルを表すVectorクラスを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.Vector._data">
      <summary>このベクトルのデータを保存します。</summary>
      <remarks>In order to improve speed of inherited classes, I give the proteced modification</remarks>
    </member>
    <member name="M:FarPoint.Win.Text.Vector.#ctor">
      <summary>新しい<see cref="T:FarPoint.Win.Text.Vector" />クラスを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Vector.#ctor(System.Int32)">
      <summary>新しい<see cref="T:FarPoint.Win.Text.Vector" />クラスを作成します。</summary>
      <param name="dimension">ベクトルの大きさを示す<b>int</b>。</param>
      <remarks>ベクトルの大きさは0以上にする必要があります。</remarks>
    </member>
    <member name="M:FarPoint.Win.Text.Vector.#ctor(System.Double[])">
      <summary>新しい<see cref="T:FarPoint.Win.Text.Vector" />クラスを作成します。</summary>
      <param name="items">項目を示す<b>double</b>の配列。</param>
    </member>
    <member name="M:FarPoint.Win.Text.Vector.CheckOperationParameters(System.String,FarPoint.Win.Text.Vector[])">
      <summary>演算パラメーターをチェックし、パラメーターが無効な場合に例外をスローします。</summary>
      <param name="operationDescription">演算の説明を示す<b>string</b>。</param>
      <param name="parameters">演算パラメーターを示す<see cref="T:FarPoint.Win.Text.Vector" />の配列。</param>
    </member>
    <member name="M:FarPoint.Win.Text.Vector.op_Addition(FarPoint.Win.Text.Vector,FarPoint.Win.Text.Vector)">
      <summary>ベクトル演算の+演算子を定義します。</summary>
      <param name="left">左オペランドを示す<see cref="T:FarPoint.Win.Text.Vector" />。</param>
      <param name="right">右オペランドを示す<see cref="T:FarPoint.Win.Text.Vector" />。</param>
      <returns>左右のオペランドの加算結果を示す<see cref="T:FarPoint.Win.Text.Vector" />。</returns>
      <remarks>(n1, n2, n3) + (m1, m2, m3) = (n1 + m1, n2 + m2, n3 + m3)</remarks>
    </member>
    <member name="M:FarPoint.Win.Text.Vector.op_Subtraction(FarPoint.Win.Text.Vector,FarPoint.Win.Text.Vector)">
      <summary>ベクトル演算の二項-演算子を定義します。</summary>
      <param name="left">左オペランドを示す<see cref="T:FarPoint.Win.Text.Vector" />。</param>
      <param name="right">右オペランドを示す<see cref="T:FarPoint.Win.Text.Vector" />。</param>
      <returns>左右のオペランドの二項マイナス演算の結果を示す<see cref="T:FarPoint.Win.Text.Vector" />。</returns>
      <remarks>(n1, n2, n3) - (m1, m2, m3) = (n1 - m1, n2 - m2, n3 - m3)</remarks>
    </member>
    <member name="M:FarPoint.Win.Text.Vector.op_UnaryNegation(FarPoint.Win.Text.Vector)">
      <summary>ベクトル演算の単項-演算子を定義します。</summary>
      <param name="value">オペランドを示す<see cref="T:FarPoint.Win.Text.Vector" />。</param>
      <returns>オペランドの単項マイナス演算の結果を示す<see cref="T:FarPoint.Win.Text.Vector" />。</returns>
      <remarks>-(n1, n2, n3) = (-n1, -n2, -n3)</remarks>
    </member>
    <member name="M:FarPoint.Win.Text.Vector.op_Multiply(FarPoint.Win.Text.Vector,FarPoint.Win.Text.Vector)">
      <summary>ベクトル演算の*演算子を定義します。</summary>
      <param name="left">左オペランドを示す<see cref="T:FarPoint.Win.Text.Vector" />。</param>
      <param name="right">右オペランドを示す<see cref="T:FarPoint.Win.Text.Vector" />。</param>
      <returns>左右のオペランドの乗算結果を示す<see cref="T:FarPoint.Win.Text.Vector" />。</returns>
      <remarks>(n1, n2, n3) * (m1, m2, m3) = (n1 * m1, n2 * m2, n3 * m3)</remarks>
    </member>
    <member name="M:FarPoint.Win.Text.Vector.op_Equality(FarPoint.Win.Text.Vector,FarPoint.Win.Text.Vector)">
      <summary>ベクトル演算の==演算子を定義します。</summary>
      <param name="left">左オペランドを示す<see cref="T:FarPoint.Win.Text.Vector" />。</param>
      <param name="right">右オペランドを示す<see cref="T:FarPoint.Win.Text.Vector" />。</param>
      <returns>左辺と右辺が等しいかどうかを示す<b>bool</b>。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.Vector.op_Inequality(FarPoint.Win.Text.Vector,FarPoint.Win.Text.Vector)">
      <summary>ベクトル演算の==演算子を定義します。</summary>
      <param name="left">左オペランドを示す<see cref="T:FarPoint.Win.Text.Vector" />。</param>
      <param name="right">右オペランドを示す<see cref="T:FarPoint.Win.Text.Vector" />。</param>
      <returns>左辺と右辺が等しくないかどうかを示す<b>bool</b>。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.Vector.CrossMultiply(FarPoint.Win.Text.Vector,FarPoint.Win.Text.Vector)">
      <summary>ベクトルのデカルト乗算演算を定義します。</summary>
      <param name="left">左オペランドを示す<see cref="T:FarPoint.Win.Text.Vector" />。</param>
      <param name="right">右オペランドを示す<see cref="T:FarPoint.Win.Text.Vector" />。</param>
      <returns>左右のオペランドのデカルト乗算の結果を示す<see cref="T:FarPoint.Win.Text.Vector" />。</returns>
      <remarks>| i, j, k | (n1, n2, n3) X (m1, m2, m3) = | n1, n2, n3| = (?, ?, ?) | m1, m2, m3|</remarks>
    </member>
    <member name="M:FarPoint.Win.Text.Vector.CalculateModul(FarPoint.Win.Text.Vector)">
      <summary>指定したベクトルの剰余を取得します。</summary>
      <param name="value">ベクトル</param>
      <returns>指定したベクトルの剰余を表す<b>Double</b></returns>
    </member>
    <member name="M:FarPoint.Win.Text.Vector.Add(FarPoint.Win.Text.Vector)">
      <summary>指定したベクトルをこのベクトルに加算します。</summary>
      <param name="value">ベクトル</param>
    </member>
    <member name="M:FarPoint.Win.Text.Vector.DotMultiply(FarPoint.Win.Text.Vector)">
      <summary>指定したベクトルをこのベクトルにドット乗算します。</summary>
      <param name="value">ベクトル</param>
    </member>
    <member name="M:FarPoint.Win.Text.Vector.CrossMultiply(FarPoint.Win.Text.Vector)">
      <summary>指定したベクトルをこのベクトルにクロス乗算します。</summary>
      <param name="value">ベクトル</param>
    </member>
    <member name="M:FarPoint.Win.Text.Vector.Clone">
      <summary>この<see cref="T:FarPoint.Win.Text.Vector" />のコピーである新しいオブジェクトを作成します。</summary>
      <returns>この<see cref="T:FarPoint.Win.Text.Vector" />のコピー</returns>
    </member>
    <member name="M:FarPoint.Win.Text.Vector.Equals(System.Object)">
      <summary>指定したSystem.Objectが現在のSystem.Objectと等しいかどうかを判定します。</summary>
      <param name="obj">現在のSystem.Objectと比較するSystem.Object</param>
      <returns>指定したSystem.Objectが現在のSystem.Objectと等しい場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.Vector.GetHashCode">
      <summary>特定の型のハッシュ関数として機能します。System.Object.GetHashCodeは、ハッシュアルゴリズムや、ハッシュテーブルのようなデータ構造での使用に適しています。</summary>
      <returns>現在のSystem.Objectのハッシュコード</returns>
    </member>
    <member name="M:FarPoint.Win.Text.Vector.ToString">
      <summary>現在のベクトルを表す文字列を返します。</summary>
      <returns>現在のベクトルを表す文字列</returns>
    </member>
    <member name="P:FarPoint.Win.Text.Vector.Dimension">
      <summary>ベクトルの大きさを取得または設定します。</summary>
      <value>ベクトルの大きさ</value>
      <remarks>Vectorインスタンスは、作成されると同時にその大きさが固定されます。</remarks>
    </member>
    <member name="P:FarPoint.Win.Text.Vector.Item(System.Int32)">
      <summary>指定したインデックスにある要素の値を取得または設定します。</summary>
      <value>要素の値を表す<b>Double</b></value>
      <remarks>注意:インデックスは0から始まります。</remarks>
    </member>
    <member name="P:FarPoint.Win.Text.Vector.Elements">
      <summary>ベクトル内のすべての要素を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.Text.Vector.IsZero">
      <summary>このベクトルがゼロベクトルであるかどうかを取得します。</summary>
      <value>このベクトルがゼロベクトルの場合は<b>True</b>、それ以外の場合は<b>False</b>を返します。</value>
    </member>
    <member name="P:FarPoint.Win.Text.Vector.IsIdentity">
      <summary>このベクトルが単位ベクトルであるかどうかを示す値を取得します。</summary>
      <value>このベクトルが単位ベクトルの場合は<b>True</b>、それ以外の場合は<b>False</b>を返します。</value>
    </member>
    <member name="P:FarPoint.Win.Text.Vector.Modul">
      <summary>このベクトルの剰余を取得します。</summary>
      <value>指定したベクトルの剰余を表す<b>Double</b>。</value>
    </member>
    <member name="T:FarPoint.Win.Text.Matrix">
      <summary>数学の行列を表します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.Matrix._data">
      <summary>データを格納する2次元の<b>double</b>配列を定義します。</summary>
      <remarks>In order to improve speed of inherited classes, I give the proteced modification</remarks>
    </member>
    <member name="M:FarPoint.Win.Text.Matrix.#ctor">
      <summary>新しい行列を作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Matrix.#ctor(System.Int32,System.Int32)">
      <summary>新しい行列を作成します。</summary>
      <param name="width">行の数を示す<b>int</b>。</param>
      <param name="height">列の数を示す<b>int</b>。</param>
    </member>
    <member name="M:FarPoint.Win.Text.Matrix.#ctor(System.Double[0:,0:])">
      <summary>新しい行列を作成します。</summary>
      <summary>要素の格納に使用される2次元の<b>double</b>配列。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Matrix.#ctor(System.Boolean,FarPoint.Win.Text.Vector[])">
      <summary>新しい行列を作成します。</summary>
      <param name="vertical">ベクトルの方向が垂直かどうかを示す<b>bool</b>。</param>
      <param name="vectors">ベクトルを示す<see cref="T:FarPoint.Win.Text.Vector" />の配列。</param>
    </member>
    <member name="M:FarPoint.Win.Text.Matrix.CheckOperationParameters(System.Boolean,System.String,FarPoint.Win.Text.Matrix[])">
      <summary>演算パラメーターをチェックし、パラメーターが無効な場合に例外をスローします。</summary>
      <param name="checkMode">チェックモードを示す<b>bool</b>値。乗算演算の場合は<b>True</b>。</param>
      <param name="operationDescription">演算の説明を示す<b>string</b>。</param>
      <param name="parameters">演算パラメーターを示す<see cref="T:FarPoint.Win.Text.Vector" />の配列。</param>
    </member>
    <member name="M:FarPoint.Win.Text.Matrix.op_Addition(FarPoint.Win.Text.Matrix,FarPoint.Win.Text.Matrix)">
      <summary>Matrixクラスの+演算子を定義します。</summary>
      <param name="left">左オペランドを示す<see cref="T:FarPoint.Win.Text.Matrix" />。</param>
      <param name="right">右オペランドを示す<see cref="T:FarPoint.Win.Text.Matrix" />。</param>
      <returns>2つのオペランドの加算演算の結果を示す<see cref="T:FarPoint.Win.Text.Matrix" />。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.Matrix.op_Subtraction(FarPoint.Win.Text.Matrix,FarPoint.Win.Text.Matrix)">
      <summary>Matrixクラスの二項-演算子を定義します。</summary>
      <param name="left">左オペランドを示す<see cref="T:FarPoint.Win.Text.Matrix" />。</param>
      <param name="right">右オペランドを示す<see cref="T:FarPoint.Win.Text.Matrix" />。</param>
      <returns>2つのオペランドの二項マイナス演算の結果を示す<see cref="T:FarPoint.Win.Text.Matrix" />。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.Matrix.op_UnaryNegation(FarPoint.Win.Text.Matrix)">
      <summary>Matrixクラスの二項-演算子を定義します。</summary>
      <param name="value">オペランドを示す<see cref="T:FarPoint.Win.Text.Matrix" />。</param>
      <returns>オペランドの単項マイナス演算の結果を示す<see cref="T:FarPoint.Win.Text.Matrix" />。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.Matrix.op_Multiply(FarPoint.Win.Text.Matrix,FarPoint.Win.Text.Matrix)">
      <summary>Matrixクラスの*演算子を定義します。</summary>
      <param name="left">左オペランドを示す<see cref="T:FarPoint.Win.Text.Matrix" />。</param>
      <param name="right">右オペランドを示す<see cref="T:FarPoint.Win.Text.Matrix" />。</param>
      <returns>2つのオペランドの乗算演算の結果を示す<see cref="T:FarPoint.Win.Text.Matrix" />。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.Matrix.T(FarPoint.Win.Text.Matrix)">
      <summary>Matrixクラスの転置演算子を定義します。</summary>
      <param name="value">オペランドを示す<see cref="T:FarPoint.Win.Text.Matrix" />。</param>
      <returns>オペランドの転置演算の結果を示す<see cref="T:FarPoint.Win.Text.Matrix" />。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.Matrix.op_Explicit(FarPoint.Win.Text.Matrix)~System.Double">
      <summary>明示変換を使用して、行列の値を取得します。</summary>
      <param name="value">変換する<see cref="T:FarPoint.Win.Text.Matrix" /></param>
      <returns>指定した行列の値を表す<b>Double</b>。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.Matrix.op_Equality(FarPoint.Win.Text.Matrix,FarPoint.Win.Text.Matrix)">
      <summary>ベクトル演算の==演算子を定義します。</summary>
      <param name="left">左<see cref="T:FarPoint.Win.Text.Matrix" />オペランド</param>
      <param name="right">右<see cref="T:FarPoint.Win.Text.Matrix" />オペランド</param>
      <returns>左辺と右辺が等しいかどうか</returns>
    </member>
    <member name="M:FarPoint.Win.Text.Matrix.op_Inequality(FarPoint.Win.Text.Matrix,FarPoint.Win.Text.Matrix)">
      <summary>ベクトル演算の!演算子を定義します。</summary>
      <param name="left">左<see cref="T:FarPoint.Win.Text.Matrix" />オペランド</param>
      <param name="right">右<see cref="T:FarPoint.Win.Text.Matrix" />オペランド</param>
      <returns>左辺と右辺が等しくないかどうか</returns>
    </member>
    <member name="M:FarPoint.Win.Text.Matrix.Add(FarPoint.Win.Text.Matrix)">
      <summary>指定した行列をこの行列に加算します。</summary>
      <param name="value">行列</param>
    </member>
    <member name="M:FarPoint.Win.Text.Matrix.LeftMultiply(FarPoint.Win.Text.Matrix)">
      <summary>指定した行列をこの行列に左乗算します。</summary>
      <param name="value">行列</param>
    </member>
    <member name="M:FarPoint.Win.Text.Matrix.RightMultiply(FarPoint.Win.Text.Matrix)">
      <summary>指定した行列をこの行列に右乗算します。</summary>
      <param name="value">行列</param>
    </member>
    <member name="M:FarPoint.Win.Text.Matrix.T">
      <summary>この行列をその転置行列に変換します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Matrix.Clone">
      <summary>この<see cref="T:FarPoint.Win.Text.Matrix" />のコピーである新しいオブジェクトを作成します。</summary>
      <returns>この<see cref="T:FarPoint.Win.Text.Matrix" />のコピーである<b>Object</b></returns>
    </member>
    <member name="M:FarPoint.Win.Text.Matrix.Equals(System.Object)">
      <summary>指定したSystem.Objectが現在のSystem.Objectと等しいかどうかを判定します。</summary>
      <param name="obj">現在のSystem.Objectと比較するSystem.Object</param>
      <returns>指定したSystem.Objectが現在のSystem.Objectと等しい場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Text.Matrix.GetHashCode">
      <summary>特定の型のハッシュ関数として機能します。System.Object.GetHashCodeは、ハッシュアルゴリズムや、ハッシュテーブルのようなデータ構造での使用に適しています。</summary>
      <returns>現在のSystem.Objectのハッシュコード</returns>
    </member>
    <member name="M:FarPoint.Win.Text.Matrix.ToString">
      <summary>現在の行列を表す文字列を返します。</summary>
      <returns>現在の行列を表す文字列</returns>
    </member>
    <member name="P:FarPoint.Win.Text.Matrix.Item(System.Int32,System.Int32)">
      <summary>指定した位置にある要素の値を取得または設定します。</summary>
      <value>要素の値を示す<b>double</b>。</value>
      <remarks>注意:行および列は0から始まります。</remarks>
    </member>
    <member name="P:FarPoint.Win.Text.Matrix.Elements">
      <summary>行列の要素を取得します。</summary>
      <value>要素を格納する2次元の<b>double</b>配列。</value>
    </member>
    <member name="P:FarPoint.Win.Text.Matrix.Width">
      <summary>行列の列の数を取得します。</summary>
      <value>行列の幅を示す<b>int</b>値。</value>
    </member>
    <member name="P:FarPoint.Win.Text.Matrix.Height">
      <summary>行列の行の数を取得します。</summary>
      <value>行列の高さを示す<b>int</b>値。</value>
    </member>
    <member name="P:FarPoint.Win.Text.Matrix.IsIdentity">
      <summary>このMatrixオブジェクトが単位行列であるかどうかを示す値を取得します。</summary>
      <value>このプロパティは、このMatrixが単位行列である場合はTrue、それ以外の場合はFalseになります。</value>
      <remarks>| 1, 0, 0 | | 0, 1, 0 | | 0, 0, 1 |</remarks>
    </member>
    <member name="P:FarPoint.Win.Text.Matrix.Columns">
      <summary>列方向のベクトルを取得します。</summary>
      <value>行列の列を示す<see cref="T:FarPoint.Win.Text.Vector" />の配列。</value>
    </member>
    <member name="P:FarPoint.Win.Text.Matrix.Rows">
      <summary>行方向のベクトルを取得します。</summary>
      <value>行列の行を示す<see cref="T:FarPoint.Win.Text.Vector" />の配列。</value>
    </member>
    <member name="P:FarPoint.Win.Text.Matrix.Value">
      <summary>現在の行列の値を取得します。</summary>
      <value>この行列の値を表す<b>Double</b></value>
    </member>
    <member name="T:FarPoint.Win.Text.TransformMatrix">
      <summary>GDIでワールド空間とページ空間の変換を行うための変換情報を表します。</summary>
      <value>TransformMatrixは3x3の行列ですが、使用するのはM11、M12、M21、M22、Dx、Dyのみです。| M11, M12, 0 | | M21, M22, 0 | | Dx, Dy, 1 |</value>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.#ctor">
      <summary>新しい<see cref="T:FarPoint.Win.Text.TransformMatrix" />クラスを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>新しい<see cref="T:FarPoint.Win.Text.TransformMatrix" />クラスを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.#ctor(System.Double,System.Double)">
      <summary>新しい<see cref="T:FarPoint.Win.Text.TransformMatrix" />クラスを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>新しい<see cref="T:FarPoint.Win.Text.TransformMatrix" />クラスを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.Rotate(System.Double)">
      <summary>原点を中心とする指定した角度の時計回りの回転を、この行列に適用します。</summary>
      <param name="angle">時計回りの角度を示す<b>double</b>。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.Translate(System.Double,System.Double)">
      <summary>平行移動ベクトルを前に付加することで、指定した平行移動ベクトル（offsetXとoffsetY）をこの行列に適用します。</summary>
      <param name="offsetX">このMatrixを平行移動するxの値。</param>
      <param name="offsetY">このMatrixを平行移動するyの値。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.Scale(System.Double,System.Double)">
      <summary>スケールベクトルを前に付加することで、指定したスケールベクトルをこの行列に適用します。</summary>
      <param name="scaleX">この行列をx軸方向にスケールする値</param>
      <param name="scaleY">この行列をy軸方向にスケールする値</param>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.Shear(System.Double,System.Double)">
      <summary>傾斜変換を前に付加することで、指定した傾斜ベクトルをこの行列に適用します。</summary>
      <param name="shearX">水平方向の傾斜係数</param>
      <param name="shearY">垂直方向の傾斜係数</param>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.XAxisReflect">
      <summary>この行列にx軸方向の鏡映を適用します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.YAxisReflect">
      <summary>この行列にy軸方向の鏡映を適用します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.SlashReflect">
      <summary>このMatrixオブジェクトに、右上から左下の対角方向の鏡映を適用します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.BackslashReflect">
      <summary>このMatrixオブジェクトに、左上から右下の対角方向の鏡映を適用します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.Rotate(System.Double,FarPoint.Win.Text.TransformOrder)">
      <summary>原点を中心とする指定した角度の時計回りの回転を、このMatrixオブジェクトに適用します。</summary>
      <param name="angle">時計回りの回転を表す<b>Double</b></param>
      <param name="order">この行列に回転を適用する順序（前後どちらに付加するか）を指定する<see cref="T:FarPoint.Win.Text.TransformOrder" /></param>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.Translate(System.Double,System.Double,FarPoint.Win.Text.TransformOrder)">
      <summary>平行移動ベクトルを前に付加することで、指定した平行移動ベクトル（offsetXとoffsetY）をこの行列に適用します。</summary>
      <param name="offsetX">この行列を水平方向にオフセットする値</param>
      <param name="offsetY">この行列を垂直方向にオフセットする値</param>
      <param name="order">この行列に平行移動を適用する順序（前後どちらに付加するか）を指定する<see cref="T:FarPoint.Win.Text.TransformOrder" /></param>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.Scale(System.Double,System.Double,FarPoint.Win.Text.TransformOrder)">
      <summary>スケールベクトルを前に付加することで、指定したスケールベクトルをこの行列に適用します。</summary>
      <param name="scaleX">この行列をx軸方向にスケールする値</param>
      <param name="scaleY">この行列をy軸方向にスケールする値</param>
      <param name="order">この行列にスケーリングを適用する順序（前後どちらに付加するか）を指定する<see cref="T:FarPoint.Win.Text.TransformOrder" /></param>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.Shear(System.Double,System.Double,FarPoint.Win.Text.TransformOrder)">
      <summary>傾斜変換を前に付加することで、指定した傾斜ベクトルをこの行列に適用します。</summary>
      <param name="shearX">水平方向の傾斜係数</param>
      <param name="shearY">垂直方向の傾斜係数</param>
      <param name="order">この行列に傾斜を適用する順序（前後どちらに付加するか）を指定する<see cref="T:FarPoint.Win.Text.TransformOrder" /></param>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.XAxisReflect(FarPoint.Win.Text.TransformOrder)">
      <summary>この行列にx軸方向の鏡映を適用します。</summary>
      <param name="order">この行列に鏡映を適用する順序（前後どちらに付加するか）を指定する<see cref="T:FarPoint.Win.Text.TransformOrder" /></param>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.YAxisReflect(FarPoint.Win.Text.TransformOrder)">
      <summary>この行列にy軸方向の鏡映を適用します。</summary>
      <param name="order">この行列に鏡映を適用する順序（前後どちらに付加するか）を指定する<see cref="T:FarPoint.Win.Text.TransformOrder" /></param>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.SlashReflect(FarPoint.Win.Text.TransformOrder)">
      <summary>このMatrixオブジェクトに、右上から左下の対角方向の鏡映を適用します。</summary>
      <param name="order">この行列に鏡映を適用する順序（前後どちらに付加するか）を指定する<see cref="T:FarPoint.Win.Text.TransformOrder" /></param>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.BackslashReflect(FarPoint.Win.Text.TransformOrder)">
      <summary>この行列に、左上から右下の対角方向の鏡映を適用します。</summary>
      <param name="order">この行列に鏡映を適用する順序（前後どちらに付加するか）を指定する<see cref="T:FarPoint.Win.Text.TransformOrder" /></param>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.Transform(FarPoint.Win.Text.Coordinate)">
      <summary>
        <see cref="T:FarPoint.Win.Text.Coordinate" />オブジェクトを新しい<see cref="T:FarPoint.Win.Text.Coordinate" />オブジェクトに平行移動します。</summary>
      <param name="value">古い<see cref="T:FarPoint.Win.Text.Coordinate" />値</param>
      <returns>新しい<see cref="T:FarPoint.Win.Text.Coordinate" />値</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.RotateAt(FarPoint.Win.Text.Coordinate,System.Double)">
      <summary>回転を前に付加することで、pointパラメータで指定した点を中心とする時計回りの回転を、このMatrixオブジェクトに適用します。</summary>
      <param name="point">回転の中心を表す<see cref="T:FarPoint.Win.Text.Coordinate" />クラス。</param>
      <param name="angle">回転の角度（エクステント）。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.ReflectAt(FarPoint.Win.Text.Coordinate,FarPoint.Win.Text.Coordinate)">
      <summary>指定した線に沿って行列を鏡映します。</summary>
      <param name="startPoint">線の始点を表す<see cref="T:FarPoint.Win.Text.Coordinate" /></param>
      <param name="endPoint">線の終点を表す<see cref="T:FarPoint.Win.Text.Coordinate" /></param>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.ScaleAt(FarPoint.Win.Text.Coordinate,System.Double,System.Double)">
      <summary>指定した点でスケールベクトルを前に付加することで、指定したスケールベクトルをこの行列に適用します。</summary>
      <param name="point">スケールの中心を表す<see cref="T:FarPoint.Win.Text.Coordinate" /></param>
      <param name="scaleX">この行列をx軸方向にスケールする値</param>
      <param name="scaleY">この行列をy軸方向にスケールする値</param>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.RotateAt(FarPoint.Win.Text.Coordinate,System.Double,FarPoint.Win.Text.TransformOrder)">
      <summary>回転を前に付加することで、pointパラメータで指定した点を中心とする時計回りの回転を、この行列に適用します。</summary>
      <param name="point">回転の中心を表す<see cref="T:FarPoint.Win.Text.Coordinate" /></param>
      <param name="angle">回転の角度（エクステント）</param>
      <param name="order">この行列に回転を適用する順序（前後どちらに付加するか）を指定する<see cref="T:FarPoint.Win.Text.TransformOrder" /></param>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.ReflectAt(FarPoint.Win.Text.Coordinate,FarPoint.Win.Text.Coordinate,FarPoint.Win.Text.TransformOrder)">
      <summary>この行列に、指定した線による鏡映を適用します。</summary>
      <param name="startPoint">線の始点を表す<see cref="T:FarPoint.Win.Text.Coordinate" /></param>
      <param name="endPoint">線の終点を表す<see cref="T:FarPoint.Win.Text.Coordinate" /></param>
      <param name="order">この行列に鏡映を適用する順序（前後どちらに付加するか）を指定する<see cref="T:FarPoint.Win.Text.TransformOrder" /></param>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.ScaleAt(FarPoint.Win.Text.Coordinate,System.Double,System.Double,FarPoint.Win.Text.TransformOrder)">
      <summary>指定した点でスケールベクトルを前に付加することで、指定したスケールベクトルをこの行列に適用します。</summary>
      <param name="point">スケールの中心を表す<see cref="T:FarPoint.Win.Text.Coordinate" /></param>
      <param name="scaleX">この行列をx軸方向にスケールする値</param>
      <param name="scaleY">この行列をy軸方向にスケールする値</param>
      <param name="order">この行列にスケーリングを適用する順序（前後どちらに付加するか）を指定する<see cref="T:FarPoint.Win.Text.TransformOrder" /></param>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.op_Explicit(FarPoint.Win.Text.TransformMatrix)~System.Drawing.Drawing2D.Matrix">
      <summary>TransformMatrixオブジェクトをSystem.Drawing.Drawing2D.Matrixオブジェクトに明示的に変換します。</summary>
      <param name="value">
        <see cref="T:System.Drawing.Drawing2D.Matrix" />オブジェクトに変換する<see cref="T:FarPoint.Win.Text.TransformMatrix" />値。</param>
      <returns>変換後のオブジェクトを示す<see cref="T:System.Drawing.Drawing2D.Matrix" />オブジェクト。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TransformMatrix.op_Explicit(System.Drawing.Drawing2D.Matrix)~FarPoint.Win.Text.TransformMatrix">
      <summary>System.Drawing.Drawing2D.MatrixオブジェクトをTransformMatrixオブジェクトに明示的に変換します。</summary>
      <param name="value">
        <see cref="T:FarPoint.Win.Text.TransformMatrix" />オブジェクトに変換する<see cref="T:System.Drawing.Drawing2D.Matrix" />オブジェクト。</param>
      <returns>変換後のオブジェクトを示す<see cref="T:System.Drawing.Drawing2D.Matrix" />値。</returns>
    </member>
    <member name="P:FarPoint.Win.Text.TransformMatrix.M11">
      <summary>M11の値を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.Text.TransformMatrix.M12">
      <summary>M12の値を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.Text.TransformMatrix.M21">
      <summary>M21の値を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.Text.TransformMatrix.M22">
      <summary>M22の値を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.Text.TransformMatrix.Dx">
      <summary>Dxの値を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.Text.TransformMatrix.Dy">
      <summary>Dyの値を取得または設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.Coordinate">
      <summary>数学の座標概念を表すクラスを定義します。</summary>
      <value>座標:特定の大きさを持つ空間内で線系またはその他の固定された参照系を基準として点、線、曲線、または平面の位置を決定する、2つ以上の数値の任意の集合。</value>
    </member>
    <member name="M:FarPoint.Win.Text.Coordinate.#ctor(System.Double,System.Double)">
      <summary>
        <see cref="T:FarPoint.Win.Text.Coordinate" />クラスの新しいインスタンスを示します。</summary>
      <param name="x">x座標の値を示す<b>double</b>値</param>
      <param name="y">x座標の値を示す<b>double</b>値</param>
    </member>
    <member name="M:FarPoint.Win.Text.Coordinate.op_Implicit(System.Drawing.Point)~FarPoint.Win.Text.Coordinate">
      <summary>Point値をCoordinateオブジェクトに暗黙的に変換します。</summary>
      <param name="value">
        <see cref="T:FarPoint.Win.Text.Coordinate" />オブジェクトに変換する<see cref="T:System.Drawing.Point" />値。</param>
      <returns>変換後のオブジェクトを示す<see cref="T:FarPoint.Win.Text.Coordinate" />オブジェクト。</returns>
      <remarks>暗黙的変換を提供する理由は、PointとCoordinateは描画においては同じ概念であるためです。</remarks>
    </member>
    <member name="M:FarPoint.Win.Text.Coordinate.op_Implicit(FarPoint.Win.Text.Coordinate)~System.Drawing.Point">
      <summary>Coordinate値をPointオブジェクトに暗黙的に変換します。</summary>
      <param name="value">
        <see cref="T:FarPoint.Win.Text.Coordinate" />オブジェクトに変換する<see cref="T:FarPoint.Win.Text.Coordinate" />オブジェクト。</param>
      <returns>変換後のオブジェクトを示す<see cref="T:System.Drawing.Point" />値。</returns>
    </member>
    <member name="P:FarPoint.Win.Text.Coordinate.X">
      <summary>x座標の値を取得または設定します。</summary>
      <value>x座標を示す<b>double</b>値。</value>
    </member>
    <member name="P:FarPoint.Win.Text.Coordinate.Y">
      <summary>y座標の値を取得または設定します。</summary>
      <value>y座標を示す<b>double</b>値。</value>
    </member>
    <member name="T:FarPoint.Win.Text.Coordinate2D">
      <summary>2次元の座標を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Coordinate2D.#ctor(FarPoint.Win.Text.Fraction,FarPoint.Win.Text.Fraction)">
      <summary>新しい2次元座標を作成します。</summary>
      <param name="x">x軸に沿った値を示す<typeparamref name="T" /></param>
      <param name="y">y軸に沿った値を示す<typeparamref name="T" /></param>
    </member>
    <member name="F:FarPoint.Win.Text.Coordinate2D.X">
      <summary>x軸に沿った値を設定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.Coordinate2D.Y">
      <summary>y軸に沿った値を設定します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.Fraction">
      <summary>2つの量の商を示すnn表現を表します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.Fraction._numerator">
      <summary>常分数において線の上部に記述される数字。これは全体の中の部分の数を示します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.Fraction._denominator">
      <summary>常分数において線の下部に記述される数字。これは全体が何個の部分に分割されたかを示します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.#ctor(System.Int32,System.Int32)">
      <summary>指定した分子と分母を使用して、新しい分数を作成します。</summary>
      <param name="numerator">常分数において線の上部に記述される数字。これは全体の中の部分の数を示します。</param>
      <param name="denominator">常分数において線の下部に記述される数字。これは全体が何個の部分に分割されたかを示します。</param>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.#ctor(System.Int32)">
      <summary>指定した分子を使用して、新しい分数を作成します。</summary>
      <param name="numerator">常分数において線の上部に記述される数字。これは全体の中の部分の数を示します。</param>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.op_UnaryNegation(FarPoint.Win.Text.Fraction)">
      <summary>単項"-"演算子を定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.op_Addition(FarPoint.Win.Text.Fraction,FarPoint.Win.Text.Fraction)">
      <summary>単項"+"演算子を定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.op_Subtraction(FarPoint.Win.Text.Fraction,FarPoint.Win.Text.Fraction)">
      <summary>二項"-"演算子を定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.op_Multiply(FarPoint.Win.Text.Fraction,FarPoint.Win.Text.Fraction)">
      <summary>二項"*"演算子を定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.op_Multiply(System.Int32,FarPoint.Win.Text.Fraction)">
      <summary>二項"*"演算子を定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.op_Multiply(FarPoint.Win.Text.Fraction,System.Int32)">
      <summary>二項"*"演算子を定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.op_Division(FarPoint.Win.Text.Fraction,FarPoint.Win.Text.Fraction)">
      <summary>二項"/"演算子を定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.op_Division(System.Int32,FarPoint.Win.Text.Fraction)">
      <summary>二項"/"演算子を定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.op_Division(FarPoint.Win.Text.Fraction,System.Int32)">
      <summary>二項"/"演算子を定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.op_OnesComplement(FarPoint.Win.Text.Fraction)">
      <summary>"~"演算子を定義します。注意:"~"はここでは簡約演算子として使用しています。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.op_GreaterThan(FarPoint.Win.Text.Fraction,FarPoint.Win.Text.Fraction)">
      <summary>二項"&gt;"演算子を定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.op_GreaterThanOrEqual(FarPoint.Win.Text.Fraction,FarPoint.Win.Text.Fraction)">
      <summary>二項"&gt;="演算子を定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.op_LessThan(FarPoint.Win.Text.Fraction,FarPoint.Win.Text.Fraction)">
      <summary>二項演算子を定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.op_LessThanOrEqual(FarPoint.Win.Text.Fraction,FarPoint.Win.Text.Fraction)">
      <summary>二項演算子を定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.op_Equality(FarPoint.Win.Text.Fraction,FarPoint.Win.Text.Fraction)">
      <summary>二項"=="演算子を定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.op_Inequality(FarPoint.Win.Text.Fraction,FarPoint.Win.Text.Fraction)">
      <summary>二項"!="演算子を定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.op_Implicit(FarPoint.Win.Text.Fraction)~System.Double">
      <summary>分数を倍精度数に変換します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.op_Implicit(FarPoint.Win.Text.Fraction)~System.Single">
      <summary>分数を浮動小数点数に変換します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.FromDecimal(System.Decimal)">
      <summary>Decimalを分数に変換します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.op_Explicit(System.Double)~FarPoint.Win.Text.Fraction">
      <summary>倍精度数を分数に変換します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.op_Explicit(System.Single)~FarPoint.Win.Text.Fraction">
      <summary>浮動小数点数を分数に変換します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.op_Implicit(System.Int32)~FarPoint.Win.Text.Fraction">
      <summary>整数を分数に変換します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.Reverse(FarPoint.Win.Text.Fraction)">
      <summary>分数を逆にします。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.Equals(System.Object)">
      <summary>このインスタンスと指定したオブジェクトが等しいかどうかを示します。</summary>
      <param name="obj">比較するオブジェクト。</param>
      <returns>objとこのインスタンスが同じ型で、同じ値を表す場合はTrue、それ以外の場合はFalse。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.GetHashCode">
      <summary>このインスタンスのハッシュコードを返します。</summary>
      <returns>このインスタンスのハッシュコードを表す32ビットの符号付き整数。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.CalculateGreatestCommonDivisor(System.Int32,System.Int32)">
      <summary>
        <c>oneNumber</c>と<c>anotherNumber</c>の最大公約数を求めます。</summary>
      <param name="oneNumber">一方の数字を示す<b>int</b>。</param>
      <param name="anotherNumber">もう一方の数字を示す<b>int</b>。</param>
      <returns>最大公約数を示す<b>int</b>。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.Fraction.Simplify">
      <summary>分数を簡約します。</summary>
    </member>
    <member name="P:FarPoint.Win.Text.Fraction.Numerator">
      <summary>分数の分子を取得または設定します。</summary>
      <value>常分数において線の上部に記述される数字を示す<b>int</b>。これは全体の中の部分の数を示します。</value>
    </member>
    <member name="P:FarPoint.Win.Text.Fraction.Denominator">
      <summary>分数の分母を取得または設定します。</summary>
      <value>常分数において線の下部に記述される数字を示す<b>int</b>。これは全体が何個の部分に分割されたかを示します。</value>
    </member>
    <member name="F:FarPoint.Win.Text.Graphics32._windowHandle">
      <summary>デバイスコンテキストの取得元のウィンドウハンドルを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.Graphics32._objectType">
      <summary>
        <see cref="T:FarPoint.Win.Text.Graphics32.Graphics32Type" />オブジェクトの種類を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.Graphics32._smoothingMode">
      <summary>線、曲線、および塗りつぶし領域の境界に平滑化（アンチエイリアシング）が適用されるかどうかを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.Graphics32._textRenderingHint">
      <summary>テキストレンダリングの質を指定します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Graphics32.FloatEquals(System.Single,System.Single)">
      <summary>2つの単精度浮動小数点数が等しいかどうかをチェックします。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Graphics32.MeasureStringSingleLine(System.String,System.IntPtr)">
      <summary>指定したテキスト文字列（1行）の高さと幅を、指定したフォントを使用して測定します。</summary>
      <param name="s">測定するテキスト文字列</param>
      <param name="hFont">文字列の書式を定義するフォント</param>
      <returns>
        <c>s</c>パラメーターで指定された文字列のサイズ（ピクセル単位）を表す<see cref="T:System.Drawing.Size" />構造体。</returns>
      <remarks>このメソッドは、CRLFなどの文字を無視し、文字列を1行として測定します。ただし、タブ文字は例外です。</remarks>
    </member>
    <member name="M:FarPoint.Win.Text.Graphics32.NativeGetTextExtent(System.IntPtr,System.String)">
      <summary>指定した文字列を測定します。</summary>
      <param name="hdc">Windowsデバイスコンテキストのハンドル。</param>
      <param name="s">測定する文字列。</param>
      <returns>このメソッドは、<c>s</c>パラメーターで指定された文字列のサイズ（ピクセル単位）を表す<see cref="T:System.Drawing.Size" />構造体を返します。</returns>
      <remarks>このメソッドは内部でWin32 <b>GetTextExtentPoint32</b> APIを使用します。このAPIはすべての制御文字を無視します。</remarks>
      <internalonly />
    </member>
    <member name="M:FarPoint.Win.Text.Graphics32.IntersectClip(System.Drawing.Rectangle)">
      <summary>この<see cref="T:FarPoint.Win.Text.Graphics32" />オブジェクトのクリップ領域を、現在のクリップ領域と指定した<see cref="T:System.Drawing.Rectangle" />構造体との交差部分に更新します。</summary>
      <param name="rectangle">現在のクリップ領域と交差する<see cref="T:System.Drawing.Rectangle" />構造体。</param>
      <remarks>このメソッドは、現在のクリップ領域と<c>rectangle</c>パラメーターで指定された矩形との交差部分によって表される領域を、この<see cref="T:FarPoint.Win.Text.Graphics32" />オブジェクトの<b>Clip</b>プロパティに割り当てます。</remarks>
    </member>
    <member name="M:FarPoint.Win.Text.Graphics32.IntersectClip(System.IntPtr)">
      <summary>この<see cref="T:FarPoint.Win.Text.Graphics32" />オブジェクトのクリップ領域を、現在のクリップ領域と指定したWIN32 GDIリージョンオブジェクトとの交差部分に更新します。</summary>
      <param name="hRegion">Win32 GDIリージョンのハンドル。</param>
      <remarks>このメソッドは、現在のクリップ領域とrectパラメーターで指定された矩形との交差部分によって表される領域を、この<see cref="T:FarPoint.Win.Text.Graphics32" />オブジェクトの<b>Clip</b>プロパティに割り当てます。</remarks>
    </member>
    <member name="M:FarPoint.Win.Text.Graphics32.ExcludeClip(System.Drawing.Rectangle)">
      <summary>
        <see cref="T:System.Drawing.Rectangle" />構造体で指定された領域が除外されるように、この<see cref="T:FarPoint.Win.Text.Graphics32" />オブジェクトのクリップ領域を更新します。</summary>
      <param name="rectangle">クリップ領域から除外する矩形を指定する<see cref="T:System.Drawing.Rectangle" />構造体。</param>
      <remarks>このメソッドは、<c>rectangle</c>パラメーターで指定された領域を現在のクリップ領域から除外し、残りの領域をこの<see cref="T:FarPoint.Win.Text.Graphics32" />オブジェクトの<b>Clip</b>プロパティに割り当てます。</remarks>
    </member>
    <member name="M:FarPoint.Win.Text.Graphics32.ExcludeClip(System.IntPtr)">
      <summary>Win32 GDIリージョンハンドルで指定された領域が除外されるように、この<see cref="T:FarPoint.Win.Text.Graphics32" />オブジェクトのクリップ領域を更新します。</summary>
      <param name="hRegion">Win32 GDIリージョンのハンドル。</param>
      <remarks>このメソッドは、<c>hRegion</c>パラメーターで指定された領域を現在のクリップ領域から除外し、残りの領域をこの<see cref="T:FarPoint.Win.Text.Graphics32" />オブジェクトの<b>Clip</b>プロパティに割り当てます。</remarks>
    </member>
    <member name="M:FarPoint.Win.Text.Graphics32.SetClip(System.Drawing.Rectangle)">
      <summary>この<see cref="T:FarPoint.Win.Text.Graphics32" />オブジェクトのクリップ領域を、<see cref="T:System.Drawing.Rectangle" />構造体によって指定された矩形に設定します。</summary>
      <param name="rectangle">新しいクリップ領域を表す<see cref="T:System.Drawing.Rectangle" />構造体。</param>
    </member>
    <member name="M:FarPoint.Win.Text.Graphics32.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)">
      <summary>この<see cref="T:FarPoint.Win.Text.Graphics32" />オブジェクトのクリップ領域を、現在のクリップ領域と<see cref="T:System.Drawing.Rectangle" />構造体によって指定された矩形に対して指定した結合操作を実行した結果に設定します。</summary>
      <param name="rectangle">結合する<see cref="T:System.Drawing.Rectangle" />構造体。</param>
      <param name="combineMode">使用する結合操作を指定する<see cref="T:System.Drawing.Drawing2D.CombineMode" />列挙体のメンバ。</param>
    </member>
    <member name="M:FarPoint.Win.Text.Graphics32.SetClip(System.IntPtr,System.Drawing.Drawing2D.CombineMode)">
      <summary>この<see cref="T:FarPoint.Win.Text.Graphics32" />オブジェクトのクリップ領域を、現在のクリップ領域と指定したWindowsリージョンハンドルに対して指定した結合操作を実行した結果に設定します。</summary>
      <param name="hRegion">結合するWindowsリージョンハンドル。</param>
      <param name="combineMode">使用する結合操作を指定する<see cref="T:System.Drawing.Drawing2D.CombineMode" />列挙体のメンバ。</param>
    </member>
    <member name="M:FarPoint.Win.Text.Graphics32.Save">
      <summary>この<see cref="T:FarPoint.Win.Text.Graphics32" />オブジェクトの現在の状態を保存し、保存した状態をハンドルで識別します。</summary>
      <returns>このメソッドは、この<see cref="T:FarPoint.Win.Text.Graphics32" />オブジェクトの保存状態を表すハンドルを返します。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.Graphics32.Restore(System.Int32)">
      <summary>この<see cref="T:FarPoint.Win.Text.Graphics32" />オブジェクトの状態を、ハンドルによって表される状態に復元します。</summary>
      <param name="gState">この<see cref="T:FarPoint.Win.Text.Graphics32" />オブジェクトを復元したときの状態を表すハンドル。</param>
    </member>
    <member name="P:FarPoint.Win.Text.Graphics32.Hdc">
      <summary>
        <see cref="T:System.IntPtr" />を取得します。</summary>
      <value>HDC。</value>
    </member>
    <member name="P:FarPoint.Win.Text.Graphics32.ToScreen">
      <summary>画面に描画するかどうかを取得または設定します。このプロパティは、印刷プレビューの使用時に印刷グラフィックに描画できないというUniscribe APIのバグを修正するために追加されました。</summary>
      <value>画面に描画する場合は<c>True</c>、それ以外の場合は<c>False</c>。</value>
    </member>
    <member name="P:FarPoint.Win.Text.Graphics32.GraphicsMode">
      <summary>このGraphics32でワールド変換を使用するかどうかを示す<see cref="P:FarPoint.Win.Text.Graphics32.GraphicsMode" />を取得または設定します。</summary>
      <value>グラフィックモードを示す<see cref="P:FarPoint.Win.Text.Graphics32.GraphicsMode" />。</value>
    </member>
    <member name="P:FarPoint.Win.Text.Graphics32.WorldTransform">
      <summary>ワールド空間からページ空間への変換行列を取得または設定します。</summary>
    </member>
    <member name="P:FarPoint.Win.Text.Graphics32.PageScale">
      <summary>水平方向のページスケールを取得または設定します。</summary>
      <value>スケール値</value>
    </member>
    <member name="F:FarPoint.Win.Text.Graphics32.GdiTransformInfo.MapMode">
      <summary>変換情報を表します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Graphics32.GdiTransformInfo.GetTransformInfo(System.IntPtr)">
      <summary>デバイスコンテキストから変換情報を取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.Graphics32.GdiTransformInfo.SetTransformInfos(System.IntPtr,FarPoint.Win.Text.Graphics32.GdiTransformInfo)">
      <summary>デバイスコンテキストに変換情報を設定します。</summary>
      <param name="hdc">HDC</param>
      <param name="transformInfo">変換情報</param>
    </member>
    <member name="T:FarPoint.Win.Text.UnsafeNativeMethods">
      <summary>Win32 API ライブラリに基づくメソッドを定義します。</summary>
      <remarks>UnsafeNativeMethods クラスは、Win32 SDK で提供された関数を定義します。</remarks>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.CreateFontIndirect(FarPoint.Win.Text.UnsafeNativeMethods.LOGFONT@)">
      <summary>CreateFontIndirect 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.CreatePen(System.Int32,System.Int32,System.Int32)">
      <summary>CreatePen 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.DeleteObject(System.IntPtr)">
      <summary>DeleteObject 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.DrawIcon(System.IntPtr,System.Int32,System.Int32,System.IntPtr)">
      <summary>DrawIcon 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.GetGraphicsMode(System.IntPtr)">
      <summary>GetGraphicsMode 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.SetGraphicsMode(System.IntPtr,System.Int32)">
      <summary>SetGraphicsMode 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.GetWorldTransform(System.IntPtr,FarPoint.Win.Text.UnsafeNativeMethods.XFORM@)">
      <summary>GetWorldTransform 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.SetWorldTransform(System.IntPtr,FarPoint.Win.Text.UnsafeNativeMethods.XFORM@)">
      <summary>SetWorldTransform 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.GetTextMetrics(System.IntPtr,FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC@)">
      <summary>GetTextMetrics 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.ReleaseDC(System.IntPtr,System.IntPtr)">
      <summary>ReleaseDC 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.SelectObject(System.IntPtr,System.IntPtr)">
      <summary>SelectObject 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.GetCurrentObject(System.IntPtr,System.UInt32)">
      <summary>GetCurrentObject 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.SetBkMode(System.IntPtr,System.Int32)">
      <summary>SetBKMode 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.SetTextColor(System.IntPtr,System.Int32)">
      <summary>SetTextColor 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.GetTextColor(System.IntPtr)">
      <summary>GetTextColor 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.CreateRectRgn(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>CreateRectRgn 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.GetDC(System.IntPtr)">
      <summary>GetDC 関数。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.UnsafeNativeMethods.LOGBRUSH">
      <summary>LOGBRUSH 構造体は、物理ブラシのスタイル、色、およびパターンを定義します。この構造体は、Windows CreateBrushIndirect 関数と ExtCreatePen 関数で使用されます。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.LOGBRUSH.Style">
      <summary>ブラシ スタイルを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.LOGBRUSH.Color">
      <summary>ブラシを描画するときの色を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.LOGBRUSH.Hatch">
      <summary>ハッチ スタイルを指定します。この値の意味は、Style によって指定されたブラシ スタイルによって異なります。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.UnsafeNativeMethods.NCCALCSIZEPARAMS">
      <summary>NCCALCSIZEPARAMS 構造体は、アプリケーションが WM_NCCALCSIZE メッセージの処理中にウィンドウのクライアント領域のサイズ、位置、有効な容積を計算するために使用する情報を保持します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.NCCALCSIZEPARAMS.rect0">
      <summary>この矩形は、移動またはサイズ変更されたウィンドウの新しい座標を保持します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.NCCALCSIZEPARAMS.rect1">
      <summary>この矩形は、移動またはサイズ変更される前のウィンドウの座標を保持します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.NCCALCSIZEPARAMS.rect2">
      <summary>この矩形は、移動またはサイズ変更される前のウィンドウのクライアント領域の座標を保持します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.NCCALCSIZEPARAMS.lppos">
      <summary>ウィンドウの移動またはサイズ変更の原因となった操作で指定されたサイズと位置の値を保持する WINDOWPOS 構造体へのポインタ。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.UnsafeNativeMethods.PAINTSTRUCT">
      <summary>PAINTSTRUCT 構造体は、アプリケーションの情報を保持します。この情報は、そのアプリケーションが所有するウィンドウのクライアント領域を描画するときに使用できます。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.PAINTSTRUCT.hDC">
      <summary>描画に使用される表示 DC のハンドル。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.PAINTSTRUCT.Erase">
      <summary>背景を消去する必要があるかどうかを指定します。アプリケーションで背景を消去する必要がある場合、この値は０以外になります。背景ブラシを指定せずにウィンドウ クラスを作成した場合、背景を消去するのはアプリケーションの役割となります。詳細については、WNDCLASS 構造体の hbrBackground メンバの説明を参照してください。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.PAINTSTRUCT.Paint_Left">
      <summary>描画が要求される矩形の左上隅と右下隅を指定する矩形の左の値を、クライアント領域の左上隅からの相対的なデバイス単位で指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.PAINTSTRUCT.Paint_Top">
      <summary>描画が要求される矩形の左上隅と右下隅を指定する矩形の上の値を、クライアント領域の左上隅からの相対的なデバイス単位で指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.PAINTSTRUCT.Paint_Right">
      <summary>描画が要求される矩形の左上隅と右下隅を指定する矩形の右の値を、クライアント領域の左上隅からの相対的なデバイス単位で指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.PAINTSTRUCT.Paint_Bottom">
      <summary>描画が要求される矩形の左上隅と右下隅を指定する矩形の下の値を、クライアント領域の左上隅からの相対的なデバイス単位で指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.PAINTSTRUCT.Restore">
      <summary>予約されています。システムが内部で使用します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.PAINTSTRUCT.IncUpdate">
      <summary>予約されています。システムが内部で使用します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.PAINTSTRUCT.Reserved1">
      <summary>予約されています。システムが内部で使用します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.PAINTSTRUCT.Reserved2">
      <summary>予約されています。システムが内部で使用します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.PAINTSTRUCT.Reserved3">
      <summary>予約されています。システムが内部で使用します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.PAINTSTRUCT.Reserved4">
      <summary>予約されています。システムが内部で使用します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.UnsafeNativeMethods.POINT">
      <summary>POINT 構造体は、点の x 座標と y 座標を定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.POINT.X">
      <summary>点の x 座標を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.POINT.Y">
      <summary>点の y 座標を指定します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.POINT.#ctor(System.Int32,System.Int32)">
      <summary>POINT 構造体を作成します。</summary>
      <param name="x">点の x 座標を指定します。</param>
      <param name="y">点の y 座標を指定します。</param>
    </member>
    <member name="T:FarPoint.Win.Text.UnsafeNativeMethods.RECT">
      <summary>RECT 構造体は、矩形の左上隅と右下隅の座標を定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.RECT.Left">
      <summary>矩形の左上隅の x 座標を取得します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.RECT.Top">
      <summary>矩形の左上隅の y 座標を取得します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.RECT.Right">
      <summary>矩形の右下隅の x 座標を取得します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.RECT.Bottom">
      <summary>矩形の右下隅の y 座標を取得します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.RECT.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>RECT 構造体を作成します。</summary>
      <param name="left">矩形の左上隅の x 座標を取得します。</param>
      <param name="top">矩形の左上隅の y 座標を取得します。</param>
      <param name="right">矩形の右下隅の x 座標を取得します。</param>
      <param name="bottom">矩形の右下隅の y 座標を取得します。</param>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.RECT.#ctor(System.Drawing.Rectangle)">
      <summary>RECT 構造体を作成します。</summary>
      <param name="rectangle">矩形を指定します。</param>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.RECT.Offset(System.Int32,System.Int32)">
      <summary>この矩形の位置を、指定した量に従って調整します。</summary>
      <param name="x">水平方向のオフセット。</param>
      <param name="y">垂直方向のオフセット。</param>
    </member>
    <member name="P:FarPoint.Win.Text.UnsafeNativeMethods.RECT.Width">
      <summary>幅を取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.Text.UnsafeNativeMethods.RECT.Height">
      <summary>高さを取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.UnsafeNativeMethods.SIZE">
      <summary>SIZE 構造体は、矩形の幅と高さを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.SIZE.cx">
      <summary>矩形の幅を指定します。単位は、この構造体を使用する関数によって異なります。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.SIZE.cy">
      <summary>矩形の高さを指定します。単位は、この構造体を使用する関数によって異なります。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.SIZE.#ctor(System.Int32,System.Int32)">
      <summary>SIZE 構造体を作成します。</summary>
      <param name="width">サイズの幅を指定します。</param>
      <param name="height">サイズの高さを指定します。</param>
    </member>
    <member name="T:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC">
      <summary>TEXTMETRIC 構造体は、物理フォントに関する基本情報を保持します。サイズはすべて論理単位で指定されます。つまり、表示コンテキストの現在のマッピング モードによって単位は異なります。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.Height">
      <summary>文字の高さ（アセント + ディセント）を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.Ascent">
      <summary>文字のアセント（ベース ラインから上の部分）を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.Descent">
      <summary>文字のディセント（ベース ラインから下の部分）を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.InternalLeading">
      <summary>tmHeight メンバによって設定された範囲内のレディング（スペース）の量を指定します。この領域にはアクセント記号やその他の発音区別符号が描画されることがあります。このメンバはデザイナがゼロに設定する場合があります。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.ExternalLeading">
      <summary>アプリケーションが行間に付加する追加のレディング（スペース）の量を指定します。この領域はフォントの外側にあるので、記号が描画されることはなく、OPAQUE モードまたは TRANSPARENT モードでのテキスト出力呼び出しによって変更されることもありません。このメンバはデザイナがゼロに設定する場合があります。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.AveCharWidth">
      <summary>フォント内の文字の平均的な幅を指定します（通常は文字 x の幅として定義されます）。この値には、太字または斜体で必要とされる突き出し部分は含まれません。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.MaxCharWidth">
      <summary>フォント内の最も幅の広い文字の幅を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.Weight">
      <summary>フォントのウェイトを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.Overhang">
      <summary>合成フォントに付加される追加の幅を文字列単位で指定します。太字や斜体などの属性を合成するとき、グラフィック デバイス インタフェース（GDI）またはデバイスは、文字単位と文字列単位の両方で文字列に幅を追加しなければならない場合があります。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.DigitizedAspectX">
      <summary>フォントが設計された対象のデバイスの水平アスペクトを指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.DigitizedAspectY">
      <summary>フォントが設計された対象のデバイスの垂直アスペクトを指定します。tmDigitizedAspectX メンバと tmDigitizedAspectY メンバの比率が、フォントが設計された対象のデバイスのアスペクト比になります。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.FirstChar">
      <summary>フォントで定義された最初の文字の値を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.LastChar">
      <summary>フォントで定義された最後の文字の値を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.DefaultChar">
      <summary>フォントに含まれない文字の代用として描画される文字の値を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.BreakChar">
      <summary>テキストの位置揃え用の単語間隔の定義に使用する文字の値を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.Italic">
      <summary>斜体フォントの場合、ゼロ以外の値になります。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.Underlined">
      <summary>下線付きフォントの場合、ゼロ以外の値になります。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.StruckOut">
      <summary>取り消し線付きフォントの場合、ゼロ以外の値になります。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.PitchAndFamily">
      <summary>物理フォントのピッチ、フォント技術、およびファミリに関する情報を指定します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.CharSet">
      <summary>フォントの文字セットを指定します。文字セットには次のいずれかの値を指定できます。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.UnsafeNativeMethods.XFORM">
      <summary>XFORM 構造体は、ワールド座標からページ座標への変換に関する情報を保持します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.XFORM.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>このコンストラクタは、<b>XFORM</b> 構造体の新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.LOGFONT.Equals(FarPoint.Win.Text.UnsafeNativeMethods.LOGFONT)">
      <summary>このメソッドは、Fon32 クラスの警告カウントを減らすために追加してください。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextHelper">
      <summary>さまざまなスタイルと設定でテキストを描画する静的メソッドを提供します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextHelper.RLM">
      <summary>RLM（Right-to-Left Mark） - 200F。 アラビア文字となります。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextHelper.LRM">
      <summary>LRM（Left-to-Right Mark） - 200E。 ラテン文字となります。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextHelper.RLE">
      <summary>RLE（Right-to-Left Embedding） - 202B。 以降のテキストを右から左へ埋め込まれているものとして扱います。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextHelper.LRE">
      <summary>LRE（Left-to-Right Embedding） - 202A。 以降のテキストを左から右へ埋め込まれているものとして扱います。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextHelper.RLO">
      <summary>RLO（Right-to-Left Override） - 202E。 以降の文字を右から左へ記述するストロング文字として扱うことを強制します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextHelper.LRO">
      <summary>LRO（Left-to-Right Override） - 202D。 以降の文字を左から右へ記述するストロング文字として扱うことを強制します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextHelper.PDF">
      <summary>PDF（Pop Directional Format） - 202C。 双方向状態を最後の LRE、RLE、RLO、LRO の前の状態に復元します。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextHelper.ZWJ">
      <summary>ZWJ（Zero Width Joiner） - 200D。 可能であれば、先頭文字と終了文字が結合されるようにします。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextHelper.ZWNJ">
      <summary>ZWNJ（Zero Width Non Joiner） - 200C。 先頭文字と終了文字が結合されないようにします。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextHelper.RS">
      <summary>RS（Record Separator） - 1E。データを区切って論理的に識別するために使用される制御文字。その固有の意味は各アプリケーションで指定する必要があります。階層的な順序で使用されている場合、この文字はレコードと呼ばれるデータ項目を区切ります。</summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextHelper.US">
      <summary>US（Unit Separator） - 1F。データを区切って論理的に識別するために使用される制御文字。その固有の意味は各アプリケーションで指定する必要があります。階層的な順序で使用されている場合、この文字はユニットと呼ばれるデータ項目を区切ります。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.MeasureDrawRotationText(System.Boolean,System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Double,System.Int32,System.Boolean)">
      <summary>回転したテキストを測定して描画します。</summary>
      <param name="measuring">測定するかどうか</param>
      <param name="graphics">グラフィックデバイスインタフェース</param>
      <param name="s">テキスト文字列</param>
      <param name="font">テキストのフォント</param>
      <param name="rectangle">テキストを囲む矩形</param>
      <param name="foreColor">テキストの色</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを複数行に折り返すかどうか</param>
      <param name="hotkeyPrefix">ホットキー接頭辞</param>
      <param name="rotationAngle">回転の角度</param>
      <param name="textIndent">テキストのインデント量</param>
      <param name="isRTL">レイアウトが右から左かどうか</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.ReverseParagraphsForTopDown(System.String)">
      <summary>縦書きのために段落を逆にします。</summary>
      <param name="str">文字列。</param>
      <returns></returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.CalculateSinACosA(System.Double@,System.Double@,System.Double@,System.Boolean@,FarPoint.Win.TextOrientation,System.Drawing.Rectangle@,System.IntPtr@,FarPoint.Win.Text.Graphics32@,FarPoint.Win.HorizontalAlignment@,FarPoint.Win.VerticalAlignment@)">
      <summary>後で使用するために、角度のサインおよびコサインとその他の変数を計算します。</summary>
      <param name="angle">角度</param>
      <param name="sinA">角度のサイン</param>
      <param name="cosA">角度のコサイン</param>
      <param name="isRotation">テキストが回転するかどうか</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="rectangle">矩形</param>
      <param name="hFont">フォントのハンドル</param>
      <param name="graphics32">グラフィック</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.AdjustAlignment(FarPoint.Win.VerticalAlignment,FarPoint.Win.HorizontalAlignment,System.Boolean,System.Double,System.Double,System.Int32,System.Int32,System.Boolean,FarPoint.Win.Text.AlignHorizontal@,FarPoint.Win.Text.AlignVertical@,FarPoint.Win.Text.TextRender.SimpleTools.TextAdjustmentMode@,FarPoint.Win.Text.TextRender.SimpleTools.TextAdjustmentMode@,FarPoint.Win.Text.AlignHorizontal@,FarPoint.Win.Text.AlignVertical@,FarPoint.Win.Text.TextRender.SimpleTools.SimplePageTemplate@)">
      <summary>配置を調整します。</summary>
      <param name="valign">垂直方向の配置</param>
      <param name="halign">水平方向の配置</param>
      <param name="isRotation">テキストが回転するかどうか</param>
      <param name="sinA">角度のサイン</param>
      <param name="cosA">角度のコサイン</param>
      <param name="tabWidth">タブの幅</param>
      <param name="textIndent">テキストのインデント量</param>
      <param name="isRTL">レイアウトが右から左かどうか</param>
      <param name="lineAlign">行の配置</param>
      <param name="wordAlign">単語の配置</param>
      <param name="wordAdjustment">単語の調整</param>
      <param name="lineAdjustment">行の調整</param>
      <param name="pageAlignH">ページの水平方向の配置</param>
      <param name="pageAlignV">ページの垂直方向の配置</param>
      <param name="pageTemplate">ページテンプレート</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.AdjustAlignmentMinus90To90(FarPoint.Win.VerticalAlignment,FarPoint.Win.HorizontalAlignment,System.Boolean,System.Boolean,FarPoint.Win.Text.AlignHorizontal@,FarPoint.Win.Text.AlignVertical@,FarPoint.Win.Text.AlignHorizontal@,FarPoint.Win.Text.TextRender.SimpleTools.TextAdjustmentMode@,FarPoint.Win.Text.TextRender.SimpleTools.TextAdjustmentMode@)">
      <summary>-90から90までの配置を調整します。</summary>
      <param name="valign">垂直方向の配置</param>
      <param name="halign">水平方向の配置</param>
      <param name="isRotation">テキストが回転するかどうか</param>
      <param name="isRTL">レイアウトが右から左かどうか</param>
      <param name="lineAlign">行の配置</param>
      <param name="pageAlignV">ページの垂直方向の配置</param>
      <param name="pageAlignH">ページの水平方向の配置</param>
      <param name="wordAdjustment">単語の調整</param>
      <param name="lineAdjustment">行の調整</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.AdjustAlignmentMinus90(FarPoint.Win.VerticalAlignment,FarPoint.Win.HorizontalAlignment,System.Boolean,System.Boolean,FarPoint.Win.Text.AlignHorizontal@,FarPoint.Win.Text.AlignVertical@,FarPoint.Win.Text.AlignHorizontal@,FarPoint.Win.Text.TextRender.SimpleTools.TextAdjustmentMode@,FarPoint.Win.Text.TextRender.SimpleTools.TextAdjustmentMode@)">
      <summary>-90の配置を調整します。</summary>
      <param name="valign">垂直方向の配置</param>
      <param name="halign">水平方向の配置</param>
      <param name="isRotation">テキストが回転するかどうか</param>
      <param name="isRTL">レイアウトが右から左かどうか</param>
      <param name="lineAlign">行の配置</param>
      <param name="pageAlignV">ページの垂直方向の配置</param>
      <param name="pageAlignH">ページの水平方向の配置</param>
      <param name="wordAdjustment">単語の調整</param>
      <param name="lineAdjustment">行の調整</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.AdjustAlignment90(FarPoint.Win.VerticalAlignment,FarPoint.Win.HorizontalAlignment,System.Boolean,System.Boolean,FarPoint.Win.Text.AlignHorizontal@,FarPoint.Win.Text.AlignHorizontal@,FarPoint.Win.Text.AlignVertical@,FarPoint.Win.Text.TextRender.SimpleTools.TextAdjustmentMode@,FarPoint.Win.Text.TextRender.SimpleTools.TextAdjustmentMode@)">
      <summary>90の配置を調整します。</summary>
      <param name="valign">垂直方向の配置</param>
      <param name="halign">水平方向の配置</param>
      <param name="isRotation">テキストが回転するかどうか</param>
      <param name="isRTL">レイアウトが右から左かどうか</param>
      <param name="lineAlign">行の配置</param>
      <param name="pageAlignH">ページの水平方向の配置</param>
      <param name="pageAlignV">ページの垂直方向の配置</param>
      <param name="wordAdjustment">単語の調整</param>
      <param name="lineAdjustment">行の調整</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.ProcessHotKey(System.String,System.Drawing.Text.HotkeyPrefix,System.Boolean,FarPoint.Win.Text.TextRender.TextBindingCollection@)">
      <summary>ホットキーを処理します。</summary>
      <param name="str">文字列。</param>
      <param name="hotkeyPrefix">ホットキー接頭辞。</param>
      <param name="stringIsRTL">文字列が右から左に描画される場合は<c>True</c>。</param>
      <param name="textStyles">テキストのスタイル。</param>
      <returns></returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.DrawNormalText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32,System.Boolean,System.Double,System.Int32,System.Boolean)">
      <summary>指定した文字列を指定した矩形内に、指定したフォント、色、配置、向き、折り返し、ホットキー接頭辞、文字列トリミング、回転角度を使用して描画します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">描画する文字列</param>
      <param name="font">使用するフォント</param>
      <param name="foreColor">テキストの色</param>
      <param name="rectangle">文字列を描画する矩形</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="hotkeyPrefix">HotkeyPrefix</param>
      <param name="stringTrim">StringTrimming</param>
      <param name="drawRectHeight">対象矩形の高さ（ピクセル単位）</param>
      <param name="adjust">配置に合わせて矩形を調整するかどうかを表すブール値</param>
      <param name="rotationAngle">テキストを回転する角度</param>
      <param name="textIndent">テキストのインデント</param>
      <param name="isRTL">レイアウトが右から左かどうか</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.DrawNormalTextTopDown(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF@,FarPoint.Win.VerticalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32,System.Drawing.SolidBrush,System.Drawing.StringFormat,System.Int32@,System.Boolean,System.Drawing.SizeF@)">
      <summary>通常のテキストを上から下へ描画します。</summary>
      <param name="g">g。</param>
      <param name="s">s。</param>
      <param name="font">フォント。</param>
      <param name="foreColor">前景色。</param>
      <param name="rectangle">矩形。</param>
      <param name="valign">垂直方向の配置</param>
      <param name="textOrientation">テキストの向き。</param>
      <param name="wordWrap">
        <c>True</c> に設定した場合、[word wrap]。</param>
      <param name="hotkeyPrefix">ホットキー接頭辞。</param>
      <param name="stringTrim">文字列のトリミング。</param>
      <param name="drawRectHeight">描画矩形の高さ。</param>
      <param name="brush">ブラシ。</param>
      <param name="fmt">FMT。</param>
      <param name="flags">フラグ。</param>
      <param name="toscreen">
        <c>True</c> に設定した場合、[toscreen]。</param>
      <param name="textSize">テキストのサイズ。</param>
      <returns></returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.DrawNormalTextVerticalFlipped(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF@,System.Drawing.SolidBrush,System.Drawing.StringFormat,System.Int32,System.Drawing.Rectangle@,System.Boolean,System.Drawing.Bitmap,System.Drawing.Graphics)">
      <summary>通常のテキストを上下に反転させて描画します。</summary>
      <param name="g">g。</param>
      <param name="s">s。</param>
      <param name="font">フォント。</param>
      <param name="foreColor">前景色。</param>
      <param name="rectangle">矩形。</param>
      <param name="brush">ブラシ。</param>
      <param name="fmt">FMT。</param>
      <param name="flags">フラグ。</param>
      <param name="rect">矩形。</param>
      <param name="toscreen">
        <c>True</c> に設定した場合、[toscreen]。</param>
      <param name="bmp">BMP。</param>
      <param name="gtemp">gtemp。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.DrawNormalTextVertical(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF@,System.Drawing.SolidBrush,System.Drawing.StringFormat,System.Single,System.Int32,System.Drawing.Rectangle@,System.Boolean,System.Drawing.Bitmap,System.Drawing.Graphics)">
      <summary>通常のテキストを縦に描画します。</summary>
      <param name="g">g。</param>
      <param name="s">s。</param>
      <param name="font">フォント。</param>
      <param name="foreColor">前景色。</param>
      <param name="rectangle">矩形。</param>
      <param name="brush">ブラシ。</param>
      <param name="fmt">FMT。</param>
      <param name="fAdjust">f 調整。</param>
      <param name="flags">フラグ。</param>
      <param name="rect">矩形。</param>
      <param name="toscreen">
        <c>True</c> に設定した場合、[toscreen]。</param>
      <param name="bmp">BMP。</param>
      <param name="gtemp">gtemp。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.DrawNormalTextHorizontalFlipped(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF@,System.Drawing.SolidBrush,System.Drawing.StringFormat,System.Single,System.Int32,System.Drawing.Rectangle@,System.Boolean,System.Drawing.Bitmap,System.Drawing.Graphics)">
      <summary>通常のテキストを左右に反転させて描画します。</summary>
      <param name="g">g。</param>
      <param name="s">s。</param>
      <param name="font">フォント。</param>
      <param name="foreColor">前景色。</param>
      <param name="rectangle">矩形。</param>
      <param name="brush">ブラシ。</param>
      <param name="fmt">FMT。</param>
      <param name="fAdjust">f 調整。</param>
      <param name="flags">フラグ。</param>
      <param name="rect">矩形。</param>
      <param name="toscreen">
        <c>True</c> に設定した場合、[toscreen]。</param>
      <param name="bmp">BMP。</param>
      <param name="gtemp">gtemp。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.DrawNormalTextHorizontal(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF@,System.Drawing.SolidBrush,System.Drawing.StringFormat,System.Int32,System.Drawing.Rectangle@,System.Boolean)">
      <summary>通常のテキストを横に描画します。</summary>
      <param name="g">g。</param>
      <param name="s">s。</param>
      <param name="font">フォント。</param>
      <param name="foreColor">前景色。</param>
      <param name="rectangle">矩形。</param>
      <param name="brush">ブラシ。</param>
      <param name="fmt">FMT。</param>
      <param name="flags">フラグ。</param>
      <param name="rect">矩形。</param>
      <param name="toscreen">
        <c>True</c> に設定した場合、[toscreen]。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.CalculateTextBoundsHorizontal(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.RectangleF@,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Drawing.StringTrimming@,System.Int32,System.Drawing.StringFormat,System.Single@,System.Boolean,System.Drawing.SizeF@,System.Drawing.SizeF@)">
      <summary>横に描画する場合のテキストの境界を計算します。</summary>
      <param name="g">g。</param>
      <param name="s">s。</param>
      <param name="font">フォント。</param>
      <param name="rectangle">矩形。</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
      <param name="stringTrim">文字列のトリミング。</param>
      <param name="textIndent">テキストのインデント。</param>
      <param name="fmt">FMT。</param>
      <param name="fAdjust">f 調整。</param>
      <param name="toscreen">
        <c>True</c> に設定した場合、[toscreen]。</param>
      <param name="textSize">テキストのサイズ。</param>
      <param name="testSize">テストのサイズ。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.CalculateTextBoundsHorizontalFlipped(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.RectangleF@,FarPoint.Win.HorizontalAlignment@,FarPoint.Win.VerticalAlignment@,System.Drawing.StringTrimming@,System.Int32,System.Drawing.StringFormat,System.Single@,System.Boolean,System.Drawing.SizeF@,System.Drawing.SizeF@)">
      <summary>左右に反転する場合のテキストの境界を計算します。</summary>
      <param name="g">g。</param>
      <param name="s">s。</param>
      <param name="font">フォント。</param>
      <param name="rectangle">矩形。</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
      <param name="stringTrim">文字列のトリミング。</param>
      <param name="textIndent">テキストのインデント。</param>
      <param name="fmt">FMT。</param>
      <param name="fAdjust">f 調整。</param>
      <param name="toscreen">
        <c>True</c> に設定した場合、[toscreen]。</param>
      <param name="textSize">テキストのサイズ。</param>
      <param name="testSize">テストのサイズ。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.CalculateTextBoundsVerticalFlipped(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.RectangleF@,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Drawing.StringTrimming@,System.Int32,System.Drawing.StringFormat,System.Single@,System.Boolean,System.Drawing.SizeF@,System.Drawing.SizeF@)">
      <summary>上下に反転する場合のテキストの境界を計算します。</summary>
      <param name="g">g。</param>
      <param name="s">s。</param>
      <param name="font">フォント。</param>
      <param name="rectangle">矩形。</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
      <param name="stringTrim">文字列のトリミング。</param>
      <param name="textIndent">テキストのインデント。</param>
      <param name="fmt">FMT。</param>
      <param name="fAdjust">f 調整。</param>
      <param name="toscreen">
        <c>True</c> に設定した場合、[toscreen]。</param>
      <param name="textSize">テキストのサイズ。</param>
      <param name="testSize">テストのサイズ。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.CalculateTextBoundsVertical(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.RectangleF@,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Drawing.StringTrimming@,System.Int32,System.Drawing.StringFormat,System.Single@,System.Boolean,System.Drawing.SizeF@,System.Drawing.SizeF@)">
      <summary>縦に描画する場合のテキストの境界を計算します。</summary>
      <param name="g">g。</param>
      <param name="s">s。</param>
      <param name="font">フォント。</param>
      <param name="rectangle">矩形。</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
      <param name="stringTrim">文字列のトリミング。</param>
      <param name="textIndent">テキストのインデント。</param>
      <param name="fmt">FMT。</param>
      <param name="fAdjust">f 調整。</param>
      <param name="toscreen">
        <c>True</c> に設定した場合、[toscreen]。</param>
      <param name="textSize">テキストのサイズ。</param>
      <param name="testSize">テストのサイズ。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.CalculateTextBoundsTopDownRTL(System.Drawing.RectangleF@,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Boolean,System.Single@,System.Drawing.SizeF@)">
      <summary>上から下へ RTL で描画する場合のテキストの境界を計算します。</summary>
      <param name="rectangle">矩形。</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
      <param name="wordWrap">
        <c>True</c> に設定した場合、[word wrap]。</param>
      <param name="fAdjust">f 調整。</param>
      <param name="textSize">テキストのサイズ。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.CalculateTextBoundsTopDown(System.Drawing.RectangleF@,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Boolean,System.Single@,System.Drawing.SizeF@)">
      <summary>上から下へ描画する場合のテキストの境界を計算します。</summary>
      <param name="rectangle">矩形。</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
      <param name="wordWrap">
        <c>True</c> に設定した場合、[word wrap]。</param>
      <param name="fAdjust">f 調整。</param>
      <param name="textSize">テキストのサイズ。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.DrawTrimedText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color@,System.Drawing.RectangleF@,FarPoint.Win.HorizontalAlignment@,FarPoint.Win.VerticalAlignment@,FarPoint.Win.TextOrientation,System.Boolean,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32,System.Boolean,System.Double,System.Int32,System.Boolean)">
      <summary>トリミングされたテキストを描画します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="s">テキスト文字列</param>
      <param name="font">テキストのフォント</param>
      <param name="foreColor">テキストの色</param>
      <param name="rectangle">テキストの境界を表す矩形</param>
      <param name="halign">テキストの水平方向の配置</param>
      <param name="valign">テキストの垂直方向の配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを複数行に折り返せるかどうか</param>
      <param name="multiline">複数行のテキストを許可するかどうか</param>
      <param name="hotkeyPrefix">ホットキー接頭辞</param>
      <param name="stringTrim">文字列のトリミングモード</param>
      <param name="drawRectHeight">描画される矩形の高さ</param>
      <param name="adjust">調整するかどうか</param>
      <param name="rotationAngle">テキストの回転角度</param>
      <param name="textIndent">テキストのインデント量</param>
      <param name="isRTL">レイアウトが右から左かどうか</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.MeasureNormalText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.RectangleF,FarPoint.Win.TextOrientation,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32)">
      <summary>指定したフォント、向き、折り返し設定、ホットキー接頭辞、文字列トリミングで、指定したテキストを描画したときのサイズを取得します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">文字列</param>
      <param name="font">フォント</param>
      <param name="rectangle">RectangleF</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを複数行に折り返すかどうか</param>
      <param name="hotkeyPrefix">ホットキー接頭辞</param>
      <param name="stringTrim">文字列のトリミングモード</param>
      <param name="textIndent">テキストのインデント量</param>
      <returns>SizeFオブジェクト</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.IsTrimedString(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32,System.Boolean,System.Double,System.Int32)">
      <summary>テキストがトリミングされているかどうかを判定します。</summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="s">テキスト文字列</param>
      <param name="font">テキストのフォント</param>
      <param name="foreColor">テキストの色</param>
      <param name="rectangle">テキストの境界を表す矩形</param>
      <param name="halign">テキストの水平方向の配置</param>
      <param name="valign">テキストの垂直方向の配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを複数行に折り返せるかどうか</param>
      <param name="hotkeyPrefix">ホットキー接頭辞</param>
      <param name="stringTrim">文字列のトリミングモード</param>
      <param name="drawRectHeight">描画される矩形の高さ</param>
      <param name="adjust">調整するかどうか</param>
      <param name="rotationAngle">テキストの回転角度</param>
      <param name="textIndent">テキストのインデント量</param>
      <returns>テキストがトリミングされている場合は<c>True</c>、それ以外の場合は<c>False</c>。</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.GetTextFormatFlags(System.Boolean,System.Boolean,System.Drawing.Text.HotkeyPrefix,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Drawing.StringTrimming)">
      <summary>テキスト書式フラグを取得します</summary>
      <param name="wordWrap">
        <c>True</c> に設定した場合、[word wrap]。</param>
      <param name="multiline">
        <c>True</c> に設定した場合、[multiline]。</param>
      <param name="hotkeyPrefix">ホットキー接頭辞。</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
      <param name="stringTrim">文字列のトリミング。</param>
      <returns></returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.DrawRotatedText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32,System.Boolean,System.Double,System.Int32,System.Boolean)">
      <summary>指定した文字列を指定した矩形内に、指定したフォント、色、配置、向き、折り返し、ホットキー接頭辞、文字列トリミング、回転角度を使用して描画します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">描画する文字列</param>
      <param name="font">使用するフォント</param>
      <param name="foreColor">テキストの色</param>
      <param name="rectText">文字列を描画する矩形</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="multiline">テキストを複数行で描画する場合は True、それ以外の場合は False</param> // 20080 -scl
            <param name="hotkeyPrefix">HotkeyPrefix</param><param name="stringTrim">StringTrimming</param><param name="drawRectHeight">対象矩形の高さ（ピクセル単位）</param><param name="adjust">配置に合わせて矩形を調整するかどうかを表すブール値</param><param name="rotationAngle">テキストを回転する角度</param><param name="rightToLeft">右から左へレンダリングする場合は True</param><param name="textIndent">テキストをインデントするピクセル数</param></member>
    <member name="M:FarPoint.Win.Text.TextHelper.GetRotatedTextSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.RectangleF,FarPoint.Win.TextOrientation,System.Boolean,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32)">
      <summary>指定したフォント、向き、折り返し設定、ホットキー接頭辞、文字列トリミングで、指定したテキストを描画したときのサイズを取得します。</summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">テキスト文字列</param>
      <param name="font">テキストのフォント</param>
      <param name="r">テキストを囲む矩形</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを複数行に折り返すかどうか</param>
      <param name="multiline">複数行のテキストを許可するかどうか</param> // 20080 -scl
            <param name="hotkeyPrefix">ホットキー接頭辞</param><param name="stringTrim">文字列のトリミングモード</param><param name="textIndent">テキストをインデントするピクセル数</param><returns>SizeFオブジェクト</returns></member>
    <member name="M:FarPoint.Win.Text.TextHelper.Draw(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32,System.Boolean,System.Double,System.Int32,System.Boolean)">
      <summary>テキストを描画します。</summary>
      <param name="g">テキストを描画するためのグラフィックデバイスインタフェース</param>
      <param name="s">描画するテキスト</param>
      <param name="font">テキストのフォント</param>
      <param name="foreColor">テキストの色</param>
      <param name="rectangle">テキストの境界矩形</param>
      <param name="halign">境界矩形に対するテキストの水平方向の配置設定</param>
      <param name="valign">境界矩形に対するテキストの垂直方向の配置設定</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを複数行に折り返すかどうか</param>
      <param name="multiline">複数行のテキストを許可するかどうか</param>
      <param name="hotkeyPrefix">テキストのホットキー接頭辞のスタイル</param>
      <param name="stringTrim">テキストのトリミング効果</param>
      <param name="drawRectHeight">描画する矩形の高さ</param>
      <param name="adjust">描画時にテキストの境界矩形を調整するかどうか</param>
      <param name="rotationAngle">テキストの回転角度</param>
      <param name="textIndent">テキストをインデントするピクセル数</param>
      <param name="isRTL">レイアウトが右から左かどうか</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.Measure(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32,System.Boolean,System.Double,System.Int32)">
      <summary>テキストのサイズを測定します。</summary>
      <param name="g">テキストを測定するためのグラフィックデバイスインタフェース</param>
      <param name="s">測定するテキスト</param>
      <param name="font">テキストのフォント</param>
      <param name="foreColor">テキストの色</param>
      <param name="rectangle">テキストの境界矩形</param>
      <param name="halign">境界矩形に対するテキストの水平方向の配置設定</param>
      <param name="valign">境界矩形に対するテキストの垂直方向の配置設定</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを複数行に折り返すかどうか</param>
      <param name="multiline">複数行が許可されるかどうか</param>
      <param name="hotkeyPrefix">ホットキー接頭辞</param>
      <param name="stringTrim">テキストのトリミング効果</param>
      <param name="drawRectHeight">矩形の高さ</param>
      <param name="adjust">テキストの境界矩形を調整するかどうか</param>
      <param name="rotationAngle">テキストの回転角度</param>
      <param name="textIndent">テキストをインデントするピクセル数</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.IsComplexString(System.String)">
      <summary>RTLの読み取り順序を含む複合文字列かどうかを判定します。</summary>
      <param name="s">s。</param>
      <returns>RTLの読み取り順序を含む複合文字列の場合は<c>True</c>、それ以外の場合は<c>False</c>。</returns>
    </member>
    <member name="T:FarPoint.Win.UnlockDialog">
      <summary>システムのロック解除ダイアログを表します。</summary>
    </member>
    <member name="F:FarPoint.Win.UnlockDialog.components">
      <summary>必須デザイナ変数。</summary>
    </member>
    <member name="M:FarPoint.Win.UnlockDialog.#ctor">
      <summary>新しいロック解除ダイアログを作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.UnlockDialog.#ctor(System.Object,System.Boolean)">
      <summary>インスタンスと、すでに購入済みかどうかを指定して、新しいロック解除ダイアログを作成します。</summary>
      <param name="instance">インスタンスを含むオブジェクト</param>
      <param name="alreadyPurchased">製品がすでに購入されているかどうか</param>
    </member>
    <member name="M:FarPoint.Win.UnlockDialog.Dispose(System.Boolean)">
      <summary>使用されたリソースをすべてクリーンアップします。</summary>
    </member>
    <member name="M:FarPoint.Win.UnlockDialog.InitializeComponent">
      <summary>デザイナサポートの必須メソッド。このメソッドの内容は コードエディタで変更しないでください。</summary>
    </member>
    <member name="T:FarPoint.Win.VisualStyleTheme">
      <summary>uxtheme.dll の表示スタイル（Windows XP テーマ）ハンドルを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.VisualStyleTheme.#cctor">
      <summary>内部使用のみ。表示スタイル（XP テーマ）を作成します。</summary>
    </member>
    <member name="M:FarPoint.Win.VisualStyleTheme.Finalize">
      <summary>内部使用のみ。表示スタイル（XP テーマ）を処理します。</summary>
    </member>
    <member name="M:FarPoint.Win.VisualStyleTheme.#ctor(System.String)">
      <summary>新しい表示スタイル（XP テーマ）を作成します。</summary>
      <param name="classList">テーマ情報を検索するためのクラス リスト</param>
    </member>
    <member name="M:FarPoint.Win.VisualStyleTheme.GetTheme(System.Boolean)">
      <summary>このインスタンスの表示スタイル（Theme オブジェクト）を取得します。</summary>
      <param name="create">Theme オブジェクトの作成を強制するか、既存の Theme オブジェクトへの参照を追加する場合は True、Theme が存在するかどうかを問い合わせる場合は False</param>
      <returns>このインスタンスの Theme オブジェクト。create が False で、このインスタンスの Theme オブジェクトがまだ作成されていない場合は Null。</returns>
    </member>
    <member name="M:FarPoint.Win.VisualStyleTheme.CloseTheme(FarPoint.Win.VisualStyleTheme.Theme)">
      <summary>このインスタンスの Theme オブジェクトへの参照を解放し、これが Theme オブジェクトへの最後の参照である場合はテーマ ハンドルを閉じて Theme オブジェクトを削除します。</summary>
      <param name="theme">閉じるテーマ</param>
    </member>
    <member name="M:FarPoint.Win.VisualStyleTheme.OnThemeChanged(System.Object,System.EventArgs)">
      <summary>ThemeChangedWindow の ThemeChanged イベントを処理し、クライアントの ThemeChanged イベントを発生させます。</summary>
      <param name="sender">VisualStyleTheme が初期化される場合以外は Null</param>
      <param name="e">EventArgs.Empty</param>
    </member>
    <member name="M:FarPoint.Win.VisualStyleTheme.Dispose">
      <summary>内部使用のみ。表示スタイル（XP テーマ）を破棄します。</summary>
    </member>
    <member name="M:FarPoint.Win.VisualStyleTheme.Dispose(System.Boolean)">
      <summary>内部使用のみ。表示スタイル（XP テーマ）のシステム リソースを解放します。</summary>
    </member>
    <member name="M:FarPoint.Win.VisualStyleTheme.Clone">
      <summary>内部使用のみ。表示スタイル（XP テーマ）のクローンを作成します。</summary>
      <returns></returns>
    </member>
    <member name="E:FarPoint.Win.VisualStyleTheme.ThemeChanged">
      <summary>システムテーマが変更されたときに発生します。</summary>
    </member>
    <member name="P:FarPoint.Win.VisualStyleTheme.ClassList">
      <summary>表示スタイル（XP テーマ）情報を検索するためのクラス リストを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.VisualStyleTheme.IsThemeActive">
      <summary>表示スタイル（XP テーマ）がアクティブかどうかを取得します。</summary>
    </member>
    <member name="P:FarPoint.Win.VisualStyleTheme.hTheme">
      <summary>uxtheme.dll から取得した表示スタイル（Windows XP テーマ）ハンドルを取得します。</summary>
    </member>
    <member name="T:FarPoint.Win.VisualStyleTheme.Theme">
      <summary>hTheme オブジェクトのラッパー</summary>
    </member>
    <member name="T:FarPoint.Win.VisualStyleTheme.ThemeChangedWindow">
      <summary>WM_THEMECHANGED メッセージ（0x031A）をキャッチするためのウィンドウ。</summary>
    </member>
    <member name="E:FarPoint.Win.VisualStyleTheme.ThemeChangedWindow.ThemeChanged">
      <summary>内部使用のみ。ThemeChanged イベントのハンドラ。</summary>
    </member>
    <member name="T:FarPoint.Win.FpVisualStyleRenderer">
      <summary>System.Windows.Forms.VisualStyles.VisualStyleElementに関する情報を描画および取得するためのレンダラーを表します。</summary>
    </member>
    <member name="M:FarPoint.Win.FpVisualStyleRenderer.#ctor(System.Windows.Forms.VisualStyles.VisualStyleElement)">
      <summary>FarPoint.Win.FpVisualStyleRendererの新しいインスタンスを初期化します。</summary>
      <param name="element">このFarPoint.Win.FpVisualStyleRendererによって表されるSystem.Windows.Forms.VisualStyles.VisualStyleElement。</param>
    </member>
    <member name="M:FarPoint.Win.FpVisualStyleRenderer.DrawBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle)">
      <summary>FarPoint.Win.FpVisualStyleRendererの新しいインスタンスを初期化します。</summary>
      <param name="idc">背景画像の描画に使用されるSystem.Drawing.IDeviceContext。</param>
      <param name="bounds">背景画像が描画されるSystem.Drawing.Rectangle。</param>
    </member>
    <member name="M:FarPoint.Win.FpVisualStyleRenderer.GetInteger(System.Windows.Forms.VisualStyles.IntegerProperty)">
      <summary>現在のビジュアルスタイル要素の指定した整数プロパティの値を返します。</summary>
      <param name="prop">現在のビジュアルスタイル要素の取得するプロパティ値を指定するSystem.Windows.Forms.VisualStyles.IntegerProperty値の1つ。</param>
      <returns></returns>
    </member>
    <member name="T:FarPoint.Win.XmlTypeConverter">
      <summary>ISerializeSupport（または関連シリアル化インタフェース）を実装するオブジェクトの型コンバータ。オブジェクトとそのxml表現を互いに変換します。</summary>
    </member>
    <member name="M:FarPoint.Win.XmlTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>指定した型を境界線オブジェクトに変換できるかどうかを判定します。</summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="sourceType">型</param>
      <returns>sourceTypeがStringの場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="T:FarPoint.Win.UniscribeUtil">
      <summary>Uniscribe API ライブラリに基づくアンセーフ ネイティブ メソッドを定義します。USP - Unicode コンプレックス スクリプト プロセッサ。</summary>
      <remarks>UnisribeUtil クラスは、Uniscribe SDK で提供された関数を定義します。</remarks>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.TextOutL2RToScreen(System.IntPtr,System.Drawing.Rectangle,System.String,System.Int32,System.Drawing.Text.HotkeyPrefix)">
      <summary>テキストを画面の左から右に表示します。</summary>
      <param name="hdc">HDC</param>
      <param name="bounds">境界</param>
      <param name="text">テキスト</param>
      <param name="length">長さ</param>
      <param name="hotkeyEffect">ホットキー接頭辞</param>
      <remarks></remarks>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.TextOutR2LToScreen(System.IntPtr,System.Drawing.Rectangle,System.String,System.Int32,System.Drawing.Text.HotkeyPrefix,System.Int32)">
      <summary>テキストを画面の右から左に表示します。</summary>
      <param name="hdc">HDC</param>
      <param name="bounds">境界</param>
      <param name="text">テキスト</param>
      <param name="length">長さ</param>
      <param name="hotkeyEffect">ホットキー接頭辞</param>
      <param name="embeddingLevel">埋め込みレベルを表す数値</param>
    </member>
    <member name="T:FarPoint.Win.UniscribeUtil.Result">
      <summary>この列挙体は Uniscribe API の戻り値を定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Result.Ok">
      <summary>関数の実行が成功しました。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Result.False">
      <summary>関数の実行が失敗しました。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Result.OutOfMemory">
      <summary>メモリが不足しています。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Result.InvalidHandle">
      <summary>これは無効なハンドルです。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Result.ArgumentsInvalid">
      <summary>一部のパラメータが無効です。</summary>
    </member>
    <member name="T:FarPoint.Win.UniscribeUtil.Control">
      <summary>Control 構造体は、Itemize メソッドにアイテム化制御フラグを提供します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Control.ContextDigitsFlagMask">
      <summary>ContextDigits プロパティのデータの取得または設定に使用されるマスクを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Control.InvertPreBoundDirFlagMask">
      <summary>InvertPreBoundDir プロパティのデータの取得または設定に使用されるマスクを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Control.InvertPostBoundDirFlagMask">
      <summary>InvertPostBoundDir プロパティのデータの取得または設定に使用されるマスクを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Control.LinkStringBeforeFlagMask">
      <summary>LinkStringBefore プロパティのデータの取得または設定に使用されるマスクを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Control.LinkStringAfterFlagMask">
      <summary>LinkStringAfter プロパティのデータの取得または設定に使用されるマスクを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Control.NeutralOverrideFlagMask">
      <summary>NeutralOverride プロパティのデータの取得または設定に使用されるマスクを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Control.NumericOverrideFlagMask">
      <summary>NumericOverride プロパティのデータの取得または設定に使用されるマスクを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Control.LegacyBidiClassFlagMask">
      <summary>LegacyBidiClass プロパティのデータの取得または設定に使用されるマスクを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Control._defaultLanguage">
      <summary>デフォルトの言語を示します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Control._flags">
      <summary>フラグを示します。</summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.Control.DefualtLanguage">
      <summary>Unicode 値があいまいな場合に使用する言語を指定します。これは一次言語とサブ言語の両方を含む LANGID です。<see cref="T:FarPoint.Win.UniscribeUtil.State" /> の DigitSubstitute が設定されている場合に数字の形状を選択するために、数値処理で使用されます。</summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.Control.ContextDigits">
      <summary>DefaultLanguage ではなく、前にある直近のストロング テキストに従って国の数字が選択されることを指定します。</summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.Control.InvertPreBoundDir">
      <summary>デフォルトでは、文字列の先頭のテキストは、ベース埋め込みレベルが０の場合にはストロング LTR 文字の後に続くようにレイアウトされ、ベース埋め込みレベルが１の場合にはストロング RTL 文字に続くようにレイアウトされます。初期コンテキストをベース埋め込みレベルの逆に変更するには、InvertPreBoundDir を設定します。このメンバは、GetCharacterPlacement のレガシ サポートのために用意されています。</summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.Control.InvertPostBoundDir">
      <summary>デフォルトでは、文字列の最後のテキストは、ベース埋め込みレベルと同じ方向のテキストがその後に続くようにレイアウトされます。末尾コンテキストをベース埋め込みレベルの逆に変更するには、InvertPreBoundDir を設定します。このフラグは、GetCharacterPlacement のレガシ サポートのために用意されています。</summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.Control.LinkStringBefore">
      <summary>文字列の最初の文字を、前の文字と結合されているような形状にします。</summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.Control.LinkStringAfter">
      <summary>文字列の最後の文字を、後の文字と結合されているような形状にします。</summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.Control.NeutralOverride">
      <summary>文字列内のすべてのニュートラル文字を、その前後の文字の埋め込みレベルを持つストロング文字として扱います。これは実質的にニュートラル文字を元の位置に固定し、文字の配置変更はニュートラル文字の間でのみ起こるようになります。</summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.Control.NumericOverride">
      <summary>文字列内のすべての数字を、その前後の文字の埋め込みレベルを持つストロング文字として扱います。これは実質的に数字を元の位置に固定し、文字の配置変更は数字の間でのみ起こるようになります。</summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.Control.LegacyBidiClass">
      <summary>プラス記号とマイナス記号をニュートラル文字（つまり、方向を持たない文字）として扱い、スラッシュを一般的な区切り文字として扱います。 Windows XP：プラス記号とマイナス記号はヨーロッパの区切り文字として扱われます。</summary>
    </member>
    <member name="T:FarPoint.Win.UniscribeUtil.State">
      <summary>State 構造体は、Unicode アルゴリズム状態を初期化するために Script.Itemize の入力パラメータとして使用します。また、ScriptItemize によって返される解析結果の要素でもあります。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.State.BidiLevelFlagMask">
      <summary>BidiLevel プロパティのデータの取得または設定に使用されるマスクを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.State.OverrideDirectionFlagMask">
      <summary>OverrideDirection プロパティのデータの取得または設定に使用されるマスクを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.State.InhibitSymSwapFlagMask">
      <summary>InhibitSymSwap プロパティのデータの取得または設定に使用されるマスクを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.State.CharShapeFlagMask">
      <summary>CharShape プロパティのデータの取得または設定に使用されるマスクを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.State.DigitSubstituteFlagMask">
      <summary>DigitSubstitute プロパティのデータの取得または設定に使用されるマスクを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.State.InhibitLigateFlagMask">
      <summary>InhibitLigate プロパティのデータの取得または設定に使用されるマスクを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.State.DisplayZWGFlagMask">
      <summary>DisplayZWG プロパティのデータの取得または設定に使用されるマスクを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.State.ArabicNumContextFlagMask">
      <summary>ArabicNumContext プロパティのデータの取得または設定に使用されるマスクを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.State.GcpClustersFlagMask">
      <summary>GcpClusters プロパティのデータの取得または設定に使用されるマスクを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.State._flags">
      <summary>スクリプト状態のフラグを保存します。</summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.State.BidiLevel">
      <summary>Unicode 双方向アルゴリズムに従ってこのランのすべての文字に関連付けられた埋め込みレベル。ScriptItemize に渡すとき、LTR ベース埋め込みレベルの場合は０で初期化し、RTL の場合は１で初期化する必要があります。</summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.State.OverrideDirection">
      <summary>このレベルがオーバーライド レベル（LRO/RLO）の場合は True。オーバーライド レベルでは、文字は左から右か右から左のどちらか一方向にのみレイアウトされます。数字やストロング文字が逆向きになることはありません。この初期値は、文字列内の LRE、RLE、LRO、RLO のいずれかのコードによってリセットされることに注意してください。</summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.State.InhibitSymSwap">
      <summary>シェーピング エンジンが、Unicode ミラー グリフ（カッコなど）のミラーリングを無視する場合は True。Unicode 文字の ISS によって設定され、ASS によってクリアされます。</summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.State.CharShape">
      <summary>Unicode のアラビア表示形領域の文字コードをシェーピングする場合は True（実装されていません）。</summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.State.DigitSubstitute">
      <summary>U+0030 ～ U+0039 の文字コード（ヨーロッパ数字）を国の数字に置き換える場合は True。Unicode の NADS によって設定され、NODS によってクリアされます。</summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.State.InhibitLigate">
      <summary>アラビア文字またはヘブライ文字のシェーピングに合字を使用しない場合は True。</summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.State.DisplayZWG">
      <summary>制御文字を表示グリフとしてシェーピングする場合は True（通常、制御文字は空白グリフとしてシェーピングされ、幅はゼロになります）。</summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.State.ArabicNumContext">
      <summary>True の場合は、先行するストロング文字列が、Unicode 規格バージョン 2.0 に記載されたルール P0 の目的でアラビア語であったことを示します。これは通常、アラビア語の RTL 段落をアイテム化する前は True、それ以外の場合は False に設定されます。</summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.State.GcpClusters">
      <summary>GetCharacterPlacement レガシ サポートの目的のみ。アラビア語版およびヘブライ語版 Windows で GetCharacterPlacement が行うのと同じように pwLogClust 配列を生成するよう ScriptShape に要求する場合は、True に初期化します。アラビア語とヘブライ語のアイテムのみに影響します。</summary>
    </member>
    <member name="T:FarPoint.Win.UniscribeUtil.TextAnalyseFlags">
      <summary>Text.Analyse のフラグを定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.Password">
      <summary>入力文字列に、iLength に指定した回数複製される単一の文字が含まれます。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.Tab">
      <summary>タブを展開します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.Clip">
      <summary>文字列を要求された幅で切り取ります。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.Fit">
      <summary>文字列を要求された幅に位置揃えします。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.DZWG">
      <summary>制御文字の表示グリフを提供します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.Fallback">
      <summary>代替フォントを使用します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.Break">
      <summary>ブレーク フラグ（文字および単語の停止位置かどうか）を返します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.Glyphs">
      <summary>グリフ、位置、および属性を生成します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.RightToLeft">
      <summary>ベース埋め込みレベル１。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.GCP">
      <summary>GetCharacterPlacement 関数の規約での欠損グリフおよび LogCLust を返します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.Hotkey">
      <summary>&amp; を後続コードポイントの下線に置き換えます。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.Metafile">
      <summary>グリフを使わず、ExtTextOutW Unicode 関数を呼び出してアイテムを書き出します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.Link">
      <summary>FE フォントのリンク／関連付けを非コンプレックス テキストに適用します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.HideHotkey">
      <summary>表示文字列から最初の &amp; を削除します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.HotkeyOnly">
      <summary>下線のみを表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.FullMeasure">
      <summary>内部使用。完全な幅を計算し、要求された幅に収まる文字数を出力します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.LPKANSIFALLBACK">
      <summary>内部使用。BiDi hDC の呼び出しを除くすべての LPK Ansi 呼び出しに対して FallBack を有効にします。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.PIDX">
      <summary>内部使用。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.LAYOUTRTL">
      <summary>内部使用。DC がミラーリングされるときに使用されます。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.DONTGLYPH">
      <summary>内部使用。メタファイル化中に GDI によってのみ使用されます。位置決めのために ExtTextOutA を使用します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.NOKASHIDA">
      <summary>内部使用。非アラビア語グリフのみを位置揃えする場合に GCP によって使用されます。</summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.SCRIPT_ANALYSIS.eScript">
      <summary>シェーピング エンジン</summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.SCRIPT_ANALYSIS.RTLFlag">
      <summary>レンダリングの向き</summary>
      <value>[RTL flag] の場合は <c>True</c>、それ以外の場合は <c>False</c>。</value>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.SCRIPT_ANALYSIS.LayoutRTLFlag">
      <summary>GCP クラスの ARABIC/HEBREW および LOCALNUMBER に対して設定します。</summary>
      <value>[layout RTL flag] の場合は <c>True</c>、それ以外の場合は <c>False</c>。</value>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.SCRIPT_ANALYSIS.LinkBeforeFlag">
      <summary>このアイテムの前に ZWJ があったことを示します。</summary>
      <value>[link before flag] の場合は <c>True</c>、それ以外の場合は <c>False</c>。</value>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.SCRIPT_ANALYSIS.LinkAfterFlag">
      <summary>このアイテムの後に ZWJ があることを示します。</summary>
      <value>[link after flag] の場合は <c>True</c>、それ以外の場合は <c>False</c>。</value>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.SCRIPT_ANALYSIS.LogicalOrder">
      <summary>ScriptShape/Place への入力としてクライアントによって設定されます。</summary>
      <value>[logical order] の場合は <c>True</c>、それ以外の場合は <c>False</c>。</value>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.SCRIPT_ANALYSIS.NoGlyphIndexFlag">
      <summary>ScriptShape/Place によって生成されます。このアイテムはグリフ インデックスを使用しません。</summary>
      <value>[no glyph index flag] の場合は <c>True</c>、それ以外の場合は <c>False</c>。</value>
    </member>
    <member name="T:FarPoint.Win.UniscribeUtil.Tab">
      <summary>Text.Analyse メソッドのタブ位置を定義します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Tab._tabStops">
      <summary>TabStops の長さと一致します（Uniscribe API で必要とされます）。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Tab.Scale">
      <summary>iTabOrigin および pTabStops に設定された値のスケーリング係数。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Tab.TabStops">
      <summary>各エントリはタブ ストップ位置を指定します。正の値は近端の位置揃えを示し、負の値は遠端の位置揃えを示します。</summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Tab.TabOrigin">
      <summary>タブ ストップの初期オフセット。</summary>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.Tab.SafeNative">
      <summary>Uniscribe API に渡される前に呼び出されます。</summary>
    </member>
    <member name="T:FarPoint.Win.UniscribeUtil.DatumHelper">
      <summary>Uniscribe のデータ管理に役立つメソッドを定義します。</summary>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.DatumHelper.GetFlag(System.UInt16,System.UInt16)">
      <summary>ushort 値フラグからフラグを取得する内部メソッド。</summary>
      <param name="flags">フラグを含む<b>ushort</b></param>
      <param name="flagMask">フラグマスクを示す<b>ushort</b></param>
      <returns>フラグを返します。</returns>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.DatumHelper.GetFlag(System.UInt16,System.UInt16,System.Boolean)">
      <summary>ushort 値フラグからフラグを取得する内部メソッド。</summary>
      <param name="flags">フラグを含む<b>ushort</b></param>
      <param name="flagMask">フラグマスクを示す<b>ushort</b></param>
      <param name="param">値かどうか</param>
      <returns>フラグを返します。</returns>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.DatumHelper.GetFlag(System.Int16,System.Int16)">
      <summary>ushort 値フラグからフラグを取得する内部メソッド。</summary>
      <param name="flags">フラグを含む<b>short</b></param>
      <param name="flagMask">フラグマスクを示す<b>short</b></param>
      <returns>フラグを返します。</returns>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.DatumHelper.GetFlag(System.UInt64,System.UInt64)">
      <summary>ushort 値フラグからフラグを取得する内部メソッド。</summary>
      <param name="flags">フラグを含む<b>UInt64</b></param>
      <param name="flagMask">フラグマスクを示す<b>UInt64</b></param>
      <returns>フラグを返します。</returns>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.DatumHelper.GetFlag(System.Byte,System.Byte)">
      <summary>ushort 値フラグからフラグを取得する内部メソッド。</summary>
      <param name="flags">フラグを含む<b>byte</b></param>
      <param name="flagMask">フラグマスクを示す<b>byte</b></param>
      <returns>フラグを返します。</returns>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.DatumHelper.GetFlag(System.UInt64,System.UInt64,System.Boolean)">
      <summary>フラグを取得します。</summary>
      <param name="flags">フラグ</param>
      <param name="flagMask">フラグマスク</param>
      <param name="param">値かどうか</param>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.DatumHelper.SetFlag(System.UInt16@,System.UInt16,System.Boolean)">
      <summary>値をフラグに設定する内部メソッド。</summary>
      <param name="flags">フラグを含む<b>ushort</b></param>
      <param name="flagMask">フラグマスクを示す<b>ushort</b></param>
      <param name="value">値を示す<b>bool</b>値</param>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.DatumHelper.SetFlag(System.UInt16@,System.UInt16,System.UInt16)">
      <summary>値をフラグに設定する内部メソッド。</summary>
      <param name="flags">フラグを含む<b>ushort</b></param>
      <param name="flagMask">フラグマスクを示す<b>ushort</b></param>
      <param name="value">値を示す<b>ushort</b>値</param>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.DatumHelper.SetFlag(System.Int16@,System.Int16,System.Boolean)">
      <summary>値をフラグに設定する内部メソッド。</summary>
      <param name="flags">フラグを含む<b>short</b></param>
      <param name="flagMask">フラグマスクを示す<b>short</b></param>
      <param name="value">値を示す<b>bool</b>値</param>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.DatumHelper.SetFlag(System.UInt64@,System.UInt64,System.Boolean)">
      <summary>値をフラグに設定する内部メソッド。</summary>
      <param name="flags">フラグを含む<b>UInt64</b></param>
      <param name="flagMask">フラグマスクを示す<b>UInt64</b></param>
      <param name="value">値を示す<b>bool</b>値</param>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.DatumHelper.SetFlag(System.Byte@,System.Byte,System.Boolean)">
      <summary>値をフラグに設定する内部メソッド。</summary>
      <param name="flags">フラグを含む<b>byte</b></param>
      <param name="flagMask">フラグマスクを示す<b>byte</b></param>
      <param name="value">値を示す<b>bool</b>値</param>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.DatumHelper.SetFlag(System.UInt64@,System.UInt64,System.UInt64)">
      <summary>フラグを設定します。</summary>
      <param name="flags">フラグ</param>
      <param name="flagMask">フラグマスク</param>
      <param name="value">値</param>
    </member>
    <member name="F:FarPoint.Win.DropDownOptions.None">
      <summary>ドロップダウンリストを表示しません。</summary>
    </member>
    <member name="F:FarPoint.Win.DropDownOptions.Inherit">
      <summary>デフォルトの動作を継承します。</summary>
    </member>
    <member name="F:FarPoint.Win.DropDownOptions.Button">
      <summary>ドロップダウンボタンクリック時にドロップダウンリストを表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.DropDownOptions.Text">
      <summary>テキスト領域クリック時にドロップダウンリストを表示します。</summary>
    </member>
    <member name="F:FarPoint.Win.DropDownOptions.ButtonAndText">
      <summary>ドロップダウンボタンとテキスト領域クリック時にドロップダウンリストを表示します。</summary>
    </member>
  </members>
</doc>